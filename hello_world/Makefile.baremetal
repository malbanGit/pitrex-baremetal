# I prefer "handmade" make files, it is a little bit of more worktime to start with
# but I can read them, others can, and I know what they do!
#
# export PATH=/home/chrissalo/gcc-arm/bin:$PATH


# -DLOADER_START=0x4000000
# must also be defined/changed in *.S files, since they do not parse defines
# REMEMBER in bcm2835
# MEM_COHERENT_REGION s defined now as 0x3f00000 !!!!
BUILD_DIR_PURE := build.baremetal
BUILD_DIR := $(BUILD_DIR_PURE)/

BAREMETAL_DIR := ../pitrex/baremetal/
VECTREX_DIR := ../pitrex/vectrex/
LOADER_DIR := ../pitrex/loader/
VECX_DIR := ../vectrexBase/

LIB_DIR :=../pitrex/lib
INC_DIR_PITREX := ../pitrex
INC_DIR_LIBRARY := ../pitrex/baremetal/lib2835
INC_DIR_USPI := $(VECTREX_DIR)uspi/include

CFLAGS := -Ofast -I$(INC_DIR_PITREX) -I$(INC_DIR_LIBRARY) -I$(INC_DIR_USPI) -L$(LIB_DIR) -mfloat-abi=hard -nostartfiles -mfpu=vfp -march=armv6zk -mtune=arm1176jzf-s \
	-DRPI0 -DFREESTANDING -DPITREX_DEBUG -DMHZ1000 -DLOADER_START=0x4000000
CC	= arm-none-eabi-gcc
GCC	= gcc
AS	= $(CC)
LD	= arm-none-eabi-ld
AR	= arm-none-eabi-ar

.PHONY: baremetalLib
.PHONY: vectrexLib
.PHONY: loader

all:	dirCheck baremetalLib vectrexLib loader hello.img pacman.img window.img maze.img perspective.img

dirCheck:
	if [ ! -d $(BUILD_DIR_PURE) ]; then mkdir $(BUILD_DIR_PURE); fi

baremetalLib: dirCheck
	$(MAKE) -C $(BAREMETAL_DIR) -f Makefile all

vectrexLib: dirCheck
	$(MAKE) -C $(VECTREX_DIR) -f Makefile.baremetal all

loader:
	$(MAKE) -C $(LOADER_DIR) -f Makefile all


$(BUILD_DIR)hello.o: hello.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)hello.o -c hello.c

hello.img: baremetalLib vectrexLib loader $(BUILD_DIR)hello.o
	$(CC) $(CFLAGS) -o $(BUILD_DIR)hello.elf.img $(BUILD_DIR)hello.o \
	 -lvectrexInterface  -luspi -lm -lff12c  -ldebug  -lhal -lutils -lconsole -lff12c -lbob -li2c -lbaremetal -larm -lbcm2835 $(LIB_DIR)/linkerHeapDefBoot.ld
	$(RM) hello.img
	arm-none-eabi-objcopy $(BUILD_DIR)hello.elf.img -O binary hello.img
ifdef MAKE_IMAGE
	cp hello.img /media/sf_ubuntu
	cp hello.img /media/sf_E_DRIVE
endif

$(BUILD_DIR)pacman.o: pacman.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)pacman.o -c pacman.c

pacman.img: baremetalLib vectrexLib loader $(BUILD_DIR)pacman.o
	$(CC) $(CFLAGS) -o $(BUILD_DIR)pacman.elf.img $(BUILD_DIR)pacman.o \
	 -lvectrexInterface  -luspi -lm -lff12c  -ldebug  -lhal -lutils -lconsole -lff12c -lbob -li2c -lbaremetal -larm -lbcm2835 $(LIB_DIR)/linkerHeapDefBoot.ld
	$(RM) pacman.img
	arm-none-eabi-objcopy $(BUILD_DIR)pacman.elf.img -O binary pacman.img
ifdef MAKE_IMAGE
	cp pacman.img /media/sf_ubuntu
	cp pacman.img /media/sf_E_DRIVE
endif

$(BUILD_DIR)window.o: window.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)window.o -c window.c

window.img: baremetalLib vectrexLib loader $(BUILD_DIR)window.o
	$(CC) $(CFLAGS) -o $(BUILD_DIR)window.elf.img $(BUILD_DIR)window.o \
	 -lvectrexInterface  -luspi -lm -lff12c  -ldebug  -lhal -lutils -lconsole -lff12c -lbob -li2c -lbaremetal -larm -lbcm2835 $(LIB_DIR)/linkerHeapDefBoot.ld
	$(RM) window.img
	arm-none-eabi-objcopy $(BUILD_DIR)window.elf.img -O binary window.img
ifdef MAKE_IMAGE
	cp window.img /media/sf_ubuntu
	cp window.img /media/sf_E_DRIVE
endif


$(BUILD_DIR)maze.o: maze.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)maze.o -c maze.c

maze.img: baremetalLib vectrexLib loader $(BUILD_DIR)maze.o
	$(CC) $(CFLAGS) -o $(BUILD_DIR)maze.elf.img $(BUILD_DIR)maze.o \
	 -lvectrexInterface  -luspi -lm -lff12c  -ldebug  -lhal -lutils -lconsole -lff12c -lbob -li2c -lbaremetal -larm -lbcm2835 $(LIB_DIR)/linkerHeapDefBoot.ld
	$(RM) maze.img
	arm-none-eabi-objcopy $(BUILD_DIR)maze.elf.img -O binary maze.img
ifdef MAKE_IMAGE
	cp maze.img /media/sf_ubuntu
	cp maze.img /media/sf_E_DRIVE
endif


$(BUILD_DIR)perspective.o: perspective.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)perspective.o -c perspective.c

perspective.img: baremetalLib vectrexLib loader $(BUILD_DIR)perspective.o
	$(CC) $(CFLAGS) -o $(BUILD_DIR)perspective.elf.img $(BUILD_DIR)perspective.o \
	 -lvectrexInterface  -luspi -lm -lff12c  -ldebug  -lhal -lutils -lconsole -lff12c -lbob -li2c -lbaremetal -larm -lbcm2835 $(LIB_DIR)/linkerHeapDefBoot.ld
	$(RM) perspective.img
	arm-none-eabi-objcopy $(BUILD_DIR)perspective.elf.img -O binary perspective.img
ifdef MAKE_IMAGE
	cp perspective.img /media/sf_ubuntu
	cp perspective.img /media/sf_E_DRIVE
endif



clean: dirCheck
	$(RM) $(BUILD_DIR)*.*
	$(RM) hello.img pacman.img window.img maze.img perspective.img

clean-all: dirCheck
	$(MAKE) -C $(BAREMETAL_DIR) -f Makefile clean
	$(MAKE) -C $(LOADER_DIR) -f Makefile clean
	$(MAKE) -C $(VECTREX_DIR) -f Makefile.baremetal clean
	$(RM) $(BUILD_DIR)*.*
	$(RM) hello.img pacman.img window.img maze.img perspective.img

