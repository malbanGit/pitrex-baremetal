# I prefer "handmade" make files, it is a little bit of more worktime to start with
# but I can read them, others can, and I know what they do!
#
# export PATH=/home/chrissalo/gcc-arm/bin:$PATH


# -DLOADER_START=0x4000000
# must also be defined/changed in *.S files, since they do not parse defines
# REMEMBER in bcm2835
# MEM_COHERENT_REGION s defined now as 0x3f00000 !!!!
BUILD_DIR_PURE := build.baremetal
BUILD_DIR := $(BUILD_DIR_PURE)/

BAREMETAL_DIR := ../pitrex/baremetal/
VECTREX_DIR := ../pitrex/vectrex/
LOADER_DIR := ../pitrex/loader/

LIB_DIR :=../pitrex/lib
INC_DIR_PITREX := ../pitrex
INC_DIR_LIBRARY := ../pitrex/baremetal/lib2835
INC_DIR_USPI := $(VECTREX_DIR)uspi/include

CFLAGS := -Ofast -I$(INC_DIR_PITREX) -I$(INC_DIR_LIBRARY) -I$(INC_DIR_USPI) -L$(LIB_DIR) -mfloat-abi=hard -nostartfiles -mfpu=vfp -march=armv6zk -mtune=arm1176jzf-s \
	-DRPI0 -DFREESTANDING -DPITREX_DEBUG -DMHZ1000 -DLOADER_START=0x4000000 -DPITREX
CC	= arm-none-eabi-gcc
GCC	= gcc
AS	= $(CC)
LD	= arm-none-eabi-ld
AR	= arm-none-eabi-ar

.PHONY: baremetalLib
.PHONY: vectrexLib
.PHONY: loader

all:	dirCheck baremetalLib vectrexLib loader chess.img 

dirCheck:
	if [ ! -d $(BUILD_DIR_PURE) ]; then mkdir $(BUILD_DIR_PURE); fi

baremetalLib: dirCheck
	$(MAKE) -C $(BAREMETAL_DIR) -f Makefile all

vectrexLib: dirCheck
	$(MAKE) -C $(VECTREX_DIR) -f Makefile.baremetal all

loader:
	$(MAKE) -C $(LOADER_DIR) -f Makefile all


OBJS := 	$(BUILD_DIR)chess_main.o $(BUILD_DIR)chess_engine.o $(BUILD_DIR)platform.o $(BUILD_DIR)window.o\

# project files
$(BUILD_DIR)chess_main.o: chess_main.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)chess_main.o -c chess_main.c

$(BUILD_DIR)chess_engine.o: chess_engine.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)chess_engine.o -c chess_engine.c

$(BUILD_DIR)platform.o: platform.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)platform.o -c platform.c

$(BUILD_DIR)window.o: window.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)window.o -c window.c

chess.img: baremetalLib vectrexLib loader $(OBJS)
	$(CC) $(CFLAGS) -o $(BUILD_DIR)chess.elf.img $(OBJS) \
	 -lvectrexInterface  -luspi -lm -lff12c  -ldebug  -lhal -lutils -lconsole -lff12c -lbob -li2c -lbaremetal -larm -lbcm2835 $(LIB_DIR)/linkerHeapDefBoot.ld
	$(RM) chess.img
	arm-none-eabi-objcopy $(BUILD_DIR)chess.elf.img -O binary chess.img
ifdef MAKE_IMAGE
	cp chess.img /media/sf_ubuntu
	cp chess.img /media/sf_E_DRIVE
endif

clean: dirCheck
	$(RM) $(BUILD_DIR)*.*
	$(RM) chess.img

clean-all: dirCheck
	$(MAKE) -C $(BAREMETAL_DIR) -f Makefile clean
	$(MAKE) -C $(LOADER_DIR) -f Makefile clean
	$(MAKE) -C $(VECTREX_DIR) -f Makefile.baremetal clean
	$(RM) $(BUILD_DIR)*.*
	$(RM) chess.img
