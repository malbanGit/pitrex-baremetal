
// SOUNDS
// AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_NewLife.afx"
unsigned char Ast_NewLife_data[]=
{
 0xEC, 0x6C, 0x00, 0x00, 0xAE, 0x20, 0x00, 0x8E, 0x8E, 0x80,
 0x80, 0x80, 0x8E, 0x8E, 0x8E, 0x80, 0x80, 0x80, 0x8E, 0x8E,
 0x8E, 0x80, 0x80, 0x80, 0x8E, 0x8E, 0x8E, 0x80, 0x80, 0x80,
 0x8E, 0x8E, 0x8E, 0x80, 0x80, 0x80, 0x8E, 0x8E, 0x8E, 0x80,
 0x80, 0x80, 0x8E, 0x8E, 0x8E, 0x80, 0x80, 0x80, 0x8E, 0x8E,
 0x8E, 0x80, 0x80, 0x80, 0x8E, 0x8E, 0x8E, 0x80, 0x80, 0x8E,
 0x8E, 0x8E, 0x80, 0x80, 0x80, 0x8E, 0x8E, 0x8E, 0x80, 0x80,
 0x80, 0xB0, 0x00, 0x00, 0xD0, 0x20
 };
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_PlayerAstExplosion.afx"
unsigned char Ast_PlayerAstExplosion_data[]=
{
   0x6F,  0x00,  0x02,  0x1F,  0x0F,  0x0F,  0x0F,  0x0F,  0x0E,  0x0E,
   0x0E,  0x0D,  0x0D,  0x0D,  0x0C,  0x0C,  0x0B,  0x0B,  0x0B,  0x0B,
   0x0A,  0x0A,  0x0A,  0x09,  0x09,  0x09,  0x08,  0x08,  0x08,  0x07,
   0x07,  0x07,  0x07,  0x06,  0x06,  0x06,  0x06,  0x05,  0x05,  0x05,
   0xD0,  0x20
 };
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_PlayerDeath.afx"
unsigned char Ast_PlayerDeath_data[]=
{
   0xF0,  0x00,  0x00,  0x00,  0x90,  0x90,  0x90,  0x90,  0x90,  0x90,
   0x90,  0x90,  0x90,  0x90,  0x90,  0x90,  0x90,  0x2F,  0x00,  0x02,
   0x2F,  0x00,  0x06,  0x0F,  0x0F,  0x0F,  0x0F,  0x0F,  0x0F,  0x0F,
   0x0E,  0x0E,  0x0E,  0x0E,  0x0E,  0x0E,  0x0E,  0x0E,  0x0D,  0x0D,
   0x0D,  0x0D,  0x0D,  0x0D,  0x0D,  0x0D,  0x0C,  0x0C,  0x0C,  0x0C,
   0x0C,  0x0C,  0x0C,  0x0C,  0x0B,  0x0B,  0x0B,  0x0B,  0x0B,  0x0B,
   0x0B,  0x0B,  0x0A,  0x0A,  0x0A,  0x0A,  0x0A,  0x0A,  0x0A,  0x0A,
   0x09,  0x09,  0x09,  0x09,  0x09,  0x09,  0x09,  0x09,  0x08,  0x08,
   0x08,  0x08,  0x08,  0x08,  0x08,  0x08,  0x07,  0x07,  0x07,  0x07,
   0x07,  0x07,  0x07,  0x07,  0x07,  0x07,  0x07,  0x06,  0x06,  0x06,
   0x06,  0x06,  0x06,  0x06,  0x06,  0x06,  0x06,  0x06,  0x06,  0x05,
   0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,
   0x05,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,
   0x04,  0x04,  0x04,  0x03,  0x03,  0x03,  0x03,  0x03,  0x03,  0x03,
   0x03,  0x03,  0x03,  0x03,  0x03,  0x03,  0x03,  0x03,  0x03,  0x02,
   0x02,  0x02,  0x02,  0x02,  0x02,  0x02,  0x02,  0x02,  0x02,  0x02,
   0x02,  0x02,  0x02,  0x02,  0x02,  0x01,  0x01,  0x01,  0x01,  0x01,
   0x01,  0x01,  0x01,  0x01,  0x01,  0x01,  0x01,  0x01,  0x01,  0x01,
   0xD0,  0x20
 };
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_PlayerShot.afx"
unsigned char Ast_PlayerShot_data[]=
{
  0xEC, 0x6C, 0x00, 0x00, 0xAD, 0x71, 0x00, 0xAE, 0x78, 0x00,
  0xAE, 0x7F, 0x00, 0xAD, 0x87, 0x00, 0xAD, 0x9A, 0x00, 0x8C,
  0xAC, 0xB4, 0x00, 0xAC, 0xC4, 0x00, 0xAC, 0xF0, 0x00, 0xAC,
  0x0E, 0x01, 0xAC, 0x68, 0x01, 0xB0, 0x00, 0x00, 0xD0, 0x20,
 };
 
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_Saucer.afx"
unsigned char Ast_Saucer_data[]=
{
  0xEC, 0x49, 0x00, 0x00, 0xAC, 0x40, 0x00, 0xAC, 0x39, 0x00,
  0xAC, 0x4C, 0x00, 0xAB, 0x6C, 0x00, 0xAB, 0x93, 0x00, 0xAB,
  0x72, 0x00, 0xAB, 0x55, 0x00, 0xB0, 0x00, 0x00, 0xD0, 0x20

 };
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_SaucerAstExplosion.afx"
unsigned char Ast_SaucerAstExplosion_data[]=
{
   0x6F,  0x00,  0x02,  0x1F,  0x0F,  0x0F,  0x0F,  0x0F,  0x0E,  0x0E,
   0x0E,  0x0E,  0x0D,  0x0D,  0x0D,  0x0C,  0x0C,  0x0B,  0x0B,  0x0B,
   0x0B,  0x0A,  0x0A,  0x0A,  0x09,  0x09,  0x09,  0x08,  0x08,  0x08,
   0x07,  0x07,  0x07,  0x07,  0x06,  0x06,  0x06,  0x06,  0x05,  0x05,
   0x05,  0xD0,  0x20
 };
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_SaucerShot.afx"
unsigned char Ast_SaucerShot_data[]=
{
  0xEC, 0x40, 0x00, 0x00, 0xAC, 0x39, 0x00, 0xAC, 0x4C, 0x00,
  0xAB, 0x6C, 0x00, 0xAB, 0x93, 0x00, 0xAB, 0x72, 0x00, 0xAB,
  0x55, 0x00, 0xB0, 0x00, 0x00, 0xD0, 0x20
};
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_ThumbHi.afx"
unsigned char Ast_ThumbHi_data[]=
{
   0xEF, 0x97, 0x03, 0x00, 0x8E, 0x8D, 0xB0, 0x00, 0x00, 0xD0,  0x20,
 };
 
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_ThumbLo.afx"
unsigned char Ast_ThumbLo_data[]=
{
   0xEF, 0x00, 0x04, 0x00, 0x8E, 0x8D, 0xB0, 0x00, 0x00, 0xD0,  0x20,
};

// AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_ThumbSaucer.afx"
unsigned char Ast_ThumbSaucer_data[]=
{
   0xEF,  0x00,  0x05,  0x00,  0x8E,  0x8D,  0xD0,  0x20 ,
 };
 // AYFX - Data of file[]= "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_PlayerThrust.afx"
unsigned char Ast_PlayerThrust_data[]=
{
   0x7C,  0x00,  0x00,  0x00,  0x1C,  0x1C,  0xD0,  0x20,
};
// AYFX - Data of file: "/Users/chrissalo/NetBeansProjects/Vide/tmp/AstSound/Ast_PlayerThrustOff.afx"
 unsigned char Ast_PlayerThrustOff_data[]=
{
  0xF0, 0x00, 0x00, 0x00, 0xD0, 0x20
};
 

/* CHANNELS:
 * top is higher priority within channel
 * 
 * 0 Player LIFE
 *   Player Fire
 *   Saucer Fire
 * 
 * 1 Saucer sound
 *   Thrust
 * 
 * 2 Explosions
 *   Thumb

 
 69     sndTimeExplosion    TIMER: Length Of Time To Play Explosion Sound 
 */
int oldExplTimer = 0;
int explosionOngoing = 0;
int explosionShadow=0; // 0x3600
int thumbShadow=0; // 0x3a00
int latch0Saucer=0;  //0x3c00
int latch1SaucerFire=0; //0x3c01 
int latch2SaucerSel=0; // 0x3c02
int latch3Thrust=0; //0x3c03
int latch4ShipFire=0;// 0x3c04
int latch5Life=0;// 0x3c05
int latch6Unkown=0;// 0x3c06
int latch7Unkown=0;// 0x3c07

void handleSound()
{
  // CHANNEL 2
  int explVol = (ReadMemory(0x3600)   & 0x3c) >> 2; 
//  printf("volume: %02x\n\r", explVol); 

  if (explVol != 0x0f) explosionOngoing = 0;

  if ((!explosionOngoing) && (explVol == 0x0f))
  {
    explosionOngoing = 1;
    // start an explosion
    int explPitch = (ReadMemory(0x3600) & 0xc0) >> 2; 
//    printf("      pl: ptich: %02x\n\r", explPitch); 
    if (explPitch == 0x30) // Medium asteroid, player, small ufo
    {
      if (useSamples)
      {
        v_playIRQSample(explosion2Sample, explostion2Size, explosion2Rate, PLAY_ONCE);
      }
      else
      {
        v_playSFXCont(Ast_PlayerDeath_data, 0, 0);
        v_playSFXCont(Ast_PlayerDeath_data, 1, 0);
        v_playSFXCont(Ast_PlayerDeath_data, 2, 0);
      }
    }
    else
    if (explPitch == 0x00) // Big asteroid, Big Ufo
    {
      if (useSamples)
      {
        v_playIRQSample(explosion1Sample, explostion1Size, explosion1Rate, PLAY_ONCE);
      }
      else
      {
        v_playSFXStart(Ast_PlayerAstExplosion_data, 2, 0);
      }
    }
    else
    if (explPitch == 0x20) // Small asteroid
    {
      if (useSamples)
      {
        v_playIRQSample(explosion3Sample, explostion3Size, explosion3Rate, PLAY_ONCE);
      }
      else
      {
        v_playSFXStart(Ast_PlayerAstExplosion_data, 2, 0);
      }
    }
  }
/*
  if (explosionShadow != ReadMemory(0x3600)) 
  { 
    if (ReadMemory(0x21B) == 0xA0)// && (explosionShadow != 0x81))// player explosion
    {
      if (explosionOngoing!=2)
      {
        explosionOngoing = 2;
        if (useSamples)
        {
          v_playIRQSample(explosion3Sample, explostion3Size, explosion3Rate, PLAY_ONCE);
        }
        else
        {
          v_playSFXCont(Ast_PlayerDeath_data, 0, 0);
          v_playSFXCont(Ast_PlayerDeath_data, 1, 0);
          v_playSFXCont(Ast_PlayerDeath_data, 2, 0);
        }
      }
    }
    else if ((ReadMemory(0x69)&0x3f) ==0x3e )
    {
      explosionOngoing = 1;
      if (useSamples)
      {
        v_playIRQSample(explosion1Sample, explostion1Size, explosion1Rate, PLAY_ONCE);
      }
      else
        v_playSFXStart(Ast_PlayerAstExplosion_data, 2, 0);
    }
  }
*/
  if (thumbShadow != ReadMemory(0x3a00))
  {
    /*
    printf("Sound Thumb: %02x -> %02x \r\n", thumbShadow,ReadMemory(0x3a00));
    Sound Thumb: 00 -> 14 
    Sound Thumb: 14 -> 04 
    Sound Thumb: 04 -> 10 
    Sound Thumb: 10 -> 00     
    */
    if (!explosionOngoing)
    {
      if (ReadMemory(0x3c01) == 0) // no saucer fire
      {
        if (ReadMemory(0x3a00) == 0x14) v_playSFXCont(Ast_ThumbHi_data, 2, 0);
        if (ReadMemory(0x3a00) == 0x10) v_playSFXCont(Ast_ThumbLo_data, 2, 0);
      }
    }
  }
  
  // CHANNEL 1
  if (latch0Saucer != ReadMemory(0x3c00))
  {
  }
  if (ReadMemory(0x3c00) != 0)
  {
     // will restart when saucer is still active due to 0x3c00 "watch"
     v_playSFXCont(Ast_Saucer_data, 1, 0);
  }

  if (latch3Thrust != ReadMemory(0x3c03))
  {
  }
  if (ReadMemory(0x3c03) != 0)
  {
     if (!ReadMemory(0x3c00))
      v_playSFXCont(Ast_PlayerThrust_data, 1, 0);
  }
  else
  {
     if (!ReadMemory(0x3c00))
      v_playSFXCont(Ast_PlayerThrustOff_data, 1, 0);
  }

  // CHANNEL 0  
  if (latch5Life != ReadMemory(0x3c05))
  {
    if (ReadMemory(0x3c05) != 0x00)
        v_playSFXCont(Ast_NewLife_data, 0, 0);
  }

  if (latch4ShipFire != ReadMemory(0x3c04))
  {
    if (ReadMemory(0x3c04) == 0x80)
    {
        if (ReadMemory(0x3c05) == 0x00)
          v_playSFXStart(Ast_PlayerShot_data, 0, 0);
    }
  }
  if (latch1SaucerFire != ReadMemory(0x3c01))
  {
    if (ReadMemory(0x3c01) !=0)
    {
      if (ReadMemory(0x3c05) == 0x00)
        if (ReadMemory(0x3c04) == 0x00)
        {
          if (useSamples)
            v_playIRQSample(sfireSample, sfireSize, sfireRate, PLAY_ONCE);
          else
              v_playSFXCont(Ast_SaucerShot_data, 0, 0);
        }
    }
  }
//  explosionShadow = ReadMemory(0x3600);
  thumbShadow = ReadMemory(0x3a00);
  latch0Saucer = ReadMemory(0x3c00);
  latch1SaucerFire = ReadMemory(0x3c01);
  latch2SaucerSel = ReadMemory(0x3c02);
  latch3Thrust = ReadMemory(0x3c03);
  latch4ShipFire = ReadMemory(0x3c04);
  latch5Life = ReadMemory(0x3c05);
}
