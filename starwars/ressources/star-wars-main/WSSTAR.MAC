	.TITLE	WSSTAR	STAR GENERATORS
ROOT==0				;OVERLAY
	.INCLUDE	WSCOMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===
				;GLOBAL OFFSETS
				;---
M$AX	==-10+0
M$AY	==-10+0+2
M$AZ	==-10+0+0+4

M$BX	==-10+0+8
M$BY	==-10+0+8+2
M$BZ	==-10+0+8+4

M$CX	==-10+0+10
M$CY	==-10+0+10+2
M$CZ	==-10+0+10+4

M$TX	==-10+18+0
M$TY	==-10+18+2
M$TZ	==-10+18+4

M$VX	==-10+6
M$VY	==-10+6+8
M$VZ	==-10+6+10

				;---
M$STNM	==50.			;STARS - MAX # ALLOWED
ST$QTL	==0			;POINTS TO TAIL
ST$QHD	==2			;POINTS TO HEAD OF QU (FIFO)
ST$QCX	==4			;CURRENT X VG POSITION
ST$QCY	==6			;CURRENT Y FOR RELATIVE VG CALCS
ST$IZQ	==8
ST$EQQ	==16.			;DIVVY SCREEN INTO 4 BY 4 (16. SECTORS)
				;
				;VECTORIZED STAR POINTS
ST$PP	==0			;FORWARD POINTER *MUST BE ZERO OFFSET (@)*
ST$PX	==2			;VECTOR X COMPONENT
ST$PY	==4			;VECTOR Y COMPONENT
ST$IZP	==6
ST$EQP	==M$STNM		;NUMBER OF POTENIAL STARS
				;

				;===
				;D-PAGE RAM
	.GLOBB RND.S1,RND.S2,RND.S3
	.GLOBB ST.BIC
	.GLOBB ST.BRT
	.GLOBB ST.CNT
	.GLOBB ST.GNB
	.GLOBB ST.RAM
	.GLOBB ST.UX
	.GLOBL ST.UY,ST.UZ
				;---
				;RAM
	.GLOBL ST.PNT
	.GLOBL ST.QU,ST.QUZ
				;---
				;OUTSIDE ROUTINES
	.GLOBL MGOWT
	.GLOBL RND8
				;---
				;MATH BOX
	.GLOBL M$PERS
	.GLOBL M$PSB2
	.GLOBL M$S1UN
	.GLOBL M$STBZ
	.GLOBL M.BIC,M.BICL
	.GLOBL M.DVD,M.QUO
	.GLOBL M.S1,M.U1
	.GLOBL M.STAD,M$STBC
	.GLOBL M.XP,M.XPS
	.GLOBL M.YP,M.YPH,M.YPS
	.GLOBL M.ZP,M.ZPH,M.ZPS
				;---
				;VECTOR GENERATOR
	.GLOBL VGCNTR
	.GLOBL VGCWHT,VGCGRN,VGCOPC
	.GLOBL VGOFFY
	.GLOBL VGSTAR
				;---
				;HARDWARE
				;---
				;SHIFT ROUTINES
				;===

	.MACRO .PAGG		;GLOBAL PAGE NUMBERS
	.PAGEG A		;STAR GENERATORS
	.ENDM

	.CSECT

	.PAGG
	.SBTTL	STARS--VWSTAR,STARGN,STARNW

J VWSTAR

	LDD ST.UX		;STARS RELATIVE MOVEMENT
	STD M$TX+M.U1
	LDD ST.UY
	STD M$TY+M.U1
	LDD ST.UZ
	STD M$TZ+M.U1
				;---
	LDX #ST.QU
	LDD #0
4$:				;---
	STD 0(X)++		;CLEAR OUT STAR QUE
	CMPX #ST.QUZ
	BLO 4$
				;---
	STA ST.GNB		;NO STAR TO GEN YET
	LDA #VGCWHT*100+VGCOPC&0FF00/100
	LDB ST.BRT		;INCLUDE OUTSIDE BRITENESS
	STD 0(Y)++
	LDD #M$STBC
	STD M.BIC
	STB ST.BIC
	NEGB
	ADDB #M$STBZ&0FF	;ZBIC-START= BIC GIVES COUNT OF STARS
	STB ST.CNT
	LDU #ST.PNT		;BEGIN OF CONVERTED STAR POINTS
	LDX #M.STAD		;STAR ADDRESS
10$:				;---
	STX ST.RAM		;MATH RAM POINTER
14$:				;---
	LDA #M$PSB2
	JSR MGOWT
	LDD M.XP		;X
	CMPD #100
	LBLE 90$			;B ?TOO CLOSE OR IN BACK? THEN NEW STAR
	CMPD #0FFF
	LBHI 90$		;B ?TOO FAR IN FRONT OR IN BACK?
	STD M.DVD
	LDD M.YPS		;?WIDTH IN VIEW ?
	SUBD M.XPS		;ELSE BEYOND VIEW
	LBHS 90$		;B ?BEYOND NORMAL VIEW ALSO? THEN GEN NEW STAR
	LDD M.ZPS		;?HITE IN VIEW ?
	SUBD M.XPS		;ELSE OUT OF VIEW
	LBHS 90$		;B IF OUT OF NORMAL VIEW ALSO, GEN NEW STAR
	LDD M.QUO		;  (PLUS 4.5 CYCLES BEFORE READ)
	STD M.XP
	LDA #M$PERS
	JSR MGOWT
	CLRB			;NO SECTOR YET
	LDA M.ZP
	LSRA
	ROLB			;EVERY 256 Y
	LSRA
	ROLB			;SIDE FOR +-512.
	LDA M.YP
	LSRA
	ROLB			;EVERY 256 X
	LSRA
	ROLB			;SIDE FOR +-512.
	LDA #ST$IZQ
	MUL
	LDX #ST.QU
	ABX			;X-->QUE BLOCK
	LDD ST$QHD(X)
	BNE 72$			;?FIRST IN THIS QU?
	STU ST$QHD(X)		;POINT TO FIRST STAR
	BRA 73$			;B NO PREVIOUS STAR
72$:				;---
	.IIF NE,ST$PP,.ERROR POINTER OFFSET MUST BE ZERO FOR @ TO WORK
	STU @ST$QTL(X)		;INITS FORWARD POINTER IN LAST (OR ONLY) ENTRY
73$:				;---
 	STU ST$QTL(X)		;TAIL POINTS TO LAST (OR ONLY)ENTRY
	LDD #0
	STD ST$PP(U)		;LAST ENTRY HAS ZERO POINTER
				;---
	LDD M.ZP
	SUBD ST$QCY(X)		;GET RELATIVE OFFSET
	ANDA #1F
	STD ST$PY(U)		;Y LONG VECTOR
	LDD M.YP
	SUBD ST$QCX(X)		;ANOTHER RELATIVE OFFSET
	ANDA #1F		;X LONG VECTOR
	CMPU ST$QHD(X)		;?AFTER FIRST STAR PER SECTOR?
	BEQ 74$
	ORA #00			;SHOW INTERCONNECT GRAPH
74$:				;---
	STD ST$PX(U)
	LDD M.ZP
	STD ST$QCY(X)		;NEW Y ABSOLUTE
	LDD M.YP
	STD ST$QCX(X)		;NEXT X ABSOLUTE
				;---
	LEAU ST$IZP(U)		;NEXT STAR ENTRY
	BRA 95$
90$:				;---
	LDX ST.RAM
	JSR STARNW
95$:
	INC ST.BIC
	LDX ST.RAM
	LEAX 8(X)
	DEC ST.CNT
	LBNE 10$
				;===
				;DISPLAY QUEUED STARS BY SECTOR LOCATION
	LDX #ST.QU
110$:				;LOOP THRU QUEUES
	LDU ST$QHD(X)
	BEQ 160$		;?STARS IN THIS SECTOR?
	LDD #VGOFFY&01FFF
	STD (Y)++
	LDD #0&01FFF		;OFFSET X
	STD (Y)++
120$:				;---LOOP THRU STARS
	LDD ST$PY(U)		;Y PORTION
	STD (Y)++
	LDD ST$PX(U)		;X PORTION
	STD (Y)++
	LDD VGSTAR
	STD (Y)++		;DRAW STAR SHAPE
	LDU ST$PP(U)		;POINTER TO NEXT STAR
	BNE 120$		;B LOOP IF MORE STARS
				;---
	LDD #VGCNTR
	STD (Y)++		;CENTER AFTER SECTOR OF STARS
160$:				;---
	LEAX ST$IZQ(X)		;NEXT SECTOR'S QUEUE
	CMPX #ST.QUZ
	BLO 110$
				;---
	LDD M$TX+M.S1
	STD M$TX+M.U1		;RESTORE POSITION
	LDD M$TY+M.S1
	STD M$TY+M.U1
	LDD M$TZ+M.S1
	STD M$TZ+M.U1
				;---
	RTS
				;===

J VWSTRG

	LDX #ST.QU
	LDD #0
4$:				;---
	STD 0(X)++		;CLEAR OUT STAR QUE
	CMPX #ST.QUZ
	BLO 4$
				;---
	STA ST.GNB		;NO STAR TO GEN YET
	LDD #VGCGRN*100+VGCOPC
	STD 0(Y)++
	LDD #M$STBC
	STD M.BIC
	STB ST.BIC
	NEGB
	ADDB #M$STBZ&0FF	;ZBIC-START= BIC GIVES COUNT OF STARS
	STB ST.CNT
	LDU #ST.PNT		;BEGIN OF CONVERTED STAR POINTS
	LDX #M.STAD		;STAR ADDRESS
10$:				;---
	STX ST.RAM		;MATH RAM POINTER
14$:				;---
	LDA #M$PSB2
	JSR MGOWT
	LDD M.XP		;X
	CMPD #100
	LBLE 90$			;B ?TOO CLOSE OR IN BACK? THEN NEW STAR
	STD M.DVD
	LDD M.YPS		;?WIDTH IN VIEW ?
	SUBD M.XPS		;ELSE BEYOND VIEW
	LBHS 90$		;B ?BEYOND NORMAL VIEW ALSO? THEN GEN NEW STAR
	LDD M.ZPS		;CHECK HITE ALSO
	SUBD M.XPS
	LBHS 90$
	LDD M.QUO		;  (PLUS 4.5 CYCLES BEFORE READ)
	STD M.XP
	LDA #M$PERS
	JSR MGOWT
	CLRB			;NO SECTOR YET
	LDA M.ZP
	LSRA
	ROLB			;EVERY 256 Y
	LSRA
	ROLB			;SIDE FOR +-512.
	LDA M.YP
	LSRA
	ROLB			;EVERY 256 X
	LSRA
	ROLB			;SIDE FOR +-512.
	LDA #ST$IZQ
	MUL
	LDX #ST.QU
	ABX			;X-->QUE BLOCK
	LDD ST$QHD(X)
	BNE 72$			;?FIRST IN THIS QU?
	STU ST$QHD(X)		;POINT TO FIRST STAR
	BRA 73$			;B NO PREVIOUS STAR
72$:				;---
	.IIF NE,ST$PP,.ERROR POINTER OFFSET MUST BE ZERO FOR @ TO WORK
	STU @ST$QTL(X)		;INITS FORWARD POINTER IN LAST (OR ONLY) ENTRY
73$:				;---
 	STU ST$QTL(X)		;TAIL POINTS TO LAST (OR ONLY)ENTRY
	LDD #0
	STD ST$PP(U)		;LAST ENTRY HAS ZERO POINTER
				;---
	LDD M.ZP
	SUBD ST$QCY(X)		;GET RELATIVE OFFSET
	ANDA #1F
	STD ST$PY(U)		;Y LONG VECTOR
	LDD M.YP
	SUBD ST$QCX(X)		;ANOTHER RELATIVE OFFSET
	ANDA #1F		;X LONG VECTOR
	CMPU ST$QHD(X)		;?AFTER FIRST STAR PER SECTOR?
	BEQ 74$
	ORA #00			;SHOW INTERCONNECT GRAPH
74$:				;---
	STD ST$PX(U)
	LDD M.ZP
	STD ST$QCY(X)		;NEW Y ABSOLUTE
	LDD M.YP
	STD ST$QCX(X)		;NEXT X ABSOLUTE
				;---
	LEAU ST$IZP(U)		;NEXT STAR ENTRY
	BRA 95$
90$:				;---
	LDX ST.RAM
	JSR STRNWG
95$:
	INC ST.BIC
	LDX ST.RAM
	LEAX 8(X)
	DEC ST.CNT
	LBNE 10$
				;===
				;DISPLAY QUEUED STARS BY SECTOR LOCATION
	LDX #ST.QU
110$:				;LOOP THRU QUEUES
	LDU ST$QHD(X)
	BEQ 160$		;?STARS IN THIS SECTOR?
	LDD #VGOFFY		;GROUND HORIZON DROPPED(INCLUDES VGOFFY)
	ANDA #01F
	STD (Y)++
	LDD #0&01FFF		;OFFSET X
	STD (Y)++
120$:				;---LOOP THRU STARS
	LDD ST$PY(U)		;Y PORTION
	STD (Y)++
	LDD ST$PX(U)		;X PORTION
	STD (Y)++
	LDD VGSTAR
	STD (Y)++		;DRAW STAR SHAPE
	LDU ST$PP(U)		;POINTER TO NEXT STAR
	BNE 120$		;B LOOP IF MORE STARS
				;---
	LDD #VGCNTR
	STD (Y)++		;CENTER AFTER SECTOR OF STARS
160$:				;---
	LEAX ST$IZQ(X)		;NEXT SECTOR'S QUEUE
	CMPX #ST.QUZ
	BLO 110$
				;---
	RTS
				;===
	
STARNW:			;---
	JSR RND8		;SET UP VISUAL X,Y,Z
	LDA RND.S1
	ANDA #01F
	LDB RND.S2
	STD 0(X)
	MUL
	TST M.YPH		;B SELECT SIGN OPPOSITE OF CURRENT
	BMI 20$
	NEGA
20$:				;---
	STD 2(X)
	LDA RND.S1
	ANDA #01F
	LDB RND.S3
	MUL
	TST M.ZPH
	BMI 30$
	NEGA
30$:
	STD 4(X)
	LDA ST.BIC		;REDO CURRENT STAR
	STA M.BICL
	LDA #M$S1UN		;DO POST ADD
	JSR MGOWT
	LDD M.XP		;STORE UNIVERSE COORDINATES
	STD 0(X)
	LDD M.YP
	STD 2(X)
	LDD M.ZP
	ANDA #0FF
	ANDB #0FF
	STD 4(X)
				;RESTORE MATH BOX
				;BIC ALREADY UPDATED BY PREVIOUS OP
	RTS
				;===

STRNWG:				;---
	JSR RND8		;SET UP VISUAL X,Y,Z
	LDA RND.S1
	ANDA #07F
	ORA #70			;FORCE IT WAY OUT THERE
	LDB RND.S2
	ADDD M$TX+M.U1
	STD 0(X)
	LDA RND.S3
	ANDA #07F
	TST M.YPH		;B SELECT SIGN OPPOSITE OF CURRENT
	BMI 20$
	NEGA
20$:				;---
	ADDD M$TY+M.U1
	STD 2(X)
	LDD #0			;ON THE GROUND
	STD 4(X)

	RTS
				;===

	HLL69F
	.END
                                                                                                                                                                                                                                                                                                                                                             