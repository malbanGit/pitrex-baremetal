	.TITLE SNDAUX	;SOUND BOARD, AUXILLIARY
	.INCLUDE SNDCMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DEVSYS==0			;1 IF DEVELOPMENT SYSTEM VERSION
				;0 IF STANDALONE (BUT IS STILL DEVSYS COMPATIBLE)
				;===
				;POKEY
P.SND=1800
P.SNDZ=1820
P.ACT1=1820
P.ACT2=1828
P.ACT3=1830
P.ACT4=1838
P.BGN1=1827
P.BGN2=182F
P.BGN3=1837
P.BGN4=183F
				;===
				;OUTSIDE ROUTINES

	.GLOBB SP.DLY,SP.STA,VIU
	.GLOBB DG.SEQ

	.GLOBL AUDDO
	.GLOBL PBX,PBX$EQ
	.GLOBL PKDR,ISND	;PM ROUTINES
	.GLOBL PBX$OK
	.GLOBL SPKIRQ,SPKRES
				;===
	.GLOBL AU$PNT,AU$IZ,AU.BLK,VIBOFF,TESTON,DG$VIB
				;===
				;BSECT PSUEDO D-PAGE
;	.BSECT

				;---
;$GARBG::.BLKB 1			;GARBAGE TEST
;TMPBLK::.BLKB 8			;BLOCK RESERVED FOR TEMPORARIES
;$INTHI::.BLKB 1			;HI BYTE OF INT COUNTER, 1 SECOND COUNTER
;$INTCT::.BLKB 1			;PSUEDO INT COUNTER, EVERY 4 MILLS
;SYNC::	.BLKB 1			;SYNC UP THE MAINLINE TO A 4 MS RATE
;CMDTOP::.BLKB 1			;DISP TO TOP OF GENERAL COMMAND BUFFER,FIFO
;CMDBTM::.BLKB 1			;DISP TO BOTTOM(CATCHING UP) OF BUFFER

	.GLOBB $GARBG,TMPBLK,$INTHI,$INTCT,SYNC,CMDTOP,CMDBTM
				;===

	.ASECT
	.=TSTRAM+20

CMD::	.BLKB 32.		;GENERAL COMMAND BUFFER, CIRCULAR FIFO
				;===

	.GLOBL SWI3, SWI2, FIRQ, IRQ, SWI0, NMI, RESET
	.GLOBL PGCKS1
				;===

	.CSECT	MAIN

	.PAGE
	.SBTTL	MAINLINE

RESET::	JMP INIT
;
;
MAIN:
	CLI

	LDX #12000./36.		;IRQ TIMEOUT--WAIT ABOUT 8 MILLS(12000. CYCLES)
				;WATCHDOG/WAIT LOOP IS (9+11+8+9)=36. CYCLES
	BEGIN
				;---
.IF NE,DEVSYS
				;
	PSHS X,CCR,DPR		;SAVE IRQ TIMEOUT AND DIRECT PAGE AND IRQ
	LDX #0			;KICK DEVSYS IN PANTS
	JSR 0F800
	PULS X,CCR,DPR
				;
.ENDC
				;---
				;DO ALL THE WATCHDOG AND SAFETY THINGS THAT
				; IRQ DOESN'T HAVE TIME FOR
	LDA $GARBG
	CMPA #3F
	BNE RESET		;B RESET IF FIRST RAM BYTE GETS BLITZED
				;	(9 CYCLES)
	TFR DPR,A
	CMPA #DPRAM/100
	BNE RESET		;B RESET IF DPAGE REGISTER GETS CREAMED
				;	(11 CYCLES)
	LEAX -1(X)
	BEQ RESET		;B RESET IF IRQ HASN'T BEEN WORKING (TIMED OUT)
				;	(8 CYCLES)
	LSR SYNC		;NOW WE CHECK IF IRQ HAS KICKED US (EVERY 4 MS)
	CSEND			;	(9 CYCLES)
				;---
				;HERE WE GO!!!!
	LDA #PBX$OK		;THIS IS THE WATCHDOG VALUE
	STA SOUT		; MAIN PCB CHECKS FOR THIS EVERY VG UPDATE
				; AND RESETS SOUND BOARD IF NOT CORRECT
				;---
	INC $INTCT		;COUNTER FOR EVERY 4 MILLS
				;---
	IFEQ
	INC $INTHI		;SECONDS COUNTER
	LDA #3			;TRY EVERY 4 SECONDS
	LDB DG.SEQ		;B:=DG.SEQ
	CMPB #DG$VIB		;NOT ONLY VIBRATTO OFF DURING TEST, BUT ALSO
				;SEQUENCE MORE SLOWLY
	IFHS			;?NOT DOING TEST TONES ANYMORE?
	LDA #1			;THEN CYCLE EVERY 2 SECONDS INSTEAD
	ENDIF
	ANDA $INTHI
	IFEQ			;?EVERY 2 SECONDS?
	CLR TESTON
	LDA TESTSW
	ANDA #TESTBT
	IFEQ			;?TEST SWITCH ON?(LO TRUE)
	INC TESTON
				;B:=DG.SEQ
	INCB
	CMPB #PBX$EQ
	IFHS			;?PAST TOP ENTRY?
	LDB #1
	ENDIF
	STB DG.SEQ		;SAVE CURRENT DIAG SEQUENCE
	LDX #PBX		;SHOW OFF NEXT PBX ROUTINE
	ABX
	ABX
	JSR @(X)		;ACTIVATE NEXT ROUTINE
	ENDIF
	ENDIF
	ENDIF
				;---
	JSR SPKIRQ		;START SPEECH AT FRONT
				;---
	JSR DOCMD		;DO ANY NEW COMMANDS
				;---	
				;SET FM DUE TO CURRENT SOUND OUTPUT
	LDB PAD			;B:= ORIGINAL OUTPUT VALUE
				;
	LDA SP.DLY		;DELAY FOR PAUSES IN VOICE
	ORA SP.STA		;OR ACTIVELY SPEAKING
	BNE 50$			;B FM OFF
				;
	LDA VIU			;ANY MUSIC IN USE
	BNE 50$			;B FM OFF
	LDA TESTON
	IF NE			;TEST SW WAS ON?
	LDA DG.SEQ
	CMPA #DG$VIB
	BLS 50$
	ENDIF
	LDX AU$PNT+<<5-1>*2+1*AU$IZ>+AU.BLK	;R2 SOUNDS ON CHANNEL 5
	CMPX #VIBOFF
	BHS 50$
				;
	ANDB #-1-BT3		;FM NOT(TURN FM ON)
	BRA 58$
50$:				;ELSE TURN FM OFF
	ORB #BT3		;HI FALSE
58$:				;
	STB PAD			;SHOVE NEW FM OUT
				;---
	LDA $INTCT
	LSRA
	IFCC			;?8 MILL BOUNDARY?
	JSR AUDDO		;THEN AUDIO SPECIAL EFFECTS
	ENDIF
				;---
	JSR PKDR		;DONT FORGET THE MUSIC (OK, THEN JUST HUM)
				;---
	JSR SPKIRQ		;THEN END WITH SPEECH, TWICE IN 4 MS
				;---
	JMP MAIN
				;===

	.PAGE
	.SBTTLE DOCMD		;DO ANY NEW COMMANDS

DOCMD:
	LDB CMDBTM
	CMPB CMDTOP
	IFNE			;?SOME NEW COMMANDS IN BUFFER?
	INCB
	ANDB #01F		;HANDLE WRAPAROUND
	STB CMDBTM		;JUST HANDLE ONE NEW REQUEST PER IRQ
	LDX #CMD
	LDB B(X)		;GOT OUR COMMAND
	LBEQ INIT		;START OVER IF ZERO COMMAND FOUND
	CMPB #PBX$EQ		;MAX NUMBER ALLOWED VIA PBX
	IFLS			;?WITHIN RANGE? DROP ON FLOOR IF NOT
	LDX #PBX	
	ABX
	ABX			;WORD POINTER, 255 MAX ENTRIES
	JSR @(X)		;ACTIVATE THE ROUTINE REQUESTED
	ENDIF
	ENDIF
				;---
	RTS
				;===
	.PAGE

	.SBTTL RIRQ	;REAL IRQ ROUTINE

RIRQ:
				;---
.IF NE,DEVSYS
				;
	LDA #DPRAM/100		;DEV SYS BUG CITY
	TFR A,DPR
				;
.ENDC
				;---
				;SETUP OUR FAST COMMAND HANDLER
	LDB CMDTOP		;B:=DISP TO LATEST COMMAND
	LDX #CMD		;X-->STORE COMMANDS IN THIS BUFFER
				;---
	LDA PAD			;SAFER TO USE PRESENCE BIT RATHER THAN EDGE BIT
	IFMI			;?MAINLINE HAVE NEW BYTE FOR US?
;	[LDA RIF]		;RIF CLEARS PIA7 EDGE, DONE IN TIMER SECTION
	LDA SIN			;GET THE COMMAND
				;TELL OTHER BOARD RIGHT AWAY
				;DONT SLOW HIM DOWN
	BEQ INIT		;SUPERCOMMAND ZERO SAYS RESET RIGHT NOW
				;X-->COMMAND BUFFER
				;B:= DISP INTO COMMAND BUFFER, LATEST COMMAND
	INCB
	ANDB #01F		;ROOM FOR PRECISELY 32.
	STA B(X)
	ENDIF
				;---
				;NOW FOR SOME FAST FOOTWORK TO HANDLE 
				; FAST SEQUENTIAL REQUESTS
				; AND OUR SLOW IRQ LATENCY
				;X-->COMMAND BUFFER
				;B:= DISP INTO COMMAND BUFFER, LATEST COMMAND
				;---
				;FIRST HANDLE ANY TIMER INTERRUPT
	LDA RIF			;RIF D7==>TIMER, D6==>PIA GOT SOME NEW DATA
				;READING CLEARS PIA FLAG
				;***THIS WILL CLEAR ANY PREVIOUS NEW DATA IRQ
	IFMI			;?TIMER CAUSED?
	LDA #06			;MAKE INTO 4 MS
	STA E1024T		;START UP THE TIMER AGAIN
	INC SYNC		;KICK THE MAINLINE
	BVS INIT		;B RESET US IF MAINLINE IS STUCK
	ENDIF
				;---
				;X-->COMMAND BUFFER
				;B:= DISP INTO COMMAND BUFFER, LATEST COMMAND
80$:				;---
	LDA PAD			;CHECK MAIN BYTE FLAG (SAFER THAN PIA7 EDGE)
	IFMI			;?ANOTHER COMMAND WAITING?
	LDA RIF			;CLEAR ANY PIA7 EDGE TO CLEAR THE IRQ
	LDA SIN			;MUST CLEAR PIA7 EDGE BEFORE TELLING MAIN PCB
	BEQ INIT		;RESET IF SUPERCOMMAND 0 IS SENT
				;X-->COMMAND BUFFER
				;B:= DISP INTO COMMAND BUFFER, LATEST COMMAND
	INCB			;NEXT LOC
	ANDB #01F		;HANDLE WRAPAROUND
	STA B(X)
	BRA 80$			;LOOP AGAIN QUICKLY TO HANDLE SEQUENTIAL REQUESTS
	ENDIF
				;X-->COMMAND BUFFER
				;B:= DISP INTO COMMAND BUFFER, LATEST COMMAND
	STB CMDTOP		;SAVE OUR TOP OF COMMAND POINTER
				;---
	RTI
				;===

	.PAGE
	.SBTTLE INIT	;RESET INITIALISER

INIT:			;INITIALISE
;
	SEI		;JUST HOPE THE PROCESSOR AT LEAST FUNCTIONS
			;
	LDA SIN		;MAIN BOARD DIAG, CLEAR INPUT
			;
	LDS #107F	;STACK WILL BE IN 6532 RAM
	LDA #DPRAM/100
	TFR A,DPR	;DIRECT PAGE WILL ALSO BE IN 6532 RAM
			;---
	LDA #0FF	;SET UP PBD AS OUTPUTS
	STA PBDD
	STA PBD		;ALL ONES IS THE SAFEST
	STA PAD		;MAKE SURE CONTROL STROBES ARE HIGH
	LDB #2B		;SET UP PAD
	STB PADD
			;---
			;PROVIDE SLOP TIME FOR MAIN DIAG
	LDX #P.SND	;INIT POKEYS
	LDD #0
20$:
	STD 0(X)++
	CMPX #P.SNDZ
	BLO 20$
			;
	LDA SIN		;MAIN BOARD DIAG -- LOOP BACK DATA
	STA SOUT
			;
	LDX #RAM	;CLEAR RAM
	LDD #0
10$:	STD 0(X)++
	CMPX #RAMZ
	BLO 10$
			;---
	LDX #DPRAM
	BEGIN
	STD 0(X)++
	CMPX #DPRAMZ
	HSEND
			;---
	STA P.BGN1	;BEGIN POKEY INIT-ALLOW TIME TO SETTLE.
	STA P.BGN2
	STA P.BGN3
	STA P.BGN4
	STA P.ACT1
	STA P.ACT2
	STA P.ACT3
	STA P.ACT4
			;---
	LDA #7		;FAST SCAN
	STA P.BGN1
	STA P.BGN2	;FINISH POKEY INIT
	STA P.BGN3
	STA P.BGN4
 			;---
	LDA TESTSW	;TEST SWITCH ON?
	ANDA #TESTBT
	IFEQ		;YES
	LDA PAD		;TURN OFF FM (VIBRATO) FOR SELF TEST TONES
	ORA #08
	STA PAD
	BRA TEST	;GO TO TEST
	ENDIF		;ELSE GO ON
			;---
	LDA PAD		;TURN FM ON
	ANDA #0F7
	STA PAD
			;---
	LDA #3F		;TRAP OUT FIRST BYTE RAM
	STA $GARBG
			;---
	JSR ISND	;PM MUSIC INITIALIZOR
			;---
	JSR SPKRES	;RESET SPEECH CHIP/ROUTINE
			;---
	LDA RIF		;MAKE SURE PA7 FLAG IS RESET
	LDA SIN		;AND THEN CLEAR MAINFLAG SO MAIN PCB CAN TALK AGAIN
	LDA #PBX$OK	;OK VAL FOR THIS VERSION
	STA SOUT	;TELL CURIOUS MAIN PCB THAT WE ARE GOING AGAIN
			;---
	LDA #06		;SET UP 4 MS IRQ TIMER
	STA E1024T
	STA EIPED	;ENABLE PA7 INTERRUPTS WITH POSITIVE EDGE DETECTS
			;---
	JMP MAIN
				;===

	.PAGE
	.SBTTL	SELF TEST

TRAMP:			;TABLE OF RAM POINTERS FOR TEST
	.WORD	RAM,RAM+800	;2K*8
	.BYTE	1		;ERROR CODE
	.WORD	DPRAM,DPRAM+80	;128.*8
	.BYTE	2		;ERROR CODE

TRAMPZ:
TROMP:			;TABLE OF ROM POINTERS
	.WORD	ROM0	;8K*8
	.WORD	ROM1	;8K*8  ENDING ADDRESS FOR ROM0
TROMPZ:	.WORD	ROM1+2000 ;    ENDING ADDRESS FOR ROM1
			;===

TEST:			;TEST ROUTINE

			;RAM TEST FIRST
	LDA #00		;SET FLAG FOR NO ERRORS
	LDU #TRAMP
	BEGIN
	LDX 0(U)	;STARTING ADDRESS
	LEAY 1(X)	;STARTING PATTERN IS ADDRESS + 1
	BEGIN		;SETUP RAM
	STY (X)++	;STORE ADDRESS IN RAM
	LEAY 0FF01(Y)	;NEXT PATTERN
	CMPX 2(U)
	HSEND
	LDX (U)		;STARTING ADDRESS
	LEAY 1(X)	;STARTING PATTERN
	BEGIN
	CMPY (X)++	;CHECK RAM FOR DATA STORED
	IFNE		;ERROR -- SET APPROPRIATE BIT
	ORA 4(U)	;OR I ERROR CODE
	ENDIF
	LEAY 0FF01(Y)	;NEXT WORD
	CMPX 2(U)	;ENDING ADDRESS?
	HSEND		;IF SO, DONE
50$:
	LEAU 5(U)	;DO NEXT RAM
	CMPU #TRAMPZ	;END OF RAM TABLE?
	HSEND
			;---
;ROM TEST
	TFR D,Y		;SAVE CURRENT ERRORS

	LDU #TROMP	;TABLE OF ROMS
	BEGIN
	LDX (U)++	;STARTING ADDRESS
	TFR X,D		;USE STARTING ADDRESS AS SEED
	BEGIN
	ADDD (X)++
	CMPX (U)	;AT ENDING ADDRESS? ( NEXT TABLE ENTRY IS ALSO ENDING ADDRESS )
	HSEND
	STD (X)		;USE ANALYZER FOR CHECKSUM
	IFNE		;ERROR
	TFR Y,D		;RETRIEVE ERRORS TO DATE
	CMPX #ROM1+10
	IFLO		;ROM 0
	ORA #04
	ELSE		;ROM 1
	ORA #08
	ENDIF
	TFR D,Y		;SAVE IT IN Y AGAIN
	ENDIF
	CMPU #TROMPZ	;DONE?
	HSEND
			;---
; REPORT ERRORS/NON-ERRORS VIA POKEY
	TFR Y,D		;GET ERRORS IN A
	LDB #03
	BEGIN
	LSRA		;SHIFT CODE TO CARRY
	IFCS		;ERROR
	LDU #0CFA8	;LOW TONE ON POKEY 0 MEANS ERROR
	STU P.SND	;POKEY 0 VOICE 0
	ELSE
	LDU #20A8	;HI TONE ON POKEY 1 MEANS OK
	STU P.SND+0A	;POKEY 1 VOICE 1
	ENDIF
			;
	LDX #8000	;DELAY WHILE SOUND IS ON
	BEGIN
	LEAX -1(X)
	EQEND
			;
	LDU #0000	;TURN OFF SOUNDS
	STU P.SND
	STU P.SND+0A
			;
	LDX #8000	;NOW DELAY FOR THE QUIET
	TSTB
	IFEQ		;LAST DELAY, MAKE IT A LONG ONE
	LEAX 7FFF(X)
	ENDIF
	BEGIN
	LEAX -1(X)
	EQEND
			;---
	DECB		;DONE WITH ALL DEVICES
	MIEND
			;---
	JMP RESET
			;===

	.PAGE

	RCV=1			;WE ARE ON RECEIVING SIDE OF PBX
	.INCLUDE SNDPBX		;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===

	.PAGE
	.SBTTL	VECTORS

IRQ	==RIRQ
FIRQ	==INIT
NMI	==INIT
SWI0	==INIT
SWI2	==INIT
SWI3	==INIT

	.SBTTL	CHECKSUM FOR ROM 2
CHKSM1	==7FF0
	.VCTRS <07FF0>,PGCKS1	;CHECKSUM FOR ROM1

.IF NE,DEVSYS
				;?DEVELOPMENT SYSTEM VERSION?
.IFTF				;ALWAYS KEEP THEIR VECTORS
	.VCTRS <0FFF8>,IRQ
	.VCTRS <0FFFE>,RESET
				;
.IFF				;ELSE ROM VERSION, FORCE DEVSYS TO BE 0 OR DIE
	.VCTRS <07FF2>,SWI3,SWI2,FIRQ,IRQ
	.VCTRS <07FFA>,SWI0	;BREAKPOINTS FOR ROM ONLY
	.VCTRS <07FFC>,NMI,RESET
.ENDC				;

				;---
				;===

	HLL69F

	.END
                                                                                                                                                                                                                                                     