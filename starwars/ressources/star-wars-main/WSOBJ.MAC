	.TITLE	WSOBJ	OBJECT TABLES AND VECTOR DRAW ROUTINES
	.INCLUDE	WSCOMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===
ROOT==0				;OVERLAY
GD$MDT==0F00			;PART WAY UP TOWERS
				;---
				;---
M$AX	==-10+0
M$AY	==-10+0+2
M$AZ	==-10+0+0+4

M$BX	==-10+0+8
M$BY	==-10+0+8+2
M$BZ	==-10+0+8+4

M$CX	==-10+0+10
M$CY	==-10+0+10+2
M$CZ	==-10+0+10+4

M$TX	==-10+18+0
M$TY	==-10+18+2
M$TZ	==-10+18+4

M$VX	==-10+6
M$VY	==-10+6+8
M$VZ	==-10+6+10

				;===
				;GLOBAL OFFSETS
BJ$EQ	==26.
				;MATH PROCESSOR
MBRAM	==5000			;BASE ADDRESS
MBRAMZ	==MBRAM+1000		;END OF SHARED RAM(4K BYTES,2KWORDS,512. BLOCKS)
				;DEFINE TOP OF MATH BOX
M.GDZ	==MBRAMZ		;MUST BE D-PAGEABLE
M.GD	==M.GDZ-200		;GROUND POINTS, 16. BYTES PER POINT, 32.POINTS
M$GDBC	==M.GD-MBRAM/8
M$GDNM	==M.GDZ-M.GD/8
M.GDFE	==M.GD-10		;FRONT END FOR FAST GROUND TRANSFORM, USES 2 BLOCKS
M.GDCT	==0+M.GD		;COLOR FOR TOP OF TOWER
M.GDCB	==2+M.GD		;COLOR FOR BASE OF TOWER
M.GDSC	==4+M.GD		;SCALE TO DRAW WITH
M.GDXS	==0C+M.GD		;FIRST SCREEN X RESULT (MUST AGREE WITH M$GDXS)

M$GDXR	==6			;ROTATED POINTS,X (+M.GDFE)
M$GDYR	==18			;ROTATED POINTS,Y (+M.GDFE)
M$GDZR	==1A			;ROTATED POINTS,Z (+M.GDFE)
M$GDXS	==1C			;FINAL SCREEN X,Y (+M.GDFE)

	.IIF NE,M.GDXS-<M$GDXS+M.GDFE>,.ERROR M.GDXS ;NOT AGREE WITH M$GDXS
				;---
				;D-PAGE RAM
	.GLOBB BJ.BIC,BJ.BRT
	.GLOBB BJ.CX,BJ.CY
	.GLOBB BJ.DMC
	.GLOBB BJ.ID
	.GLOBB BJ.RAM
				;---
				;RAM
	.GLOBL BJBIC,BJBICZ
	.GLOBL BJ.PNT
				;---
				;OUTSIDE ROUTINES
	.GLOBL	GD$MDT
	.GLOBL	MGOWT
				;---
				;MATH BOX
	.GLOBL M$BJBC
	.GLOBL M$GDBC,M$GDXR,M$GDYR,M$GDZR
	.GLOBL M.GDCB,M.GDCT,M.GDSC,M.GDXS
	.GLOBL M$PAD
	.GLOBL M$PERS
	.GLOBB M$PSUB,M$PR2I,M$PRS2
	.GLOBL M.BIC,M.BICH,M.BICL
	.GLOBL M.DVD
	.GLOBL M.GD,M.GDFE
	.GLOBL M.OBJ
	.GLOBL M.PCGO
	.GLOBL M.QUO
	.GLOBL M.S1
	.GLOBL M.U1
	.GLOBL M.XP,M.YP,M.ZP
	.GLOBL M.XT,M.YT
				;---
				;VECTOR GENERATOR
	.GLOBL VGCOPC,VGCGRN,VGCRED,VGCTRQ
	.GLOBL VGCNTR
	.GLOBL VGEDGB,VGEDGL,VGEDGR,VGEDGT
	.GLOBL VGOFFY
	.GLOBL VGSCAL
	.GLOBL VJFLS
				;---
				;HARDWARE
	.GLOBL DPRAM
				;---
				;SHIFT ROUTINES
				;===

	.MACRO .PAGG		;GLOBAL PAGE NUMBERS
	.PAGEG J		;OBJECT DRAW
	.ENDM

	.CSECT OBJ

	.PAGG
.MACRO	.W$ A1,A2,A3		;TYPE, SUBSCRIPT, EXPRESSION
	.IF NB,<'A3'>
	TD'A2''A1'=<'A3'>	;ASSIGN THE VALUE
	.ENDC
	.W0=TD'A2''A1		;RETURN THE VALUE ALSO
	.ENDM
				;---
TD$EQ	=-1			;FIRST IS AT 0
				;---
.MACRO	.WP A1			;START POINT TABLE ENTRY
TD$EQ	=TD$EQ+1		;ONE MORE OBJECT ENTRY
	.IIF GE,TD$EQ-BJ$EQ,.ERROR ENLARGE BJBIC TABLE
TD$'A1'	==TD$EQ			;ASSINE SHAPE NAME
	.W$ PC,\TD$EQ,.		;ASSIGN PC
	.ENDM
				;---
.MACRO	.WPZ			;END OF OBJECT ENTRY
	.W$ PC,\TD$EQ		;GET START PC
	.W$ NM,\TD$EQ,.-.W0/6+1&0FFFE	;CALC # OF POINTS, IN PAIRS
	.ENDM
				;---
.MACRO	.WPZ2 A1
	.W$ PC,\TD$EQ		;GET START PC
TD$EQ	=TD$EQ+1		;ONE MORE OBJECT
	.IIF GT,TD$EQ-BJ$EQ,.ERROR ENLARGE BJBIC TABLE
TD$'A1'	==TD$EQ			;ASSIGN SHAPE NAME
	.W$ PC,\TD$EQ,.W0	;PREVIOUS PC
	.W$ NM,\TD$EQ,.-.W0/6+1&0FFFE	;CALC # OF POINTS, IN PAIRS
	.ENDM			;---
TPNT:
	.MACRO .P .1,.2,.3
	.WORD .1'.*.S,.2'.*.S,.3'.*.S
	.ENDM

	.MACRO .PH .1,.2,.3
	.WORD .1'*.S,.2'*.S,.3'*.S
	.ENDM

				;---
	.S=13.			;TIE FIGHTER
	.WP TIE
	.P 0,0,0

	.P -10,-16,18		;LEFT OUTER FIN
	.P 8,-16,18
	.P 14,-16,0
	.P 8,-16,-18
	.P -10,-16,-18
	.P -16,-16,0
	.P -2,-16,2		;SMALL CIRCLE ON LEFT FIN
	.P 0,-16,2
	.P 1,-16,0
	.P 0,-16,-2
	.P -2,-16,-2
	.P -3,-16,0

	.P -10,16,18		;RIGHT FIN
	.P 8,16,18
	.P 14,16,0
	.P 8,16,-18
	.P -10,16,-18
	.P -16,16,0 
	.P -2,16,2		;SMALL CIRCLE ON RIGHT FIN
	.P 0,16,2
	.P 1,16,0
	.P 0,16,-2
	.P -2,16,-2
	.P -3,16,0

	.P -2,-6,2		;INNER CIRCLE LEFT STRUT
	.P 0,-6,2
	.P 1,-6,0
	.P 0,-6,-2
	.P -2,-6,-2
	.P -3,-6,0

	.P -2,6,2		;INNER CIRCLE RIGHT STRUT
	.P 0,6,2
	.P 1,6,0
	.P 0,6,-2
	.P -2,6,-2
	.P -3,6,0

	.P -4,-2,6		;LARGE CIRCLE LEFT BODY
	.P 2,-2,6
	.P 6,-2,3
	.P 6,-4,0
	.P 6,-2,-3
	.P 2,-2,-6
	.P -4,-2,-6
	.P -8,-2,0

	.P -4,2,6		;LARGE CIRCLE RIGHT BODY
	.P 2,2,6
	.P 6,2,3
	.P 6,4,0
	.P 6,2,-3
	.P 2,2,-6
	.P -4,2,-6
	.P -8,2,0

	.WPZ
				;---

	.S=13.
	.WP TI1			;EXPLODED TIE FIGHTER, LEFT WING AND STRUT
	.P 0,0,0

	.P -10,-2,18		;LEFT OUTER FIN
	.P 8,-2,18
	.P 14,-2,0
	.P 8,-2,-18
	.P -10,-2,-18
	.P -16,-2,0
	.P -2,-2,2		;SMALL CIRCLE ON LEFT FIN
	.P 0,-2,2
	.P 1,-2,0
	.P 0,-2,-2
	.P -2,-2,-2
	.P -3,-2,0
	
	.P -2,10,2		;INNER CIRCLE LEFT STRUT
	.P 0,10,2
	.P 1,10,0
	.P 0,10,-2
	.P -2,10,-2
	.P -3,10,0

	.WPZ
				;---
	.S=13.
	.WP TI2			;EXPLODED TIE, RIGHT WING AND STRUT, ROTATED
	.P 0,0,0

	.P -10,18,2		;RIGHT OUTER FIN
	.P 8,18,2
	.P 14,0,2
	.P 8,-18,2
	.P -10,-18,2
	.P -16,0,2
	.P -2,2,2		;SMALL CIRCLE ON RIGHT FIN
	.P 0,2,2
	.P 1,0,2
	.P 0,-2,2
	.P -2,-2,2
	.P -3,0,2
	
	.P -2,2,-10		;INNER CIRCLE RIGHT STRUT
	.P 0,2,-10
	.P 1,0,-10
	.P 0,-2,-10
	.P -2,-2,-10
	.P -3,0,-10

	.WPZ
				;---
	.S=13.
	.WP TI3			;EXPLODED TIE, CENTER CABIN
	.P 0,0,0

	.P -2,-6,2		;INNER CIRCLE LEFT STRUT
	.P 0,-6,2
	.P 1,-6,0
	.P 0,-6,-2
	.P -2,-6,-2
	.P -3,-6,0

	.P -2,6,2		;INNER CIRCLE RIGHT STRUT
	.P 0,6,2
	.P 1,6,0
	.P 0,6,-2
	.P -2,6,-2
	.P -3,6,0

	.P -4,-2,6		;LARGE CIRCLE LEFT BODY
	.P 2,-2,6
	.P 6,-2,3
	.P 6,-4,0
	.P 6,-2,-3
	.P 2,-2,-6
	.P -4,-2,-6
	.P -8,-2,0

	.P -4,2,6		;LARGE CIRCLE RIGHT BODY
	.P 2,2,6
	.P 6,2,3
	.P 6,4,0
	.P 6,2,-3
	.P 2,2,-6
	.P -4,2,-6
	.P -8,2,0

	.WPZ
				;===

	.S=10.			;DARTH VADER TIE FIGHTER
	.WP RTH
	.P 0,0,0
	.P -18,-18,13		;1-8 RIGHT OUTER WING
	.P 18,-18,13
	.P 18,-27,5
	.P 18,-27,-5
	.P 18,-18,-13
	.P -18,-18,-13
	.P -18,-27,-5
	.P -18,-27,5
	.P -2,-27,3		;9-12 RIGHT INNER WING
	.P 2,-27,3
	.P 2,-27,-3
	.P -2,-27,-3
	.P -18,18,13		;13-20 LEFT OUTER WING
	.P 18,18,13
	.P 18,27,5
	.P 18,27,-5
	.P 18,18,-13
	.P -18,18,-13
	.P -18,27,-5
	.P -18,27,5
	.P -2,27,3		;21-24 LEFT INNER WING
	.P 2,27,3
	.P 2,27,-3
	.P -2,27,-3
	.P -6,-6,5		;25-28 RIGHT BODY STRUT
	.P 6,-6,5
	.P 6,-6,-5
	.P -6,-6,-5
	.P -6,6,5		;29-32 LEFT BODY STRUT
	.P 6,6,5
	.P 6,6,-5
	.P -6,6,-5
	.P -3,-3,8		;33-40 RIGHT BODY FACE
	.P 3,-3,8
	.P 8,-8,3
	.P 8,-8,-3
	.P 3,-3,-8
	.P -3,-3,-8
	.P -8,-8,-3
	.P -8,-8,3
	.P -3,3,8		;41-48 LEFT BODY FACE
	.P 3,3,8
	.P 8,8,3
	.P 8,8,-3
	.P 3,3,-8
	.P -3,3,-8
	.P -8,8,-3
	.P -8,8,3
	.P 5,-2,6		;49-56 FRONT OUTER WINDOW
	.P 5,2,6
	.P 8,6,2
	.P 8,6,-2
	.P 5,2,-6
	.P 5,-2,-6
	.P 8,-6,-2
	.P 8,-6,2

	.WPZ
				;===
	.S=12.			;X WING
	.WP XW
	.P 0,0,0
.IF NE,0
				;1-6 FRONT NOSE
	.P 40,-2,-1
	.P 40,2,-1
	.P 40,3,-2
	.P 40,2,-3
	.P 40,-2,-3
	.P 40,-3,-2
				;7-12 MID BODY
	.P 13,-5,2
	.P 13,5,2
	.P 13,5,-2
	.P 13,4,-4
	.P 13,-4,-4
	.P 13,-5,-2
				;13-15,60 REAR BODY
	.P -20,5,2
	.P -20,4,-4
	.P -20,-4,-4
;	.P -20,-5,2		;	60
				;16-17 CANOPY
	.P 20,0,1
	.P 10,0,6
				;18-20 TOP RIGHT GUN
	.P 20,-42,10
	.P -10,-42,10
	.P -26,-42,10
				;21-23 TOP LEFT GUN
	.P 20,42,10
	.P -10,42,10
	.P -26,42,10
				;24-26 BOTTOM LEFT GUN
	.P 20,42,-10
	.P -10,42,-10
	.P -26,42,-10
				;27-29 BOTTOM RIGHT GUN
	.P 20,-42,-10
	.P -10,-42,-10
	.P -26,-42,-10
				;30-36 TOP RIGHT ENGINE
	.P 5,-5,2
	.P -24,-5,2
	.P -24,-9,2
	.P -25,-11,6
	.P -26,-9,10
	.P -26,-5,10
	.P -25,-3,6
				;37-43 TOP LEFT ENGINE
	.P 5,5,2
	.P -24,5,2
	.P -24,9,2
	.P -25,11,6
	.P -26,9,10
	.P -26,5,10
	.P -25,3,6
				;44-50 BOTTOM LEFT ENGINE
	.P 5,5,-2
	.P -24,5,-2
	.P -24,9,-2
	.P -25,11,-6
	.P -26,9,-10
	.P -26,5,-10
	.P -25,3,-6
				;51-57 BOTTOM RIGHT ENGINE
	.P 5,-5,-2
	.P -24,-5,-2
	.P -24,-9,-2
	.P -25,-11,-6
	.P -26,-9,-10
	.P -26,-5,-10
	.P -25,-3,-6
				;58,59 FRONT BOTTOM DEFLECTOR
	.P 35,-4,-4
	.P 35,4,-4
				;60 REST OF REAR BODY
	.P -20,-5,2		;	60
.ENDC
	.WPZ
				;===
	.S=12.			;Y WING
	.WP YW
	.P 0,0,0
.IF NE,0
				;1-4 FRONT NOSE
	.P 40,-3,1
	.P 40,3,1
	.P 40,5,-2
	.P 40, -5,-2
				;5-10 MID NOSE
	.P 30,-10,-2
	.P 30,-10,3
	.P 30,10,3
	.P 30,10,-2
	.P 30,5,-5
	.P 30,-5,-5
				;11-14,31-32 REAR HEAD
	.P 10,-10,3
	.P 10,10,3
	.P 10,10,-2
	.P 10,-10,-2
;	.P 10,5,-5
;	.P 10,-5,-5
				;15-18 FRONT OF REAR BODY
	.P 10,-7,1
	.P 10,7,1
	.P 10,7,-1
	.P 10,-7,-1
				;19-24,26-29 CANOPY
	.P 30,-2,3
	.P 25,-5,4
	.P 27,-3,7
	.P 27,3,7
	.P 25,5,4
	.P 30,2,3
	.P 0,0,0		;***25 UNUSED
	.P 11,-3,7		;	BACK CANOPY
	.P 10,-5,4
	.P 11,3,7
	.P 10,5,4
	.P 0,0,0		;***30 UNUSED
				;	31-32 REAR HEAD
	.P 10,5,-5
	.P 10,-5,-5
				;33-34 GUNS
	.P 45,5,-2
	.P 45,-5,-2
				;35-39 LEFT STRUT
	.P 5,7,0
	.P -20,13,1
	.P -20,7,1
	.P -20,13,-1
	.P -20,7,-1
				;40-46 LEFT ENGINE
	.P 5,18,0
	.P -29,18,7
	.P -30,25,4
	.P -30,25,-4
	.P -29,18,-7
	.P -28,11,-4
	.P -28,11,4
				;47-51 RIGHT STRUT
	.P 5,-7,0
	.P -20,-13,1
	.P -20,-7,1
	.P -20,-13,-1
	.P -20,-7,-1
				;52-58 RIGHT ENGINE
	.P 5,-18,0
	.P -29,-18,7
	.P -30,-25,4
	.P -30,-25,-4
	.P -29,-18,-7
	.P -28,-11,-4
	.P -28,-11,4
.ENDC
	.WPZ
				;---

	.WP GND			;GROUND LASAR TOWER

	.MACRO .PGND	.A,.B,.C	;OFFSET HITE TO MID OF PLAYERS HITE
	.WORD .A'*.S,.B'*.S,.C'*.S-GD$MDT
	.ENDM

	.S=30.*4		;TRY A BIT HIGHER AND WIDER(30==>256. WIDE)	

	.PGND 0,0,0		;CENTER ON GROUND

	.PGND -8,0,0		;FRONT
	.PGND 0,8,0		;LEFT
	.PGND 0,-8,0		;RIGHT

	.PGND -4,0,58		;TOP OF TOWER, TOP OF CANNON
	.PGND 0,4,58
	.PGND 0,-4,58

	.PGND -4,0,52		;BOTTOM OF CANNON
	.PGND 0,4,52
	.PGND 0,-4,52

	.PGND -5,0,14		;MIDLINE
	.PGND 0,5,14
	.PGND 0,-5,14

	.PGND -6,0,6		;NEAR BOTTOM
	.PGND 0,6,6
	.PGND 0,-6,6

	.WPZ
	.WPZ2 TWR		;TOWER
	.WPZ2 BNK		;BUNKER
	.WPZ2 STB		;STUB OF TOWER WITHOUT BUNKER TOPTWR
				;===

	.WP WPN			;WALL PANEL

	.S=8			;NOTE HALF SIZE DUE TO PSUB LACK OF DIV2

	.PH -20,0,-18		;0-3 OUTER RECTANGLE
	.PH -20,0,18
	.PH 20,0,18
	.PH 20,0,-18
	.PH -10,0,-8		;4-7 INNER RECTANGLE
	.PH -10,0,8
	.PH 10,0,8
	.PH 10,0,-8

	.WPZ
				;===

	.WP WGA			;WALL GUN TYPE A

	.S=8			;MATCHES WALL PANEL

	.P 0,0,0

	.P -32,0,24		;0-4 WALL BASE
	.P 32,0,24
	.P 32,0,-24
	.P -32,0,-24

	.P -12,12,8		;5-10 GUN BODY
	.P 12,4,8
	.P 12,4,-8
	.P -12,12,-8
	.P -12,4,-8
	.P -12,4,8

	.P -12,9,4		;11-14 GUN NOZZLE
	.P -12,7,4
	.P -12,9,-4
	.P -12,7,-4

	.WPZ
	.WPZ2 WGB
				;===

	.WP WFF			;WALL FORCE FIELD

	.S=8			;NOTE HALF SIZE DUE TO PSUB LACK OF DIV2

	.PH -20,0,0		;0-1 FRONT MIDLINE
	.PH -20,40,0

	.PH 0,0,-20		;2-3 BOTTOM MIDLINE
	.PH 0,40,-20

	.PH 0,0,20		;4-5 TOP MIDLINE
	.PH 0,40,20

	.WPZ
	.WPZ2 WFG
				;===

	.WP PORT		;THERMAL EXHAUST PORT

	.S=8			;GROUND OBJECT SCALING

	.PH 0C,0C,0		;0-3 INNER CIRCLE
	.PH 0C,-0C,0
	.PH -0C,0C,0
	.PH -0C,-0C,0
	.PH 14,14,0		;4-7 SUPPORT BERM
	.PH 14,-14,0
	.PH -14,14,0
	.PH -14,-14,0
	.PH 20,20,0		;8-15 BASE
	.PH 20,-20,0
	.PH -20,20,0
	.PH -20,-20,0

	.WPZ
				;===

	.WP	TW1		;TOWER TOP EXPLOSION PIECE 1 (LEFT SIDE)

	.S	=3*4
	.P 0,0,0

	.P 5,-20,30
	.P 25,0,30
	.P -35,20,30
	.P 5,-20,-30
	.P 25,0,-30
	.P -35,20,-30

	.WPZ

	.WP	TW2		;TOWER TOP EXPLOSION PIECW 2 (CENTER PIECE)

	.S	=3*4
	.P 0,0,0

	.P 10,-20,30
	.P 30,0,30
	.P 10,20,30
	.P -50,0,30
	.P 10,-20,-30
	.P 30,0,-30
	.P 10,20,-30
	.P -50,0,-30

	.WPZ

	.WP	TW3		;TOWER EXPLOSION PIECE 3 (RIGHT SIDE)

	.S	=3*4
	.P 0,0,0

	.P 5,20,30
	.P 25,0,30
	.P -35,-20,30
	.P 5,20,-30
	.P 25,0,-30
	.P -35,-20,-30

	.WPZ
				;===

	.WP	BK1		;BUNKER EXPLOSION PIECE 1 (LEFT SIDE)

	.S	=3*4
	.P 0,0,0

	.P 22,-45,30
	.P 22,5,30
	.P -58,35,30
	.P 22,-45,-30
	.P 22,5,-30
	.P -58,35,-30

	.WPZ

	.WP	BK2		;BUNKER EXPLOSION PIECE 2 (CENTER)

	.S	=3*4
	.P 0,0,0

	.P 28,-30,30
	.P 28,30,30
	.P -52,0,30
	.P 28,-30,-30
	.P 28,30,-30
	.P -52,0,-30

	.WPZ

	.WP	BK3		;BUNKER EXPLOSION PIECE 3 (RIGHT SIDE)

	.S	=3*4
	.P 0,0,0

	.P 22,45,30
	.P 22,-5,30
	.P -58,-35,30
	.P 22,45,-30
	.P 22,-5,-30
	.P -58,-35,-30

	.WPZ
				;===

	.WP	WG1		;WALL GUN EXPLOSION PIECE 1 (FRONT)

	.S	=1
	.P 0,0,0

	.P -35,-35,-50
	.P 45,-35,-50
	.P -35,-35,110
	.P -35,45,-50
	.P 45,20,-50
	.P -35,45,110

	.WPZ

	.WP	WG2		;WALL GUN EXPLOSION PIECE 2 (MIDDLE)

	.S	=1
	.P 0,0,0

	.P -90,-20,-100
	.P -90,-20,60
	.P -90,60,60
	.P -10,35,-100
	.P 70,-20,-100
	.P 70,5,-100
	.P 150,-20,60

	.WPZ

	.WP	WG3		;WALL GUN EXPLOSION PIECE 3 (RIGHT)

	.S	=1
	.P 0,0,0

	.P -25,-10,-100
	.P -25,15,-100
	.P 55,-10,-100
	.P 55,-10,60

	.WPZ
				;===

TPNTZ:
T$EQ	=TPNTZ-TPNT/6		;# OF POINTS
	.PAGG

J INOBJ				;INIT MBOX FOR NEW OBJECT SHAPES

	LDX #BJBIC
	LDA #0
10$:				;---
	STA 0(X)+		;CLEAR OUT BIC LIST
	CMPX #BJBICZ
	BLO 10$
				;---
	LDA #M$BJBC
	LSRA			;PAIRS OF POINTS
	STA BJ.BIC		;STARTING BIC VALUE
	LDD #M.OBJ
	STD BJ.RAM		;STARTING RAM ADDRESS
	RTS			;---

J ADBOBJ
				;ADD OBJECT POINTS TO MBOX
	TEMP CNT,1
	STB BJ.ID		;B:=OBJECT #

J ADOBJ

	LDB BJ.ID
	LDX #BJBIC
	LDA B(X)		;?MISSING FROM MBOX?
	BNE 90$			;B IF ALREADY PRESENT IN MBOX
	LDA BJ.BIC		;THEN START THE TRANSFER
	STA B(X)		;SAVE BIC ADDRESS
	LDX #TDRWNM
	LDA B(X)		;# OF POINTS TO XFER
	STA TMPCNT
	LSRA			;PAIRS OF POINTS
	ADDA BJ.BIC		;UPDATE BIC
	BCC 25$			;?TOO MANY POINTS?
	SWI			;***TEST***
				;FOR PROD, REPOINT FOR PSUEDO-GOOD POINTS BJBIC TO M$BJBC
25$:				;---
	STA BJ.BIC		;
	LDX #TDRWPC		;POINTER TO 6 BYTE ROM POINTS
	LSLB			;ACCESSED BY WORDS
	LDX B(X)		;X-->6 BYTE ROM
	LDU BJ.RAM		;U-->8 BYTE MRAM
30$:				;---
	LDD 0(X)		;X
	STD 0(U)
	LDD 2(X)		;Y
	STD 2(U)
	LDD 4(X)		;Z
	STD 4(U)
	LEAX 6(X)		;6 BYTE ROM
	LEAU 8(U)		;8 BYTE MRAM
	DEC TMPCNT		;ONE LESS POINT
	BGT 30$			;LOOP THRU THEM ALL
				;---
	STU BJ.RAM		;RECORD LATEST MRAM USAGE
90$:				;---
	RTS
				;---

	.PAGG
	.SBTTL OBJECT DRAW -- BJCNTR,OBJCEN,OBJPNT,OBJDRW,BJLNV/B


J BJCNTR
				;EXPECTS VG AT CENTER, INFO AT QUO, YP, XP

J OBJCEN

	LDD M.QUO		;AT LEAST 7.5 CYCLES AFTER M.DVD
	STD M.XP
	LDA #M$PERS
	JSR MGOWT
	LDD M.ZP
	STD BJ.CY		;NEW CUNENT Y
	ADDD #VGOFFY		;VIDEO CENTER OFFSET
	ANDA #1F
	STD (Y)++		;Y LONG VECTOR
	LDD M.YP
	STD BJ.CX
	ANDA #1F
	STD (Y)++		;X LONG VECTOR
	RTS
				;===


J BJLNV				;DRAW VISIBLE OBJECT LINE

	LDD M.QUO		;AT LEAST 7.5 CYCLES AFTER M.DVD
	STD M.XP
	LDA #M$PERS
	JSR MGOWT
	LDD M.ZP
	SUBD BJ.CY		;CURRENT UP/DOWN POSITION
	ANDA #01F
	STD (Y)++
	LDD M.ZP
	STD BJ.CY
				;---
	LDD M.YP		;LEFT/RIGHT
	SUBD BJ.CX
	ORA #0E0
	STD (Y)++
	LDD M.YP
	STD BJ.CX
				;---
	RTS
				;===


J BJLNB				;DRAW BLANK OBJECT LINE

	LDD M.QUO		;AT LEAST 7.5 CYCLES AFTER M.DVD
	STD M.XP
	LDA #M$PERS
	JSR MGOWT
	LDD M.ZP
	SUBD BJ.CY		;CURRENT UP/DOWN POSITION
	ANDA #01F
	STD (Y)++
	LDD M.ZP
	STD BJ.CY
				;---
	LDD M.YP		;LEFT/RIGHT
	SUBD BJ.CX
	ANDA #01F		;BLANK
	STD (Y)++
	LDD M.YP
	STD BJ.CX
				;---
	RTS
				;===

J OBJBPNT

	TEMP CNT,1
	STB BJ.ID

J OBJPNT

	LDB BJ.ID		;SAVE OBJECT IDENTIFICATION
	LDX #TDRWNM
	LDA B(X)		;# OF POINTS
	STA TMPCNT
	LDX #BJBIC
	LDA B(X)
	BNE 5$
	SWI			;***TEST***
				;SET TO M$BJBC IF FAIL
5$:				;---
	LSLA			;ALWAYS IN PAIRS, SHIFT UP TO 9 BITS
	STA M.BICL
	ROLA
	STA M.BICH
				;---
	LDX #BJ.PNT
10$:
	LDA #M$PAD
	JSR MGOWT
	LDD M.XP		;X
	STD M.DVD
	ORCC #0			;TOTAL OF 7.5 CYCLE DELAY BEFORE READ
	LDD M.QUO		;GET 1/X, RECIPROCAL
	STD M.XP
	LDA #M$PERS		;1/X (*Y,*Z)
	JSR MGOWT
	LDD M.YP
	STD 0(X)
	LDD M.ZP
	STD 2(X)
	LEAX 4(X)
	DEC TMPCNT
	BGT 10$
	RTS
				;===

J OBJDRW

	LDX #TDRWLN
	LDB BJ.ID		;PULL IN OBJECTS IDENTIFICATION
	LSLB
	LDU B(X)
	LDB 0(U)+
	IFNE
	SWI			;OOPS, NOT AN INTERPRETABLE OBJECT
	ENDIF
10$:
	LDB 0(U)+
	BITB #2
	BEQ 18$
	CMPB #0FF
	BEQ 90$
	LSRB
	LSRB
	CMPB BJ.DMC
	BHI 10$			;CONTINUE IF BACK DAMAGE
	BRA 90$
18$:				;---
	CLRA
	BITB #3
	BNE 20$
	LDA #0E0		;0 CODE HAS BRITNESS
20$:				;---
	STA BJ.BRT		;PRE FORMATTED BRITNESS
	ANDB #0FC		;PREPARE OFFSET
	LDX #BJ.PNT		;AND BASE POINT TABLE
	ABX			;ADD OFFSET TO POINT TABLE
	LDD 2(X)		;Y
	SUBD BJ.CY
	ANDA #1F
	STD (Y)++
	LDD 0(X)		;X
	SUBD BJ.CX
	ANDA #1F
	ORA BJ.BRT
	STD (Y)++
	LDD 0(X)
	STD BJ.CX
	LDD 2(X)
	STD BJ.CY
	BRA 10$
90$:
	RTS
				;===

	.PAGG

J BJGROT			;ROTATE GROUND OBJECT'S POINTS AND SAVE AT M.GD

	TEMP CNT,1
				;---
	LDD #0			;CENTER OF OBJECT IS AT ZERO
	STD M$TX+M.U1
	STD M$TY+M.U1
	STD M$TZ+M.U1
				;---
	LDX #TDRWNM		;GET # OF POINTS
	LDB BJ.ID
	LDA B(X)
	STA TMPCNT
	LDX #TDRWPC
	LSLB
	LDU B(X)		;U-->ROM POINTS FOR OBJECT
				;---
	LDX #M.GDFE		;FRONT END FOR LATER FAST TRANSFORM
	BEGIN			;DO THE ROTATION
	LDD (U)++
	STD 0+M.GD		;X
	LDD (U)++
	STD 2+M.GD		;Y
	LDD (U)++
	STD 4+M.GD		;Z
	LDD #M$GDBC		;POINT TO TRANSFORM BLOCK
	STD M.BIC
	LDA #M$PSUB		;STANDARD PRESUBTRACT
	JSR MGOWT
	LDD M.XP
	STD M$GDXR(X)
	LDD M.YP
	STD M$GDYR(X)
	LDD M.ZP
	STD M$GDZR(X)
	LEAX 10(X)
	DEC TMPCNT
	LEEND
				;---
	LDD M$TX+M.S1		;RESTORE ORIGINAL VALS
	STD M$TX+M.U1
	LDD M$TY+M.S1
	STD M$TY+M.U1
	LDD M$TZ+M.S1
	STD M$TZ+M.U1
				;---
	RTS
				;===

J BJFROT			;ROTATE GROUND OBJECT'S POINTS AND SAVE AT M.GD

	TEMP CNT,1
				;---
	LDD #0			;CENTER OF OBJECT IS AT ZERO
	STD M$TX+M.U1
	STD M$TY+M.U1
	STD M$TZ+M.U1
				;---
	LDX #TDRWNM		;GET # OF POINTS
	LDB BJ.ID
	LDA B(X)
	STA TMPCNT
	LDX #TDRWPC
	LSLB
	LDU B(X)		;U-->ROM POINTS FOR OBJECT
				;---
	LDX #M.GDFE		;FRONT END FOR LATER FAST TRANSFORM
	BEGIN			;DO THE ROTATION
	LDD (U)++
	STD 0+M.GD		;X
	LDD #0
	SUBD (U)++		;FLIP Y DIRECTION
	STD 2+M.GD		;Y
	LDD (U)++
	STD 4+M.GD		;Z
	LDD #M$GDBC		;POINT TO TRANSFORM BLOCK
	STD M.BIC
	LDA #M$PSUB		;STANDARD PRESUBTRACT
	JSR MGOWT
	LDD M.XP
	STD M$GDXR(X)
	LDD M.YP
	STD M$GDYR(X)
	LDD M.ZP
	STD M$GDZR(X)
	LEAX 10(X)
	DEC TMPCNT
	LEEND
				;---
	LDD M$TX+M.S1		;RESTORE ORIGINAL VALS
	STD M$TX+M.U1
	LDD M$TY+M.S1
	STD M$TY+M.U1
	LDD M$TZ+M.S1
	STD M$TZ+M.U1
				;---
	RTS
				;===


J BJGPNT			;TRANSLATE AND PROJECT THE POINTS OF GROUND OBJECT

	LDD #0			;NEGATE XP,YP,ZP
	SUBD M.XP
	STD M.XP
	LDD #0
	SUBD M.YP
	STD M.YP
	LDD #0
	SUBD M.ZP
	STD M.ZP
				;---
	LDD #M$GDBC		;SET BIC TO Xr+1
	STD M.BIC
	LDD M$GDXR+M.GDFE		;USING FRONT END INITIALIZOR, TRANSLATE Xr
	SUBD M.XP		;Xr-(-Xp)=Xr+Xp
	STD M.DVD		;START THE DIVIDER
	LDA #M$PR2I		;PERSPECTIVE MULT 2 INIT
	STA M.PCGO		;DOIT
	LDX #TDRWNM
	LDB BJ.ID		;SAVE OBJECT IDENTIFICATION
	LDA B(X)		;# OF POINTS
	LDB #M$PRS2		;SPECIAL PERSPECTIVE MULT 2
	BEGIN
	LDU M.QUO		;1/X
	LDX M.XT		;X FOR THE NEXT LOOP
	STU M.YT		;SPECIAL PERS USES YT FOR MULT
	STB M.PCGO		;DO SPECIAL PERS
	STX M.DVD		;START NEXT 1/X
	DECA
	LEEND
	RTS
				;===

J BJBCLP			;TRANSLATE AND PROJECT THE POINTS OF TRENCH OBJECT

				;WITH TIGHT CLIPPING
	LDD #0			;NEGATE XP,YP,ZP
	SUBD M.XP
	STD M.XP
	LDD #0
	SUBD M.YP
	STD M.YP
	LDD #0
	SUBD M.ZP
	STD M.ZP
				;---
	LDD #M$GDBC		;SET BIC TO Xr+1
	STD M.BIC
	LDD M$GDXR+M.GDFE		;USING FRONT END INITIALIZOR, TRANSLATE Xr
	SUBD M.XP		;Xr-(-Xp)=Xr+Xp
	STD M.DVD		;START THE DIVIDER
	LDA #M$PR2I		;PERSPECTIVE MULT 2 INIT
	STA M.PCGO		;DOIT
	LDX #TDRWNM
	LDB BJ.ID		;SAVE OBJECT IDENTIFICATION
	LDA B(X)		;# OF POINTS
	LDB #M$PRS2		;SPECIAL PERSPECTIVE MULT 2
	BEGIN
	LDU M.QUO		;1/X
	CMPU #100		;AFTER UNSIGNED DIVIDE,
				;X TOO CLOSE(LE 100) GIVES NEGATIVE QUOTIENT
				;X BEHIND(HS 8000) GIVES LO QUOTIENT(LS 100)
	IFLE			;SIGNED LE 100 CATCHES BOTH
	LDU #7FFF
	ENDIF
	LDX M.XT		;X FOR THE NEXT LOOP
	STU M.YT		;SPECIAL PERS USES YT FOR MULT
	STB M.PCGO		;DO SPECIAL PERS
	STX M.DVD		;START NEXT 1/X
	DECA
	LEEND
				;---
	LDX #TDRWNM		;NOW SET SCREEN VALS TO REASONABLE VG NUMBERS
	LDB BJ.ID		;SAVE OBJECT IDENTIFICATION
	LDA B(X)		;# OF POINTS
	LDU #M.GD+0C		;U-->OUTPUT BLOCKS
	BEGIN
	LDX (U)			;VG X
	CMPX #VGEDGR+24.
	IFGT
	LDX #VGEDGR+24.
	STX (U)
	ELSE
	CMPX #VGEDGL-24.
	IFLT
	LDX #VGEDGL-24.
	STX (U)
	ENDIF
	ENDIF
				;---
	LDX 2(U)		;VG Y
	CMPX #VGEDGT-VGOFFY+24.
	IFGT
	LDX #VGEDGT-VGOFFY+24.
	STX 2(U)
	ELSE
	CMPX #VGEDGB-VGOFFY-24.
	IFLT
	LDX #VGEDGB-VGOFFY-24.
	STX 2(U)
	ENDIF
	ENDIF
				;---
	LEAU 10(U)		;NEXT OUTPUT BLOCK
	DECA
	LEEND
				;---
	RTS
				;===

J BJGCLP			;TRANSLATE AND PROJECT THE POINTS OF GROUND OBJECT
				;WITH GENEROUS CLIPPING
	LDD #0			;NEGATE XP,YP,ZP
	SUBD M.XP
	STD M.XP
	LDD #0
	SUBD M.YP
	STD M.YP
	LDD #0
	SUBD M.ZP
	STD M.ZP
				;---
	LDD #M$GDBC		;SET BIC TO Xr+1
	STD M.BIC
	LDD M$GDXR+M.GDFE		;USING FRONT END INITIALIZOR, TRANSLATE Xr
	SUBD M.XP		;Xr-(-Xp)=Xr+Xp
	STD M.DVD		;START THE DIVIDER
	LDA #M$PR2I		;PERSPECTIVE MULT 2 INIT
	STA M.PCGO		;DOIT
	LDX #TDRWNM
	LDB BJ.ID		;SAVE OBJECT IDENTIFICATION
	LDA B(X)		;# OF POINTS
	LDB #M$PRS2		;SPECIAL PERSPECTIVE MULT 2
	BEGIN
	LDU M.QUO		;1/X
	CMPU #100		;AFTER UNSIGNED DIVIDE,
				;X TOO CLOSE(LE 100) GIVES NEGATIVE QUOTIENT
				;X BEHIND(HS 8000) GIVES LO QUOTIENT(LS 100)
	IFLE			;SIGNED LE 100 CATCHES BOTH
	LDU #7FFF
	ENDIF
	LDX M.XT		;X FOR THE NEXT LOOP
	STU M.YT		;SPECIAL PERS USES YT FOR MULT
	STB M.PCGO		;DO SPECIAL PERS
	STX M.DVD		;START NEXT 1/X
	DECA
	LEEND
				;---
	LDX #TDRWNM		;NOW SET SCREEN VALS TO REASONABLE VG NUMBERS
	LDB BJ.ID		;SAVE OBJECT IDENTIFICATION
	LDA B(X)		;# OF POINTS
	LDU #M.GD+0C		;U-->OUTPUT BLOCKS
	BEGIN
	LDX (U)			;VG X
	CMPX #VGEDGR+512.
	IFGT
	LDX #VGEDGR+512.
	STX (U)
	ELSE
	CMPX #VGEDGL-512.
	IFLT
	LDX #VGEDGL-512.
	STX (U)
	ENDIF
	ENDIF
				;---
	LDX 2(U)		;VG Y
	CMPX #VGEDGT-VGOFFY+512.
	IFGT
	LDX #VGEDGT-VGOFFY+512.
	STX 2(U)
	ELSE
	CMPX #VGEDGB-VGOFFY-512.
	IFLT
	LDX #VGEDGB-VGOFFY-512.
	STX 2(U)
	ENDIF
	ENDIF
				;---
	LEAU 10(U)		;NEXT OUTPUT BLOCK
	DECA
	LEEND
				;---
	RTS
				;===

J BJGDRW

	LDX #TDRWLN
	LDB BJ.ID		;PULL IN OBJECTS IDENTIFICATION
	LSLB
	LDU B(X)
	LDB 0(U)+
	CMPB #1
	IFNE			;?GROUND TYPE OBJECT?
	SWI			;OOPS, NOT CORRECT TYPE
	ENDIF
	JMP (U)			;GO DO IT
				;===

	.PAGG

	.MACRO .WL A1
	.W$ LN,\TD$'A1',.	;TD**LN:
	.BYTE 0			;INTERPRETABLE LIST FOR OBJDRW
	.ENDM			;---

	.MACRO .WL2 A1
	.W$ LN,\TD$'A1',.-1	;TD**LN:
	.ENDM			;---

	.MACRO .WGD A1
	.W$ LN,\TD$'A1',.	;TD**LN:
	.BYTE 1			;CODE FOR GROUND TYPE OBJECT
	.ENDM			;---

	.MACRO .WGD2 A1
	.W$ LN,\TD$'A1',.-1	;TD**LN:
	.ENDM			;---

				;===
				;INTERPRETOR
				;VISIBLE, DECIMAL 
	.MACRO .LD .1,.2,.3,.4,.5,.6,.7,.8,.9,.10,.11,.12,.13,.14,.15,FIN
	.IIF NB,<'FIN'>,.ERROR 15. ;TOO MANY ARGS
	.IRP .A,<.1 .2 .3 .4 .5 .6 .7 .8 .9 .10 .11 .12 .13 .14 .15>
	.BYTE .A'.*4
	.ENDR
	.ENDM
				;---
				;BLANK , DECIMAL
	.MACRO .BD .1,.2,.3,.4,.5,.6,.7,.8,.9,.10,.11,.12,.13,.14,.15,.16,FIN
	.IIF NB,<'FIN'>,.ERROR 15. ;TOO MANY ARGS
	.BYTE .1'.*4+1
	.LD .2 .3 .4 .5 .6 .7 .8 .9 .10 .11 .12 .13 .14 .15 .16
	.ENDM
				;---
				;DAMAGE ALLOWED
	.MACRO .D .1
	.BYTE 0'.1*4+2
	.ENDM			;---

	.MACRO .LEND
	.BYTE 0FF
	.ENDM			;---
				;===
				;GROUND TYPE, DIRECT EXECUTING

				;===
	.WL TIE			;TIE FIGHTER
	.BD 1,2,3,4,5,6,1
	.LD 7,8,9,10,11,12,7
	.LD 25,26,27,28,29,25
	.LD 37,38,39,47
	.BD 39,40,41,49
	.BD 41,42,43,44,37
	.LD 45,46,47,48,49,50,51,52,45
	.LD 31,32,33,34,35,36,31
	.LD 19,20,21,22,23,24,19
	.LD 13,14,15,16,17,18,13
	.BD 14,20,32,46,38,26,8,2
	.BD 3,9,27,40
	.BD 48,33,21,15
	.BD 16,22,34,50,42,28,10,4
	.BD 5,11,29,43,51,35,23,17
	.BD 18,24,36,52,44,30,12,6
	.LEND
				;===
				;TIE FIGHTER, EXPLODED PIECES
	.WL TI1			;LEFT WING AND STRUT
	.WL2 TI2		;RIGHT WING, SAME SHAPE, DIFFERENT POINTS

	.BD 7,8,9,10,11,12,7		;INNER CIRCLE OF LEFT FIN
	.LD 13,14,15,16,17,18,13	;STRUT CIRCLE ON BODY
	.BD 7,1,2,3,4,5,6,1		;OUTER CIRCLE OF LEFT FIN
	.BD 2,8,14			;SPIDER LINES
	.BD 15,9,3
	.BD 4,10,16
	.BD 17,11,5
	.BD 6,12,18

	.LEND
				;---
	.WL TI3			;CENTER TIE CABIN


;	.LD 25,26,27,28,29,25
	.BD 1,2,3,4,5,1

;	.LD 37,38,39,47
	.LD 13,14,15,23

;	.BD 39,40,41,49
	.BD 15,16,17,25

;	.BD 41,42,43,44,37
	.BD 17,18,19,20,13

;	.LD 45,46,47,48,49,50,51,52,45
	.LD 21,22,23,24,25,26,27,28,21

;	.LD 31,32,33,34,35,36,31
	.LD 7,8,9,10,11,12,7

;	.BD 32,46,38,26
	.BD 8,22,14,2

;	.BD 27,40
	.BD 3,16

;	.BD 48,33
	.BD 24,9

;	.BD 34,50,42,28
	.BD 10,26,18,4

;	.BD 29,43,51,35
	.BD 5,19,27,11

;	.BD 36,52,44,30
	.BD 12,28,20,6

	.LEND
				;===

	.WL RTH			;DARTH VADER TIE FIGHTER
				;RIGHT WING
	.BD 8,1,2,3,8,7,4,3
	.BD 4,5,6,7
				;RIGHT STRUT
	.BD 12,11,10,9,12,28
	.BD 27,11
	.BD 10,26
	.BD 25,9
;	.BD 13,12,11,10,9,14,13,33
;	.BD 32,12
;	.BD 11,31
;	.BD 30,10
;	.BD 9,29
;	.BD 34,14
				;BODY
	.BD 37,36,35,34,42,43,44,45,37
	.LD 38,46,47,48,41,33,40,39,38
;	.BD 45,44,43,42,50,51,52,53,45
;	.LD 46,54,55,56,49,41,48,47,46
	.BD 39,36
	.BD 35,40
	.BD 33,34
	.BD 42,41
	.BD 48,43
	.BD 44,47
	.BD 46,45
;	.BD 47,44
;	.BD 43,48
;	.BD 41,42
;	.BD 50,49
;	.BD 56,51
;	.BD 52,55
;	.BD 54,53
				;LEFT STRUT

	.BD 31,23,22,21,21,24,23
	.BD 22,30
	.BD 29,21
	.BD 24,32
;	.BD 38,26,25,24,23,28,27,26
;	.BD 25,37
;	.BD 36,24
;	.BD 23,35
;	.BD 40,28
;	.BD 27,39
				;LEFT WING
	.BD 19,18,17,16,19,20,15,16
	.BD 15,14,13,20
;	.BD 21,20,19,18,21,22,17,18
;	.BD 17,16,15,22
				;FRONT WINDOW
	.BD 49,50,51,52,53,54,55,56,49,53
	.BD 54,50
	.BD 51,55
	.BD 56,52

	.LEND
				;===

	.WL XW			;X WING
.IF NE,0
				;FRONT NOSE
	.BD 1,2,3,4,59,58,5,4
	.BD 5,6,1,7,8,9,10,11,12,7
	.BD 8,2
	.BD 3,9
	.BD 10,59
	.BD 58,11		;BOTTOM FRONT DEFLECTOR
	.BD 12,6
				;TOP CANOPY
	.BD 16,17,7,16,8,17
				;REAR BODY
	.BD 7,60,13,14,15,60
	.BD 15,11
	.BD 10,14
	.BD 13,8
				;TOP LEFT WING,ENGINE
	.BD 37,22,21		;GUN
	.BD 22,23,39,40,41,42,43,38,39	;BACK ENGINE
	.LD 37,40
	.BD 41,37,42
	.BD 43,37,38
				;BOTTOM LEFT WING,ENGINE
	.BD 46,26,24		;WING
	.BD 25,44,46,47,48,49,50,45,46
	.BD 47,44,48
	.BD 49,44,50
	.BD 45,44
				;BOTTOM RIGHT WING,ENGINE
	.BD 51,28,27		;GUN
	.BD 28,29,53,54,55,56,57,52,53
	.LD 51,54
	.BD 55,51,56
	.BD 57,51,52
				;TOP RIGHT WING,ENGINE
	.BD 32,20,18
	.BD 19,30,32,33,34,35,36,31,32
	.BD 33,30,34
	.BD 35,30,36
	.BD 31,30
.ENDC
	.LEND
				;===

	.WL YW			;Y WING
.IF NE,0
				;FRONT NOSE
	.BD 1,2,3,33
	.BD 3,4,34		;GUNS
	.BD 4,1,6,5,10,9,8,7,2
	.BD 7,12
	.LD 29,28,26,27,11,14,32,31,13,12	;REAR CIRCLE
	.BD 11,6		;TOP PINSTRIPE
	.BD 4,5,14
	.BD 13,8,3		;MID PINSTRIPE
	.LD 9,31		;BOTTOM PINSTRIPE
	.BD 32,10,4
				;CANOPY
	.BD 19,24,23,22,24
	.BD 23,29
	.BD 28,22,21,26
	.BD 27,20,19,21,20
				;REAR BODY
	.BD 15,16,17,18,15,49,48
	.BD 49,51,50
	.BD 51,39,38
	.BD 39,37,36
	.BD 37,49
	.BD 51,18
	.BD 17,39
	.BD 37,16
				;LEFT STRUT,ENGINE
	.BD 35,40,41,42,43,44,45,46,41
	.BD 42,40,43
	.BD 44,40,45
	.BD 46,40
				;RIGHT STRUT,ENGINE
	.BD 47,52,53,54,55,56,57,58,53
	.BD 54,52,55
	.BD 56,52,57
	.BD 58,52
.ENDC
	.LEND
				;===
				;OTHER EXPLOSION PICS
	.WL TW1			;TOWER TOP
	.WL2 TW3		;TOWER TOP
	.WL2 BK1		;BUNKER
	.WL2 BK2		;BUNKER
	.WL2 BK3		;BUNKER
	.WL2 WG1		;TRENCH WALL GUN TURRET

	.BD 1,2,3,1,4,5,2
	.BD 5,6,3
	.BD 6,4

	.LEND
				;---

	.WL TW2			;TOWER TOP

	.BD 1,2,3,4,1,5,6,2
	.BD 6,7,3
	.BD 7,8,4
	.BD 8,5

	.LEND
				;---

	.WL WG2			;TRENCH WALL GUN TURRET

	.BD 1,2,3,4,1,5,7,2
	.BD 3,7,6,5
	.BD 6,4

	.LEND
				;---

	.WL WG3			;TRENCH WALL GUN TURRET

	.BD 1,2,3,1,4,2
	.BD 3,4

	.LEND
				;===
	.PAGG
				;===
				;FAST (BUT BULKY) VG DRAW LINE ROUTINES
				;**WARNING -- DPAGE IS WIERD FOR SPEED!!!

				;MOVE A DOUBLE BYTE TO VGRAM
.MACRO	MOVD	.A,.B
	.IF NB,.B
	LDD .A,.B
	.IFF
	LDD .A
	.ENDC
	STD ...LINE(Y)
	...LINE=...LINE+2
	.ENDM

.MACRO	PLOT	...1
	...LINE=0
	LDA #M.GD/100
	TFR A,DPR		;SET DPR TO POINT TABLE
	.DPAGE M.GD/100
				;---
	...NEW=...1'.*10+M.GDXS
	LDD ...NEW+2		;ASSUMING START FROM CENTER OF VG -- MUST OFFSET
	ADDD #VGOFFY		;VIDEO OFFSET
	ANDA #1F
	STD ...LINE(Y)
	...LINE=...LINE+2
	LDD ...NEW		;DELTA X IS ABS X
	ANDA #1F
	STD ...LINE(Y)
	...LINE=...LINE+2
	...OLD=...NEW
	BRITE 7
	.ENDM

.MACRO	BRITE	.A
	.BRITE =.A
	.ENDM

.MACRO	DRAWTO	.A,.B,.C,.D,.E,.F,.G,.H
	.IRP ...1,<.A .B .C .D .E .F .G .H>
	...NEW=...1'.*10+M.GDXS	;DECIMAL
	LDD ...NEW+2		;Y
	SUBD ...OLD+2
	ANDA #1F
	STD ...LINE(Y)
	...LINE=...LINE+2
	LDD ...NEW		;X
	SUBD ...OLD
	.IF EQ,7-.BRITE
	ORA #0E0
	.IFF
	ANDA #01F
	.IF NE,.BRITE
	ORA #20*.BRITE
	.ENDC
	.ENDC
	STD ...LINE(Y)
	...LINE=...LINE+2
	...OLD=...NEW
	.ENDR
	.ENDM


.MACRO	BDRAWTO	.A,.B,.C,.D,.E,.F,.G,.H
	...1=.A'.		;DECIMAL
	...NEW=...1*10+M.GDXS
	LDD ...NEW+2		;Y
	SUBD ...OLD+2
	ANDA #1F
	STD ...LINE(Y)
	...LINE=...LINE+2
	LDD ...NEW		;X
	SUBD ...OLD
	ANDA #1F
	STD ...LINE(Y)
	...LINE=...LINE+2
	...OLD=...NEW
	DRAWTO	.B,.C,.D,.E,.F,.G,.H
	.ENDM


.MACRO	ENDPLOT
	MOVD #VGSCAL	;RESET SCALE
	MOVD #VGCNTR	;AND CENTER
	LEAY ...LINE(Y)	;BUMP Y
				;---
	LDA #DPRAM/100		;RESTORE DPR
	TFR A,DPR
	.DPAGE DPRAM/100
	RTS
	.ENDM

				;===

	.PAGG

	.WGD BNK			;BUNKER

	PLOT 	0		;ASSUMES STARTING FROM CENTER

	MOVD M.GDSC

	MOVD M.GDCT		;DRAW TOP OF BUNKER

	BDRAWTO 1,2,14,13,1,3,15,13

	BDRAWTO 14,15	

	ENDPLOT			;CENTER AND BUMP Y

				;===

	.PAGG

	.WGD TWR
	.WGD2 GND

	PLOT 	0		;ASSUMES STARTING FROM CENTER

	MOVD M.GDSC

	MOVD M.GDCB		;COLOR THE BASE

	BDRAWTO 1,3,15,12,9

	MOVD M.GDCT		;UP THE TOP

	DRAWTO 6,4,7		;AND DOWN THE MIDDLE

	MOVD M.GDCB

	DRAWTO 10,13,1,2,14,11,8	;UP LEFT SIDE

	MOVD M.GDCT		;AND NOW THE TOP

	DRAWTO 5,4

	BDRAWTO 7,9		;BOTTOM OF CANNON

	BDRAWTO 7,8		;OTHER SIDE OF BOTTOM OF CANNON

	ENDPLOT			;CENTER AND BUMP Y

				;===
	.PAGG

	.WGD STB		;STUB OF TOWER WITHOUT BUNKER HAT ON TOP

	PLOT 	0		;ASSUMES STARTING FROM CENTER

	MOVD M.GDSC

	MOVD M.GDCB		;COLOR THE BASE

	BDRAWTO 1,3,15,12,9	;UP RIGHT SIDE

	DRAWTO 7,10,13,1	;DOWN CENTER

	DRAWTO 2,14,11,8,7	;UP LEFT SIDE

	ENDPLOT			;CENTER AND BUMP Y

				;===
	.PAGG

	.WGD WGA		;WALL GUN, TYPE A
	.WGD2 WGB		;WALL GUN, TYPE B

	PLOT 4

	MOVD #VGCRED*100+VGCOPC

	DRAWTO 3,2,1,4,9,10,1

	BDRAWTO 10,6,2

	BDRAWTO 3,7,6,5,8,7,9,8
	DRAWTO 13,14,9

	BDRAWTO 14,12,10,5,11,12

	BDRAWTO 11,13

	ENDPLOT			;CENTER AND BUMP Y

				;===
	.PAGG

	.WGD WPN		;WALL PANEL

	PLOT 	0		;ASSUMES STARTING FROM CENTER

	MOVD #VGCGRN*100+VGCOPC

	DRAWTO	1,2,3,0

	BDRAWTO	4,5,6,7,4

	ENDPLOT			;CENTER AND BUMP Y

				;===
	.PAGG

	.WGD WFF		;WALL FORCE FIELD

				;COLOR SET BY CALLER
	PLOT 	1		;

	DRAWTO 0,2,3,1,5,4,0

	ENDPLOT			;CENTER AND BUMP Y

				;===
	.PAGG

	.WGD WFG		;WALL FORCE FIELD, COLLIDED VERSION

	PLOT 	1		;

	MOVD #VJFLS		;CATWALK COLOR WHEN COLLIDED

	DRAWTO 0

	DRAWTO 2

	DRAWTO 3

	DRAWTO 1,5

	DRAWTO 6,3

	BDRAWTO 5,4

	DRAWTO 0

	ENDPLOT			;CENTER AND BUMP Y

				;===

	.PAGG
	.WGD PORT		;THERMAL EXHAUST PORT

	PLOT 	5		;

	MOVD #VGCGRN*100+VGCOPC	;OUTER BASE

	DRAWTO 9,8,4

	BDRAWTO 6,10,11,7

	MOVD #VGCTRQ*100+VGCOPC	;INNER BERM

	DRAWTO 6,2
	BDRAWTO 6,4,0
	BDRAWTO 4,5,1
	BDRAWTO 5,7,3

	MOVD #VGCRED*100+VGCOPC!0FF	;PORTHOLE

	DRAWTO 2,0,1,3

	ENDPLOT			;CENTER AND BUMP Y

				;===

	.PAGG

TDRWLN::				;LINE POINTERS, PER OBJECT
	...1=-1
	.REPT TD$EQ+1
	...1=...1+1
	.W$ LN,\...1		;GET TD**LN
	.WORD .W0
	.ENDR
TDRWNM::			;# OF POINTS PER OBJECT
	...1=-1
	.REPT TD$EQ+1
	...1=...1+1
	.W$ NM,\...1		;GET TD**NM
	.BYTE .W0
	.ENDR
TDRWPC::			;ROM POINTS TABLES, PER OBJECT
	...1=-1
	.REPT TD$EQ+1
	...1=...1+1
	.W$ PC,\...1		;GET TD**PC
	.WORD .W0
	.ENDR

	HLL69F
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                 