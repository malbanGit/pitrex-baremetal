	.TITLE SWMP.MAC
	.SBTTL STAR WARS MICRO-PROGRAM
	.SBTTL HARDWARE VERSION REV 4
	.SBTTL  *****************
	.SBTTL  *
	.SBTTL  *
	.SBTTL  * PROGRAMMER:JED MARGOLIN
	.SBTTL  * FROM WARP SPEED AND TOM CAT   7/6/82
	.SBTTL  *		  	       10/13/82
	.SBTTL	*				1/23/83
	.SBTTL  *
	.SBTTL  ****************

	.REPT 0
THE FOLLOWING CODE IS USED TO IMPLEMENT
THE NECESSARY ALGORITHMS FOR OBJECTS WITH
SIX DEGREES OF FREEDOM (ROLL, PITCH, YAW, 
X, Y, AND Z). ANY OBJECT MAY SERVE AS THE 
OBSERVER'S REFERENCE.
;
;
	.ENDR
	.INCLUDE TCODE2	;<<<<<<<<<<<<<<<<
	.ASECT
	.=0
;
	.PAGE
;ROLL UNIT VECTORS STARTING AT INDEX, USES ROUNDING
ROLL:	LDA Y,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB Z,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA Y,IND
	SAC Y,IND	;UV1	YIND'= YIND*COS - ZIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA Z,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC Z,IND,IBC	; 	ZIND'= YIND*SIN + ZIND*COS + 1/2 LSB
	LDA Y,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB Z,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA Y,IND
	SAC Y,IND	;UV2	YIND'= YIND*COS - ZIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA Z,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC Z,IND,IBC	; 	ZIND'= YIND*SIN + ZIND*COS + 1/2 LSB
	LDA Y,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB Z,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA Y,IND
	SAC Y,IND	;UV3	YIND'= YIND*COS - ZIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA Z,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC Z,IND,HALT	; 	ZIND'= YIND*SIN + ZIND*COS + 1/2 LSB
	.PAGE
;PITCH UNIT VECTORS STARTING AT INDEX, USES ROUNDING
PITCH:	LDA Z,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB X,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA Z,IND
	SAC Z,IND	;UV1	ZIND'= ZIND*COS - XIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA X,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC X,IND,IBC	; 	XIND'= ZIND*SIN + XIND*COS + 1/2 LSB
	LDA Z,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB X,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA Z,IND
	SAC Z,IND	;UV2	ZIND'= ZIND*COS - XIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA X,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC X,IND,IBC	; 	XIND'= ZIND*SIN + XIND*COS + 1/2 LSB
	LDA Z,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB X,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA Z,IND
	SAC Z,IND	;UV3	ZIND'= ZIND*COS - XIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA X,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC X,IND,HALT	;	XIND'= ZIND*SIN + XIND*COS + 1/2 LSB
	.PAGE
;YAW UNIT VECTORS STARTING AT INDEX, USES ROUNDING
YAW:	LDA X,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB Y,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA X,IND
	SAC X,IND	;UV1	XIND'= XIND*COS - YIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA Y,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC Y,IND,IBC	; 	YIND'= XIND*SIN + YIND*COS + 1/2 LSB
	LDA X,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB Y,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA X,IND
	SAC X,IND	;UV2	XIND'= XIND*COS - YIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA Y,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC Y,IND,IBC	;	YIND'= XIND*SIN + YIND*COS + 1/2 LSB
	LDA X,IND,CLA
	LDB ZERO
	LDC COS,MAC
	LDA ZERO
	LDB Y,IND
	LDC SIN,MAC
	LDA C40
	LDB ZERO
	LDC C80,MAC
	LDA X,IND
	SAC X,IND	;UV3	XIND'= XIND*COS - YIND*SIN + 1/2 LSB
	LDB ZERO,CLA
	LDC SIN,MAC
	LDA Y,IND
	LDC COS,MAC
	LDA C40
	LDC C80,MAC
	SAC Y,IND,HALT	;	YIND'= XIND*SIN + YIND*COS + 1/2 LSB
	.PAGE
;PRESUBTRACT
;SHIP 1 LOOKS AT THE UNIVERSE
;NO WRAPAROUND
PRESUB:	LDA X,IND,CLA
	LDB XT1
	LDC AX1,MAC
	LDA Y,IND
	LDB YT1
	LDC BX1,MAC
	LDA Z,IND
	LDB ZT1
	LDC CX1,MAC
	SAC XP		;XP= (XIND-XT1)*AX1 + (YIND-YT1)*BX1 + (ZIND-ZT1)*CX1
	LDA X,IND,CLA
	LDB XT1
	LDC AY1,MAC
	LDA Y,IND
	LDB YT1
	LDC BY1,MAC
	LDA Z,IND
	LDB ZT1
	LDC CY1,MAC
	SAC YP		;YP= (XIND-XT1)*AY1 + (YIND-YT1)*BY1 + (ZIND-ZT1)*CY1
	LDA X,IND,CLA
	LDB XT1
	LDC AZ1,MAC
	LDA Y,IND
	LDB YT1
	LDC BZ1,MAC
	LDA Z,IND
	LDB ZT1
	LDC CZ1,MAC
	SAC ZP,IBC,HALT	;ZP= (XIND-XT1)*AZ1 + (YIND-YT1)*BZ1 + (ZIND-ZT1)*CZ1
	.PAGE
	NXTPAG
;CONCATENATE
;SHIP 1 WILL LOOK AT SHIP 2
CONCAT:	LDB ZERO
	LDA AX2,CLA
	LDC AX1,MAC
	LDA BX2
	LDC BX1,MAC
	LDA CX2
	LDC CX1,MAC
	SAC AX			;AX
	LDA AX2,CLA
	LDC AY1,MAC
	LDA BX2
	LDC BY1,MAC
	LDA CX2
	LDC CY1,MAC
	SAC AY			;AY
	LDA AX2,CLA
	LDC AZ1,MAC
	LDA BX2
	LDC BZ1,MAC
	LDA CX2
	LDC CZ1,MAC
	SAC AZ			;AZ
	LDA AY2,CLA
	LDC AX1,MAC
	LDA BY2
	LDC BX1,MAC
	LDA CY2
	LDC CX1,MAC
	SAC BX			;BX
	LDA AY2,CLA
	LDC AY1,MAC
	LDA BY2
	LDC BY1,MAC
	LDA CY2
	LDC CY1,MAC
	SAC BY			;BY
	LDA AY2,CLA
	LDC AZ1,MAC
	LDA BY2
	LDC BZ1,MAC
	LDA CY2
	LDC CZ1,MAC
	SAC BZ			;BZ
	LDA AZ2,CLA
	LDC AX1,MAC
	LDA BZ2
	LDC BX1,MAC
	LDA CZ2
	LDC CX1,MAC
	SAC CX			;CX
	LDA AZ2,CLA
	LDC AY1,MAC
	LDA BZ2
	LDC BY1,MAC
	LDA CZ2
	LDC CY1,MAC
	SAC CY			;CY
	LDA AZ2,CLA
	LDC AZ1,MAC
	LDA BZ2
	LDC BZ1,MAC
	LDA CZ2
	LDC CZ1,MAC
	SAC CZ,HALT		;CZ
	.PAGE
;POSTADD
;SHIP 1 LOOKS AT SHIP 2
POSTADD:LDB ZERO
	LAC XT
	LDA X,IND
	LDC AX,MAC
	LDA Y,IND
	LDC BX,MAC
	LDA Z,IND
	LDC CX,MAC
	SAC XP	;	XP = XIND*AX + YIND*BX + ZIND*CX + XT
	LAC YT
	LDA X,IND
	LDC AY,MAC
	LDA Y,IND
	LDC BY,MAC
	LDA Z,IND
	LDC CY,MAC
	SAC YP	;	YP = XIND*AY + YIND*BY + ZIND*CY + YT
	LAC ZT
	LDA X,IND
	LDC AZ,MAC
	LDA Y,IND
	LDC BZ,MAC
	LDA Z,IND
	LDC CZ,MAC
	SAC ZP		;ZP = XIND*AZ + YIND*BZ + ZIND*CZ + ZT
	LDA XP,CLA
	LDC SCALE,MAC
	SAC XSCALE,IBC,HALT	;XSCALE = SCALE * XP  (ZOOM LENS)
;
	.PAGE
;TEST ROUTINES TO AID HARDWARE DEBUGGING
TEST1:	LDA ZERO,HALT
TEST2:	LDB ZERO,HALT
TEST3:	LDC ZERO,MAC,HALT
TEST4:	CLA,HALT
TEST5:	IBC,HALT
TEST6:	LAC XP
	SAC YP,HALT
TEST7:	LDA XT,CLA
	LDB YT
	LDC ZT,MAC
	SAC XP,HALT
TEST8:	LDA XT
	LDB YT
	LDC ZT,MAC
	SAC XP,HALT
TEST9:	LDA X,IND,CLA
	LDB ZERO
	LDC ONE,MAC
	SAC XP,HALT
	
	.PAGE
;TRANSFORMS FROM SHIP 1 REFERENCE TO UNIVERSE
POST2:	LDB ZERO
	LAC XT1
	LDA X,IND
	LDC AX1,MAC
	LDA Y,IND
	LDC AY1,MAC
	LDA Z,IND
	LDC AZ1,MAC
	SAC XP		; XP = XIND*AX1 + YIND*AY1 + ZIND*AZ1 + XT1
	LAC YT1
	LDA X,IND
	LDC BX1,MAC
	LDA Y,IND
	LDC BY1,MAC
	LDA Z,IND
	LDC BZ1,MAC
	
	SAC YP		; YP = XIND*BX1 + YIND*BY1 + ZIND*BZ1 + YT1
	LAC ZT1
	LDA X,IND
	LDC CX1,MAC
	LDA Y,IND
	LDC CY1,MAC
	LDA Z,IND
	LDC CZ1,MAC
	SAC ZP,IBC,HALT	; ZP = XIND*CX1 + YIND*CY1 + ZIND*CZ1 + ZT1
	.PAGE
;PRESUBTRACT
;SHIP 1 LOOKS AT THE UNIVERSE
;WRAP AROUND IS AUTOMATIC
PRE2:	LDA X,IND,CLA
SUB:	LDB XT1
	LDC ONE,MAC
	SAC XT
	LDA XT
	LDB ZERO
	LDC HALF,MAC
	SAC XT
	LDA Y,IND,CLA
	LDB YT1
	LDC ONE,MAC
	SAC YT
	LDA YT
	LDB ZERO
	LDC HALF,MAC
	SAC YT
	LDA Z,IND,CLA
	LDB ZT1
	LDC ONE,MAC
	SAC ZT
	LDA ZT
	LDB ZERO
	LDC HALF,MAC
	SAC ZT
MATRIX:	LDB ZERO
	LDA XT,CLA
	LDC AX1,MAC
	LDA YT
	LDC BX1,MAC
	LDA ZT
	LDC CX1,MAC
	SAC XP		; XP = XT*AX1 + YT*BX1 + ZT*CX1
	LDA XT,CLA
	LDC AY1,MAC
	LDA YT
	LDC BY1,MAC
	LDA ZT
	LDC CY1,MAC
	SAC YP		; YP = XT*AY1 + YT*BY1 + ZT*CY1
	LDA XT,CLA
	LDC AZ1,MAC
	LDA YT
	LDC BZ1,MAC
	LDA ZT
	LDC CZ1,MAC
	SAC ZP,IBC	; ZP = XT*AZ1 + YT*BZ1 + ZT*CZ1
	LDA XP,CLA
	LDC SCALE,MAC
	SAC XSCALE	;XSCALE = XP * SCALE  (ZOOM LENS)
SQA:	LDA XSCALE,CLA
	LDC XSCALE,MAC
	SAC XCS		;XCS = XSCALE * XSCALE
	LDA XP,CLA
	LDC XP,MAC
	SAC XPS		;XPS = XP * XP
	LDA YP,CLA
	LDC YP,MAC
	SAC YPS		;YPS = YP * YP
	LDA ZP,CLA
	LDC ZP,MAC
	SAC ZPS,HALT	;ZPS = ZP * ZP
	.PAGE
;DOWNLOAD UNIT VECTORS AND TRANSLATION VECTOR (STARTING AT INDEX) INTO SHIP 1
DNLD1:	LAC X,IND
	SAC AX1
	LAC Y,IND
	SAC AY1
	LAC Z,IND
	SAC AZ1,IBC
	LAC X,IND
	SAC BX1
	LAC Y,IND
	SAC BY1
	LAC Z,IND
	SAC BZ1,IBC
	LAC X,IND
	SAC CX1
	LAC Y,IND
	SAC CY1
	LAC Z,IND
	SAC CZ1,IBC
	LAC X,IND
	SAC XT1
	LAC Y,IND
	SAC YT1
	LAC Z,IND
	SAC ZT1,HALT
	.PAGE
	NXTPAG
;DOWNLOAD UNIT VECTORS AND TRANSLATION VECTOR (STARTING AT INDEX) INTO SHIP 2
DNLD2:	LAC X,IND
	SAC AX2
	LAC Y,IND
	SAC AY2
	LAC Z,IND
	SAC AZ2,IBC
	LAC X,IND
	SAC BX2
	LAC Y,IND
	SAC BY2
	LAC Z,IND
	SAC BZ2,IBC
	LAC X,IND
	SAC CX2
	LAC Y,IND
	SAC CY2
	LAC Z,IND
	SAC CZ2,IBC
	LAC X,IND
	SAC XT2
	LAC Y,IND
	SAC YT2
	LAC Z,IND
	SAC ZT2,HALT
;PERSPECTIVE MULTIPLY
;XP IS INVERSE X
;YP=YP*XP
;ZP=ZP*XP
PERS:	LDB ZERO
	LDA YP,CLA
	LDC XP,MAC
	SAC YP
	LDA ZP,CLA
	LDC XP,MAC
	SAC ZP,HALT
;
;HORIZON LINE
HZN:	LDB ZERO
	LDA AX1,CLA
	LDC AX1,MAC
	LDA BX1
	LDC BX1,MAC
	SAC PX,HALT		;PX=AX*AX + BX*BX
HZN2:	LDA PX,CLA
	LDC T,MAC
	SAC T			;T=(AX*AX+BX*BX) * T
	LDA T,CLA
	LDC BX1,MAC
	SAC TBX			;TBX=T*BX1
	LDA T,CLA
	LDC AX1,MAC
	SAC TAX			;TAX=T*AX1
	LDA AX1,CLA
	LDB TBX
	LDC AZ1,MAC
	LDB ZERO
	LDA BX1
	LDC BZ1,MAC
	LDA TAX
	LDC BZ1,MAC
	SAC PZ1			;PZ1=(AX1-TBX)*AZ1 + (BX1-TAX)*BZ1
	LDA AX1,CLA
	LDB TBX
	LDC AY1,MAC
	LDB ZERO
	LDA BX1
	LDC BY1,MAC
	LDA TAX
	LDC BY1,MAC
	SAC PY1			;PY1=(AX1-TBX)*AY1 + (BX1+TAX)*BY1
	LDA AX1,CLA
	LDC AZ1,MAC
	LDA TBX
	LDC AZ1,MAC
	LDA BX1
	LDB TAX
	LDC BZ1,MAC
	SAC PZ2			;PZ2=(AX1+TBX)*AZ1 + (BX1-TAX)*BZ1
	LDB ZERO
	LDA AX1,CLA
	LDC AY1,MAC
	LDA TBX
	LDC AY1,MAC
	LDA BX1
	LDB TAX
	LDC BY1,MAC
	SAC PY2,HALT		;PY2=(AX1+TBX)*AY1 + (BX-TAX)*BY1
;
;AERODYNAMICS:	
;		SCALE THE THRUST
;
;		AIRSPEED (AS MEASURED BY A PITOT TUBE) IS THE COMPONENT
;		OF VELOCITY ALONG THE AIRCRAFT'S X DIRECTION.
;
;		PARASITIC DRAG IS OPPOSITE THE VELOCITY VECTOR.
;		PARASITIC DRAG WILL BE PROPORTIONAL TO VELOCITY.
;		COEFFICIENT OF PARASITIC DRAG (PDR) MUST BE NEGATIVE.
;
;		GRAVITY IS DOWN.
;
;		FOR AIRPLANE:
;			THRUST IS ALONG (AX1,BX1,CZ1)
;
;			COMPONENT OF WIND NORMAL TO WING IS
;			-VX*AZ1 - VY*BZ1 - VZ*CZ1
;
;			FORCE ON WING IS ALONG (AZ1,BZ1,CZ1)
;
;		FOR HELICOPTER:
;			THRUST IS ALONG (AZ1,BZ1,CZ1)
;
;			CPTR - IGNORE ROTOR AERODYNAMICS
;
;			CPTR2 - TREAT ROTOR AS A WING
;
;
;
AERO:			;SCALE THE THRUST
	LDB ZERO
	LDA THRUST,CLA
	LDC K1,MAC
	SAC THRUST
;
;FIND WIND VELOCITY NORMAL TO THE WING 
	LDA ZERO
	LDB VX,CLA
	LDC AZ1,MAC
	LDB VY
	LDC BZ1,MAC
	LDB VZ
	LDC CZ1,MAC
	SAC QW			;QW= - VX*AZ1 - VY*BZ1 - VZ*CZ1
;
;	LDB ZER0
	LDA THRUST,CLA
	LDC AX1,MAC
	LDA PDR
	LDC VX,MAC
	LDA QW
	LDC AZ1,MAC
	SAC FX			;FX= THRUST*AX1 + PDR*VX + QW*AZ1
;
	LDA THRUST, CLA
	LDC BX1,MAC
	LDA PDR
	LDC VY,MAC
	LDA QW
	LDC BZ1,MAC
	SAC FY			;FY= THRUST*BX1 + PDR*VY + QW*BZ1
;
	LAC GRAV
	LDA THRUST
	LDC CX1,MAC
	LDA PDR
	LDC VZ,MAC
	LDA QW
	LDC CZ1,MAC
	SAC FZ,HALT		;FZ= THRUST*CX1 + PDR*VZ + QW*CZ1 + GRAV
;
;
;HELICOPTER 1
CPTR:				;SCALE THE THRUST
	LDB ZERO
	LDA THRUST,CLA
	LDC K1,MAC
	SAC THRUST
;
	LDA THRUST,CLA
	LDC AZ1,MAC
	LDA PDR
	LDC VX,MAC
	SAC FX			;FX= THRUST*AZ1 + PDR*VX
;
	LDA THRUST,CLA
	LDC BZ1,MAC
	LDA PDR
	LDC VY,MAC
	SAC FY			;FY= THRUST*BZ1 + PDR*VY
;
	LAC GRAV
	LDA THRUST
	LDC CZ1,MAC
	LDA PDR
	LDC VZ,MAC
	SAC FZ,HALT		;FZ = THRUST*CZ1 + PDR*VZ + GRAV
;
;
CPTR2:				;SCALE THE THRUST
	LDB ZERO
	LDA THRUST,CLA
	LDC K1,MAC
	SAC THRUST
;
;FIND WIND VELOCITY NORMAL TO THE ROTOR 
	LDA ZERO
	LDB VX,CLA
	LDC AZ1,MAC
	LDB VY
	LDC BZ1,MAC
	LDB VZ
	LDC CZ1,MAC
	SAC QW			;QW= - VX*AZ1 - VY*BZ1 - VZ*CZ1
;
	LDB ZERO
	LDA THRUST,CLA
	LDC AZ1,MAC
	LDA PDR
	LDC VX,MAC
	LDA QW
	LDC AZ1,MAC
	SAC FX			;FX= THRUST*AZ1 + PDR*VX + QW*AZ1
;
	LDA THRUST, CLA
	LDC BZ1,MAC
	LDA PDR
	LDC VY,MAC
	LDA QW
	LDC BZ1,MAC
	SAC FY			;FY= THRUST*BZ1 + PDR*VY + QW*BZ1
;
	LAC GRAV
	LDA THRUST
	LDC CZ1,MAC
	LDA PDR
	LDC VZ,MAC
	LDA QW
	LDC CZ1,MAC
	SAC FZ,HALT		;FZ= THRUST*CZ1 + PDR*VZ + QW*CZ1 + GRAV
;
;AIRSPEED - DOT PRODUCT OF VELOCITY AND X UNIT VECTOR
ASPEED:	LDB ZERO,CLA
	LDA VX
	LDC AX1,MAC
	LDA VY
	LDC BX1,MAC
	LDA VZ
	LDC CX1,MAC		
	SAC ASPD,HALT		;ASPD= VX*AX1 + VY*BX1 + VZ*CX1
;

;PERSPECTIVE MULTIPLY FOR TERRAIN OBJECTS
;YT IS INVERSE X
;XP IS OBJECT CENTER X
;YP IS OBJECT CENTER Y
;ZP IS OBJECT CENTER Z
;XP,YP,ZP HAVE BEEN NEGATED
;XR IS ROTATED TERRAIN OBJECT X
;YR IS ROTATED TERRAIN OBJECT Y
;ZR IS ROTATED TERRAIN OBJECT Z
;XS IS SCREEN X OUTPUT
;YS IS SCREEN Y OUTPUT

;NEXT TRANSLATED X IS PUT INTO XT
PER2:	LDA YR,IND
	LDB YP,CLA
	LDC YT,MAC
	SAC XS,IND		;XS,IND=(YR,IND-(-YP))*(YT)
;
	LDA ZR,IND
	LDB ZP,CLA
	LDC YT,MAC
	SAC YS,IND,IBC		;YS,IND=(ZR,IND-(-ZP))*(YT)
;
PER2I:	LDA XR,IND
	LDB XP,CLA
	LDC ONE,MAC
	SAC XT,IBC,HALT		;XT=(XR,IND-(-XP))*ONE

;
	.END
                                                                                                                                                                                                                                                        