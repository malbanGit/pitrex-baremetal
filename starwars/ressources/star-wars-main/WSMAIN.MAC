	.TITLE	WSMAIN GAME PLAY
	.INCLUDE	WSCOMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===
A$UVP	==0			;UNIT VECTOR POINTER
A$BIC	==2			;BLOCK INDEX COUNTER, LO BANK
A$TYP	==3			;TYPE (O.DEAD; 3.EXPLODING
A$PIC	==4			;PICTURE #
A$DIE	==5			;PROCESS OF DIEING
A$GLW	==6			;PROCESS OF GLOWING
A$HTA	==7			;HITS AVAILABLE BEFORE DIEING
A$DMC	==8			;CUNENT DAMAGE COUNT
A$ROL	==9			;FORCE ROLL OF SHIP
A$AIM	==10.			;AIMED AT PLAYER
A$TRGT	==11.			;=O.GO FOR HOME BASE; =-1.PLAYER
;A$SPD	==12.			;UPDATE RATE IN DEEP SPACE
A$CHPC	==13.			;PC FOR CURRENT CHOREOG
A$CHOP	==15.			;OP CODE
A$CHTM	==16.			;TIMER
A$CHTW	==17.			;TWIRL FLAGS
A$CHMV	==18.			;TW+1, MOVE FLAGS
A$CHCN	==19.			;CONTROL MASK, UNTIL STRUCTURE
A$CHST	==21.			;STATUS TESTED BY CONTROL
A$CHRT	==23.			;RETURN PC, SUBROUTINE
A$IZE	==25.			;# OF BYTES PER RECORD
A$EQ	==3			;# OF ALIEN RECORDS IN SEQUENCE
				;---
C$AH	==1			;NEARBY ALIEN HAS BEEN HIT
C$AD	==2			;/PLEASE DELETE/NEARBY ALIEN HAS DIED
C$AS	==4			;ALIEN HAS PLAYER IN SITES
C$AV	==8			;ALIEN HAS PLAYER IN FRONT VIEW
C$R1	==10			;
C$R2	==20			;
C$AG	==40			;ALIEN HAS FIRED A GUN
				;
C$PN	==400			;PLAYER IS NEAR THE ALIEN
C$PS	==800			;PLAYER HAS ALIEN IN SITES
C$PV	==1000			;PLAYER HAS ALIEN IN VIEW
C$PM	==2000			;PLAYER IS MIDDLIN NEAR TO ALIEN
				;---
G$UVP	==0			;MATH BOX POINTER
G$BIC	==2			;MATH BOX BIC, LO BANK
G$TYP	==3			;DESCRIPTOR OF GUN TYPE
G$MOV	==4			;MOVE ROUTINE
G$TMR	==5			;TIMER
G$IZE	==6
G$EQ	==6
				;---
				;---
M$AX	==-10+0
M$AY	==-10+0+2
M$AZ	==-10+0+0+4

M$BX	==-10+0+8
M$BY	==-10+0+8+2
M$BZ	==-10+0+8+4

M$CX	==-10+0+10
M$CY	==-10+0+10+2
M$CZ	==-10+0+10+4

M$TX	==-10+18+0
M$TY	==-10+18+2
M$TZ	==-10+18+4

M$VX	==-10+6
M$VY	==-10+6+8
M$VZ	==-10+6+10

				;---
				;RHEOSTAT
				;*** IRQ/MAINLINE INTERACTIONS !!!!
RH$LO	==0			;LO VALUE-MINIMUM
RH$LT	==1			;LO VALUE ON TRIAL
RH$SP	==2			;SPREAD MULTIPLIER
RH$ST	==3			;SPREAD CHANGE TIMER

RH$NML	==4			;NORMALZIED POT VALUE
RH$POS	==5			;SITE POSITION
RH$RAT	==7			;RATE OF TURN
RH$RSD	==8			;MAGIC  TIC RESIDUE
RH$IZ	==9			;SIZE OF BLOCK

				;===
				;(TC)
	.GLOBL AUXBIT
	.GLOBL $BCCNT,$CNCT,$$CRDT,$INTCT
	.GLOBL EEINDX,NVTSTR
	.GLOBL FIREBT,THMBT
	.GLOBL GN.SWE
	.GLOBL GTIME
	.GLOBL IN.SW0,IN.SW2
	.GLOBL INITLS,SAVINT,HSCORS,SAVSCR
	.GLOBL MOOTIM
	.GLOBL MUSTIM
	.GLOBL MS.CPY,MS.CPZ,MS.FLI,MS.FLZ,MS.SCR,MS.SCZ
	.GLOBL MS.CRD,MS.FRE,MS.GVR,MS.INS,MS.STR
	.GLOBL MS.DS1,MS.DSZ,MS.HS1,MS.HSZ,MS.NXT,MS.TWR,MS.RWD
	.GLOBL MS.BRE,MS.BON,MS.EXH,MS.ATP,MS.GO1
	.GLOBL MS.BSE,MS.MSD,MS.DSD
	.GLOBL MS.ACW,MS.SFB,MS.STF
	.GLOBL MS.OPT,MS.USE
	.GLOBL MSYOFF
	.GLOBL NAREA
	.GLOBL NXTMES,LSTMES
	.GLOBL OPTS0,OPTS1
	.GLOBL PH.COL,PH.TIM,PH.YOF
	.GLOBL PT.LIV
	.GLOBL RESETS
	.GLOBL RHEOP,RHEOY
	.GLOBL STRTBT
	.GLOBL TESTBT
	.GLOBL TEMP
	.GLOBL TIMER
	.GLOBL UPDFLG
	.GLOBL VGCOLR,VGRTSL
	.GLOBL VGCBLU,VGCGRN,VGCPRP,VGCRED,VGCTRQ,VGCWHT,VGCYLW
	.GLOBL VJBMIN

	.GLOBL ALLOFF
	.GLOBL EEACC,EEACCT,EECKSM,EEOPT,EEOPT1,EEOPT3,TMPEE3,EEINI0
	.GLOBL MESSON
	.GLOBL GETINT,SETINT
	.GLOBL RESET
	.GLOBL SUMMIT
	.GLOBL UPDATE
	.GLOBL VWHSCR
	.GLOBL VWMESS,DOMESS
	.GLOBL DOMES2,VWMES2
				;===
				;D-PAGE RAM
	.GLOBL AM.PTR
	.GLOBB BJ.CX,BJ.CY,BJ.DMC
	.GLOBB BS.EFL,BS.ELC,BS.RPT
	.GLOBL BS.PFL
	.GLOBB BT.SUP
	.GLOBB CL.ADS,CL.AP
	.GLOBB DT.SCL,DT.STP
	.GLOBB FRAME,FRAMEL
	.GLOBB GD.ACT,GD.ROL,GD.SEQ
	.GLOBB GN.SWE,GN.SWN,GN.SWO
	.GLOBB GS.GLW,GS.HIT,GS.OLD
	.GLOBB GMSYNC
	.GLOBB LZ.CX,LZ.CY,LZ.EDG,LZ.ON
	.GLOBB LZ.HIT
	.GLOBB PHASE
	.GLOBB PT.DLY
	.GLOBB R.FIRE,R.THMB
	.GLOBB SI.CX,SI.CY,SI.RSX,SI.RSY
	.GLOBB ST.BRT,ST.UX
	.GLOBL ST.UY,ST.UZ
	.GLOBB S.GAS,S.GLW,S.ROL,S.SC21,S.SC43,S.SC65,S.SC87
	.GLOBB S2.PRM
	.GLOBB VGSYNC
	.GLOBB VG.CX,VG.CY,VG.RSX,VG.RSY
	.GLOBB VG.LON
	.GLOBB WV.LIV,WV.LVL
	.GLOBL BS.WAV,SP.WAV,GD.WAV
				;----
				;RAM
	.GLOBL ALIEN,ALIENZ
	.GLOBL BCD,BIN
	.GLOBL COINSPK
	.GLOBL GM.BMP,GM.DIF,GM.WAV,GM.DWAV
	.GLOBL GUN,GUNZ
	.GLOBL GD.TWL
	.GLOBL Q.ATP,Q.FRC,Q.GHIT,Q.PBB,Q.PBD,Q.RTHV,Q.SHK
	.GLOBL Q.KTW,Q.BSH
	.GLOBL RHEOP,RHEOR,RHEOY
	.GLOBL SC.FWV,SC.ADD,SC.ADT
	.GLOBL TWRMULT
	.GLOBL WV.HRD
	.GLOBL XP.PHS
				;---
				;OUTSIDE ROUTINES
	.GLOBL AUDCR,AUDPB,AUDPS,AUDPS,AUDRY,AUDTH
	.GLOBL BGBNNR,VWBNNR,VWSPMS
	.GLOBL CHKHIS
	.GLOBL CPU,CPURET,NWNSHP
	.GLOBL EETEMP,EEUTIM
	.GLOBL DOBASE,GNBASE,NWBASE,VWBASE
	.GLOBL VWFRC
	.GLOBL ADCGAS,DO1GAS,VWGAS
	.GLOBL BG1GLW,DO1QGLW,DO1GLW,DONGLW,KPGLOW,VWGLW
	.GLOBL IGRND,VWGRND
	.GLOBL MVGUN,VWGUN
	.GLOBL CLGLZ,CLBLZ,CLSLZ,TSTLAZ,VWLAZ
	.GLOBL ADASHP,ADBOBJ,OBJCEN,OBJDRW,OBJBPNT,TD$GND,TD$RTH
	.GLOBL PMBEN,PMCNT,PMDES,PMEND,PMREB,PMRRP,PMTH5,PM4TH
	.GLOBL PMTHB,PMDAR
	.GLOBL MGOWT
	.GLOBL MVPTGN,VWPTGN
	.GLOBL S1PT,S1RL,S1YW
	.GLOBL SCRSHL,SCRWAV,SCRPORT
	.GLOBL SPKLET,SPKRED,SPKSIZ,SPKTHI,SPKTRU,SPKUSE,SPKSTR
	.GLOBL SPKREM,SPKALW,SPKFOA,SPKIMO
	.GLOBL SPKFOR,SPKHAV,SPKSTA,SPKYAU
	.GLOBL SPKR2N,SPKSKP,SPKELE,SPKGRE
	.GLOBL TD$RTH
	.GLOBL UNITV,IS1UV,IS2UV
	.GLOBL VWSITC,VWSITE
	.GLOBL VW6DIG,VW8DIG,VWBYTE,VWNIBL
	.GLOBL IXPLD,DOXPLD,VWXPLD
	.GLOBL BGXPLN,VWXPLN
	.GLOBL VWSTAR,VWSTRG
				;----
				;MATH BOX
	.GLOBL MBRAM
	.GLOBL M$CNCT
	.GLOBL M$PERS,M$PSB2,M$PTCH
	.GLOBL M$ROLL
	.GLOBL M$S1BC
	.GLOBL M$U1BC
	.GLOBL M$YAW
	.GLOBL M.AL,M$ALBC
	.GLOBL M.BIC,M.BICH,M.BICL,M.BUSY
	.GLOBL M.COS,M.C40,M.C80
	.GLOBL M.DVD,M.DVN
	.GLOBL M.GN,M$GNBC
	.GLOBL M.HLF
	.GLOBL M.ONE
	.GLOBL M.PCGO
	.GLOBL M.SCL,M.SIN,M.SINH,M.STAD,M.STAZ,M.S1
	.GLOBL M.U1
	.GLOBL M.XP,M.XPS,M.XT
	.GLOBL M.YP,M.YPS,M.YT
	.GLOBL M.ZP,M.ZPS,M.ZRO,M.ZT
				;---
				;VECTOR GENERATOR
	.GLOBL VG$CW
	.GLOBL VGBFSZ
	.GLOBL VGCNTR
	.GLOBL VGCGRN,VGCOPC,VGCBLU
	.GLOBL VGLIML,VGLIMR
	.GLOBL VGOFFY
	.GLOBL VGRAM,FAKEVG,VGPSROM,VGRROM
	.GLOBL VGRW1,VGRW3,VGRW5,VGRW6,VGRW7
	.GLOBL VGSCAL
	.GLOBL VJHALF
	.GLOBL VJMFL
	.GLOBL VJINIT,VJTITLE,VGVARB
	.GLOBL VJBCIR,VJBDSH,VJBFRM,VJBMIN,VJBNSD,VJBTRN
	.GLOBL VJUB1,VJUB2,VJUB3,VJUB4,VJLB1,VJLB2,VJLB3,VJLB4
				;---
				;HARDWARE
	.GLOBL DPRAM
	.GLOBL LFIRBT
	.GLOBL P.RND1,P.RND2,P.IRND
	.GLOBL POTSAV
	.GLOBL STACK
				;----
				;SHIFT ROUTINES
	.IRP .A,<3,4>
	.GLOBL ASRD'.A
	.ENDR

	.IRP .A,<4,5,7,8>
	.GLOBL LSLD'.A
	.ENDR
				;===

	.MACRO .PAGG		;GLOBAL PAGE NUMBERS
	.PAGEG M		;MAINLINE
	.ENDM
				;===

	.CSECT MAIN
				;===
	.PAGG
	.SBTTL MAINLINE

WAITFRAME::			;---
				;
	LDX #0			;TALK TO DEV SYS
	LDD #0F800		;PATCH TO 0BD TO TURN ON (JSR)
	LDA #DPRAM/100
	TFR A,DPR
				;---
	LSR GMSYNC		;PROCESS GAME FRAMES IN TIMELY FASHION
	BCC WAITFRAME
				;---
	CMPS #STACK
	IFNE			;?SOME FRAME NEEDS A DELAY?
	RTS			;THEN LET IT CONTINUE
	ENDIF
				;---
	LDA PT.DLY
	IFEQ			;?FAR ENUF INTO POWER ON?
				;PREVENT STARTUP BLANK STARES
	LDA IN.SW2		;LOOK AT FREEZE SWITCH (BT7 OPTION BANK 1)
	ANDA #BT7		;FREEZE?
	IFEQ			;?SWITCH ON? THEN FREEZE
	LDA VG.LON		;USE LEFT FIRE BIT FOR SINGLE STEPPING
	BITA #LFIRBT
	BEQ WAITFRAME		;B NO LEFT EDGE, SO LOOP FOREVER (ALMOST)
				;ELSE SINGLE STEP JUST THIS TIME
	ANDA #-1-LFIRBT		;CLEAR OUT THIS BIT ONLY, RIGHT STILL FIRES
	STA VG.LON		;JUST TESTING, SO IGNORE SEI/CLI
	ENDIF
	ENDIF
				;---
	JSR IFRAME		;INIT GAME FRAME
	BEGIN			;WAIT FOR VG BUFFER
	LDA VGSYNC		;NON-NEGATIVE VALUE INDICATES BUFFER READY
	PLEND
				;---
MAIN::				;---
	LDA PHASE		;EXECUTE PHASE
	CMPA #PH$EQ
30$:	BHS 30$			;DIE ON BAD PHASE
	LSLA
	LDX #TPHASE
	JSR @A(X)
				;---
	BRA WAITFRAME		;NEXT MAIN FRAME

				;---
	.MACRO P. .1,.2		;PHASES
PH$'.1'	==PH$EQ
	.IF		  NB,'.2'
	.WORD PHI'.1'
PH$EQ	=PH$EQ+1
	.ENDC		; NB,'.2'
	.WORD PHE'.1'
PH$EQ	=PH$EQ+1
	.ENDM

	PH$EQ=0
				;---
TPHASE:				;GAME PHASE TABLE
	P. RES			;RESET
				;---
	P. STS,I		;STATISTICS
	P. OPT,I		;OPTION SWITCH
				;
	P. BNR,I		;BANNER
	P. INS,I		;FLIGHT INSTRUCTIONS
	P. SCR,I		;SCORING PAGE
	P. HIS,I		;HI SCORE TABLE DISPLAY
				;
	P. SDS,I		;SELECT A DEATH STAR
	P. ENT,I		;ENTER INITIALS
				;---
	P. DX1,I		;DEATH STAR EXPLOSION, FIRST PHASE
	P. DX2,I		;DEATH STAR EXPLOSION, SECOND PHASE
	P. DX3,I		;DEATH STAR EXPLOSION, THIRD PHASE
				;---
	P. CN1,I		;FIRST COIN
	P. SG1,I		;START GAME PART 1
	P. SG2,I		;START GAME PART 2
	P. BGN,I		;BEGIN ACT
				;
	P. SP1,I		;SPACE WAVE 1
	P. SP2,I		;SPACE WAVE 2
	P. S0G,I		;SPACE TO GROUND TRANSITION
	P. S1G,I		;	NEXT PART
	P. S0B,I		;SPACE TO BASE TRENCH TRANSITION
				;
	P. GD,I			;GROUND PHASE
	P. G0B,I		;GROUND TO BASE TRENCH TRANSITION
	P. G1B,I		;	NEXT PART
				;
	P. BS,I			;BASE STAR
	P. B0B,I		;BASE TRENCH REPEAT TRANSITION
				;
	P. NXT,I		;NEXT ACT
	P. S0D,I		;SPACE TO DIE, TRANSITION
	P. G0D,I		;GROUND TO DIE, TRANSITION
	P. B0D,I		;BASE TRENCH TO DIE, TRANSITION
	P. EGM,I		;END GAME
	.PAGG
IFRAME:
	INC FRAME+1
	IFEQ			;?OVERFLOW?
	INC FRAME		;KEEP TRACK
	IFEQ			;?OVERFLOWED HI BYTE ALSO?
	LDA #80			;?WORD OVERFLOW?
	STA FRAME		;THEN STICK
	ENDIF
	ENDIF
				;---
	LDA $$CRDT
	IFEQ
	STA COINSPK		;0 ==> START OVER AGAIN
	ELSE			;ELSE GOT SOME COINS
	LDA COINSPK
	IFEQ			;?FIRST TIME?
	JSR SPKFOR		;'THE FORCE WILL BE WITH YOU'
	LDA $$CRDT
	STA COINSPK		;REMEMBER WHY WE SPOKE
	ELSE			;ELSE NOT FIRST TIME
	LDA COINSPK
	CMPA $$CRDT
	IFLO			;?GOT SOME NEW CREDIT AGAIN?	
	JSR SPKALW		;'ALWAYS'
	LDA #0FF
	STA COINSPK		;SAY NO MORE TILL COINS GONE
	ENDIF
	ENDIF
	ENDIF
				;---
	JSR VGTOSITE		;PULL VG(IRQ) CURSOR COORDS INTO SI.*
				;---
				;GET EDGE OF SWITCHES-- LFIRE,RFIRE,AUX,TEST,COINS
	LDA GN.SWN		;PREVIOUS NEW VALUE
	STA GN.SWO		;IS CURRENT OLD VALUE
	LDA R.THMB
	ANDA #THMBT		;ISOLATE THUMB BITS
	PSHS A			;TEMP
	LDA R.FIRE		;GET THIS NEWEST VALUE
	ANDA #-1-THMBT		;OPEN UP SPACE FOR THUMBS
	ORA 0(S)+		;ORA WITH POP
	ANDA #FIREBT!THMBT!AUXBIT	;ONLY CONCERNED WITH GUN CONTROLS
	STA GN.SWN		;AND SAY SO
	EORA GN.SWO		;CATCH ANY CHANGES
	ANDA GN.SWO		;FROM AN OLD '1'
	STA GN.SWE		;1==>FALLING EDGE (WENT ON)
				;---
	RTS
				;---
IVGEN1:
	LDA VGSYNC
	LDB #VGRAM&0FF+VGVARB
	TFR D,Y			;Y-->VG BUFFER
IVGEN:				;---
	LDD #VJINIT		;INIT VECTOR GENERATOR
	STD (Y)++
				;---
	RTS
				;===
DOWNVG::			;DOWNLOAD FAKEVGROM TO VGRAM
	LDX #FAKEVG		;ROM ADDRESS OF VG INSTRUCTIONS
	LDU #VGPSROM		;ADDRESS OF WHERE THEY BELONG
	BEGIN
	LDD (X)++
	STD (U)++
	CMPU #VGRROM		;STOP AT VG REAL ROM
	HSEND
	RTS
				;===
VGDONE:
	LDD #VGCNTR		;CENTER
	STD (Y)++
	LDD #2020
	STD (Y)++		;ASK FOR HALT
	STD (Y)+		;FORCE HALT, POINT TO LAST ADDRESS USED
	TFR Y,D			;CHECK FOR OVERFLOW
	SUBA VGSYNC		;END-BEGIN
	SUBA #VGBFSZ/100	;CMP WITH MAX SIZE
	IFHS			;?OVERFLOW?
;;;	SWI			;DIE--OVER RUN VG RAM
	JSR DOWNVG		;RELOAD RAM COPY OF PSUEDOVGRAM
	LDD #2020
	STD VGBFSZ+VGRAM-2
	STD VGBFSZ+VGRAM-4
	STD 2*VGBFSZ+VGRAM-2
	STD 2*VGBFSZ+VGRAM-4
	ENDIF			;---
	LDA #0FF		;FINISHED WITH BUFFER
	STA VGSYNC		;MINUS INDICATES DONE WITH BUFFER
	RTS
IPARM:
	JSR IPGEN		;INIT PARAMETERS, GENERAL
	JSR NW1SHP		;INIT PLAYERS SHIP
	RTS
				;---
IPGEN:				;INIT GENERAL PARMS
	LDA P.RND1
	CMPA P.RND1
	IFEQ			;?# GENERATOR STUCK?
	STA P.IRND		;INIT POLY COUNTER
	LDA #80			;START IT RUNNING
	STA P.IRND
	ENDIF
				;
	LDA #80
	STA ST.BRT		;STAR BRITENESS
	LDX #ALIEN
	LDU #M.AL
	LDB #M$ALBC
30$:				;---
	STU A$UVP(X)
	STB A$BIC(X)
	LEAU 20(U)
	ADDB #4
	LEAX A$IZE(X)
	CMPX #ALIENZ
	BLO 30$

	LDX #GUN
	LDU #M.GN
	LDB #M$GNBC
40$:				;---
	STU G$UVP(X)
	STB G$BIC(X)
	CLR G$TYP(X)
	LEAU 8(U)
	ADDB #1
	LEAX G$IZE(X)
	CMPX #GUNZ
	BLO 40$

	JSR NWNSHP
	LDB #TD$RTH		;ADD DARTH TO THE LIST
	JSR ADBOBJ
	LDB #TD$GND		;ALSO GROUND OBJECT
	JSR ADBOBJ
				;---
	RTS
IMATH:
				;---
	LDD #0
	STD M.ZRO
				;---
	LDD #4000
	STD M.ONE		;CONSTANT '1'
	LDD #0E000		;CONSTANT DIVIDE BY 2
	STD M.HLF
	LDD #0080		;ROUNDING CONSTANTS
	STD M.C80		;0080
	LDD #0040
	STD M.C40		;0040
				;---
	LDD #21F		;SIN,COS ANGLES
	STD M.SINH		;FOR .895 DEGREES
	LDD #3FF7
	STD M.COS
	LDD #4000		;SCALE
	STD M.SCL
				;---
	LDD #200
	STD M.DVN		;RECIPROCAL PERSPECTIVE
				;---
	RTS

ISTAR:
	LDA #80
	STA ST.BRT		;INITIAL BRITENESS
				;---
	LDX #M.STAD
10$:				;---
	LDA P.RND2		;REVERSE OF INITING ORDER FOR RANDOMNESS
	LDB P.RND1		;TRY TO POPULATE EVENLY
	STD 0(X)
	MUL
	LDA P.RND2
	STD 2(X)
	MUL
	LDA P.RND2
	STD 4(X)
	LEAX 8(X)
	CMPX #M.STAZ
	BLO 10$
	RTS
				;===

ISTARG:
	LDX #M.STAD
10$:				;---
	LDA P.RND2		;REVERSE OF INITING ORDER FOR RANDOMNESS
	LDB P.RND1		;TRY TO POPULATE EVENLY
	STD 0(X)
	MUL
	LDA P.RND2
	STD 2(X)
	CLRD
	STD 4(X)
	LEAX 8(X)
	CMPX #M.STAZ
	BLO 10$
	RTS
				;===

STRTCK:				;CHECK FOR START SWITCH AND SELF TEST ( STATS )
	; THIS ROUTINE SHOULD ONLY BE CALLED DURING ATTRACT PHASES
	LDB SI.RSX		;SITE POSITION X
	CMPB #0A0		;EXTREME LEFT?
	IFLE			;YES, MAY GO TO INSTRUCTION PHASE
	LDA #PH$INS+1
	CMPA PHASE		;ALREADY THERE?
	IFNE			;NO, THEN GO THERE
	DECA			;INITIALIZER FRO THE PHASE
	STA PHASE
	ENDIF
	ELSE
	CMPB #60		;EXTREME RIGHT?
	IFGE			;YES, THEN MAYBE WE'LL GO TO HIGH SCORE TABLE
	LDA #PH$HIS+1
	CMPA PHASE		;ALREADY THERE?
	IFNE			;NOPE, OK DOIT
	DECA			;INITIALIZER
	STA PHASE
	ENDIF
	ENDIF
	ENDIF
	LDA OPTS0+1		;LOW NIBBLE OF COIN OPTIONS
	ANDA #03		;COIN MODE
	IFEQ			;FREE PLAY
	LDA #01			;GIVE FREE CREDIT ( NO 2 COIN MINIMUM )
	STA $$CRDT
	ENDIF
	LDA $$CRDT		;AVOID TEMPTATION TO DECA
	IFNE			;MAYBE WE'LL START A GAME
	LDA GN.SWE		;SWITCH EDGES
	ANDA #STRTBT		;START SWITCH(ES)?
	IFNE			;YES,   OH BOY!!
	LDA #PH$SG1		;START THE GAME
	STA PHASE
	DEC $$CRDT
	ENDIF
	ENDIF
TSTCK:	LDA IN.SW0		;CHECK FOR SELF-TEST SWITCH
	ANDA #TESTBT
	IFEQ			;GO TO STATS PHASE
	LDA #PH$STS
	STA PHASE
	ENDIF
	RTS
				;===
	.PAGG
	.SBTTL PHASES
	.SBTTL	RESET
PHERES:
	SEI			;***

	LDX #POTSAV
	JSR EETEMP		;GET POT VALUES FROM EEROM
				;
	LDX #TEMP
	JSR 100$
	STA RHEOP+RH$LO
				;
	LDX #TEMP+1
	JSR 100$
	STA RHEOP+RH$SP
	
	LDX #TEMP+2
	JSR 100$
	STA RHEOY+RH$LO
				;
	LDX #TEMP+3
	JSR 100$
	STA RHEOY+RH$SP
				;---

	CLI			;***
				;---
	LDA #PH$HIS
	STA PHASE
	LDA #0FF		;DON'T PLAY MUSIC ON POWER UP
	STA MUSTIM
	JSR IMATH
	JSR IPARM
	JSR DOWNVG		;SETUP VG PSUEDO-ROM
	JSR ISTAR
	JSR ALLOFF		;TURN ALL MESSAGES OFF
	LDA #0
	STA S.SC87
	STA S.SC65
	STA S.SC43
	STA S.SC21
	STA GS.GLW
	STA GS.HIT
	JSR SETINT		;SET UP HI SCORES AND INITIALS (HI KIDS!)
	LDA #0FF
	STA UPDFLG		;NO HIGH SCORES YET
	STA MOOTIM		;ALLOW COIN ROUTINE TO INIT ITSELF
	RTS
				;===
100$:				;ADJUST THE POTS
	LDA #40			;ADJUST VALUES
	CMPA (X)
	IFHI
	SUBA (X)
	LSRA
	LSRA
	LSRA
	INCA
	ADDA (X)
	ENDIF
	RTS
				;===

	.PAGG
	.SBTTL	INSTRUCTION PAGE
PHIINS:
	LDD #0000		;WAS 380 FOR SCROLLING
	STD PH.YOF		;PHASE Y OFFSET
	LDD #0200
	STD PH.TIM
	LDA #MS.FLI		;"FLIGHT INSTRUCTIONS..."
	STA NXTMES
	LDA #MS.FLZ+1
	STA LSTMES
	LDD #VGCOLR+<VGCRED*100>;RED
	STD PH.COL
	JSR ALLOFF		;TURN OFF ALL MESSAGES
	INC PHASE
	RTS
PHEINS:
	JSR IVGEN1		;SETUP VECTOR GENERATOR AND Y AS POINTER
	JSR VWMES		;SCORE AND STUFF
	JSR VWCOIN		;"INSERT COIN", ETC.
	JSR VWPAGE		;VIEW INSTRUCTION OR SCORING SCREEN
	JSR VWSTAR		;SHOW THEM STARS
	JSR VGDONE		;DONE WITH THE VG IN THIS PHASE
	JSR SMVINS		;MOVE THE STARS FOR INSTRUCTION SCREEN
	LDD PH.TIM		;DONE?
	IFMI			;YES, THEN GO ON TO THE NEXT PHASE
	INC PHASE
	ENDIF
	JSR STRTCK		;CHECK FOR START SWITCH
	RTS
	.PAGG
	.SBTTL	SCORING PAGE
PHISCR:
	LDD #03C0		;FOR SCROLLING
	STD PH.YOF
	LDD #0200
	STD PH.TIM
	LDA #MS.SCR		;"SCORING"
	STA NXTMES
	LDA #MS.SCZ+1
	STA LSTMES
	LDD #VGCOLR+<VGCPRP*100>;PURPLE
	STD PH.COL
	JSR ALLOFF
	INC PHASE
	RTS

PHESCR:
	JSR IVGEN1		;SETUP VECTOR GENERATOR AND Y AS POINTER
	JSR VWMES		;SCORE AND STUFF
	JSR VWCOIN		;"INSERT COIN", ETC.
	JSR VWPAGE		;VIEW INSTRUCTION OR SCORING SCREEN
	JSR VWSTAR		;SHOW THEM STARS
	JSR VGDONE		;DONE WITH THE VG IN THIS PHASE
	JSR SMVSCR		;MOVE THE STARS FOR SCORING SCREEN
	LDD PH.TIM		;DONE?
	IFMI			;YES, THEN GO ON TO THE NEXT PHASE
	INC PHASE
	ENDIF
	JSR STRTCK		;CHECK FOR START SWITCH
	RTS


VWPAGE:
	LDD PH.TIM		;UPDATE PHASE TIMER ( DOWNDATE ??? )
	SUBD #0001
	STD PH.TIM
	ANDB #07		;READY TO START NEXT LINE?
	IFEQ			;YES
	LDA NXTMES
	IFPL			;A NEGATIVE VALUE MEANS NO MORE LINES
	JSR MESSON
	ENDIF
				;---
	LDA NXTMES
	CMPA #MS.FLI+3		;SHIELD STRENGTH MESSAGE
	IFEQ			;INSERT CORRECT STRENGTH
	LDA OPTS1+1		;LOW NIBBLE OF 2ND OPTION SWITCH BANK
	ANDA #03
	ADDA #MS.FLZ+1		;SHOULD GIVE STRENGTH FROM 6 TO 9
	JSR MESSON
	ENDIF
				;---
	LDA NXTMES		;INC NEXT MESSAGE
	ADDA #1
	CMPA LSTMES		;NO MORE FOR THIS PHASE?
	IFHS			;THAT'S ALL FOLKS
	LDA #80			;FLAG IT AS NO MORE
	ENDIF
	STA NXTMES
	ENDIF
				;---
	LDD PH.YOF		;UPDATE MESSAGE Y OFFSET ( SCROLL )
	SUBD #0008
	IFMI			;TOO FAR
	LDD #0000
	ENDIF
	STD PH.YOF

	LDD PH.TIM
	CMPD #0C0
	IFLO			;START FADING MESSAGES OUT
	LDB PH.COL+1		;DECREMENT Z
	SUBB #01
	CMPB #10		;DIM ENOUGH AT 10 DON'T WASTE TIME GOING TO 0
	IFLO
	LDD #0000
	STD PH.TIM		;PHASE OVER
	ENDIF
	STB PH.COL+1
	ENDIF
	LDD PH.YOFF
	STD MSYOFF
	LDD PH.COL		;COLOR AND BRIGHTNESS
	STD (Y)++
	JSR VWMES2		;VIEW MESAGES (NO COLOR COMMAND )
	RTS


VWCOIN:
	LDA $$CRDT		;DO THE FIRST OF TWO LINES
	IFEQ			;NO CREDIT--FLASH "GAME OVER"+"INSERT COINS"
	LDA FRAME+1
	ANDA #10		;PICK A RATE FOR FLASH
	IFEQ
	LDB #MS.INS		;"INSERT COINS" ON
	ELSE
	LDB #MS.GVR		;"GAME OVER" ON
	ENDIF
	JSR DOMESS
	ELSE			;ELSE WE HAVE ENUF CREDIT
				;WE GOT THEIR MONEY SO TELL THEM TO...
	LDB #MS.STR		;"PRESS FIRE TO START"
	JSR DOMESS
	ENDIF
				;---
				;NOW DO SECOND OF TWO LINES
	LDA $$CRDT
	IFEQ			;?NO CREDITS YET?
	LDA $CNCT
	IFNE			;?ANY PARTIAL CREDITS?
	LDA FRAMEL
	ANDA #10
	BEQ 30$			;B INSERT COINS GOES WITH COIN COST
	BRA 50$			;B GAME OVER GOES WITH # OF CREDITS
	ELSE			;ELSE NO PARTIAL CREDITS
30$:				;---
				;NOW TELL THEM HOW MUCH ITS GONNA COST
	LDB OPTS0+1		;LOW NIBBLE OF COIN OPTIONS
	ANDB #03		;0=FREE,1=2 PLAYS/COIN,2=1PLAY/COIN,3=2COINS/PLAY
	ADDB #MS.FRE		;GET CORRECT MESSAGE NUMBER	
	JSR DOMESS		;DOIT
	ENDIF
	ELSE			;ELSE WE HAVE SOME CREDITS
50$:				;---
	LDA $$CRDT		;SHOW HOW MANY "CREDITS" THEY HAVE
	ADDA $CNCT
	CMPA #1
	IFEQ			;?GOT HALF OR ONE CREDITS?
	LDB #MS.CRD+1		;THEN SAY SINGULAR CREDIT
	ELSE			;ELSE USE PLURAL
	LDB #MS.CRD
	ENDIF
	JSR DOMESS
				;
	LDD #1B0
	ANDA #1F
	STD (Y)++
	LDD #-80
	TST $CNCT
	IFNE			;?HAVE A PARTIAL CREDIT?
	SUBD #24.		;THEN BACK UP, PREPARE FOR HALF SIGN
	ENDIF
	ANDA #1F
	STD (Y)++
	LDA $$CRDT		;00-12 HEX
	CMPA #0A
	IFHS			;CONVERT 0A-12 TO 10-18
	ADDA #06
	ENDIF
	LDB #02			;SUPPRESS BOTH DIGITS
	STB BT.SUP
	JSR VWBYTE		;SHOW THEM
	LDA $CNCT
	IFNE			;?STILL HAVE A PARTIAL CREDIT?
	LDD #VJHALF		;THEN SAY SO
	STD (Y)++
	ENDIF
	LDD #VGCNTR		;ALWAYS DO A CENTER AFTER YOU'RE DONE
	STD (Y)++
	ENDIF
	RTS
				;===
	.PAGG
	.SBTTL	HIGH SCORE DISPLAY

PHIHIS:
	LDD #0000
	STD PH.YOF
	STD MSYOFF
	LDD #0100
	STD PH.TIM
	LDD #VGCOLR+<VGCBLU*100>
	STD PH.COL
	JSR ALLOFF
	JSR IMATH		;RESTORE MATH BOX
	JSR IPARM
	LDU #M.U1		;STARS ASSUME UV1 MATRIX
	JSR UNITV		;SETUP FACING FORWARD
				;
	JSR CHKHIS		;CHECK HI SCORE FOR REASONABLENESS
				;
	INC PHASE
	RTS

PHEHIS:
	JSR IVGEN1		;SETUP VG AND Y AS POINTER
	JSR CPYRGHT		;SHOW COPYRIGHT MESSAGE
				;***COPYRIGHT FIRST FOR SECURITY CHECK	
	JSR VWSTAR		;SHOW THOSE STARS
	JSR VWMES		;SCORE AND STUFF
	JSR VWCOIN		;"GAME OVER", ETC.
	LDD PH.TIM		;FADER?
	CMPD #0050
	IFLO			;YEP, DIM IT DOWN
	LDB PH.COL+1
	SUBB #01
	CMPB #0F0
	IFHS			;PROBABLY WRAPPED
	LDB #00
	ENDIF
	STB PH.COL+1
	ENDIF
	LDD PH.COL		;PUT THE COLOR OUT
	STD (Y)++
	JSR VWHSCR		;PUT THE HIGH SCORES ON THE SCREEN
	JSR VWMESS		;SHOW MESSAGES
	JSR VGDONE		;ALL DONE WITH THE VG THIS PHASE
	JSR SMVHIS		;MOVE THE STARS APPROPRIATLY FOR HIGH SCORES
	LDD PH.TIM		;UPDATE TIMER
	SUBD #0001
	STD PH.TIM
	IFMI			;THATS LONG ENOUGH
	LDA #PH$BNR		;SHOW 'EM  THE BANNER
	STA PHASE
	ENDIF
	JSR STRTCK		;CHECK FOR START OR STATS
	RTS
				;===

CPYRGHT:
	LDB #MS.CPY		;COPYRIGHT MESSAGES
	JSR DOMESS		;MESSAGE AND SETS COLOR
	LDB #MS.CPY+1
	JSR DOMESS
	LDB #MS.CPY+2
	JSR DOMESS
	LDB #MS.CPZ		;LAST ONE
	JSR DOMESS
	RTS
	.PAGG
	.SBTTL	STATISTICS DISPLAY
PHISTS:
	JSR ALLOFF
	LDD #0000		;NO Y OFFSET FOR MESSAGES
	STD PH.YOF
	STD MSYOFF
	INC PHASE
	RTS

PHESTS:
	JSR IVGEN1		;SETUP VG
	JSR EEACC		;DISPLAY STATS AND ACCOUNTING INFO
	JSR VWMESS
	JSR VGDONE
				;---
	LDA GN.SWE		;CHECK FOR AUX SWITCH
	ANDA #AUXBIT
	IFNE			;GOTO NEXT PHASE
	LDA #PH$OPT		;OPTIONS PAGE
	STA PHASE
	ENDIF
	LDA IN.SW0		;CHECK FOR SELF TEST SWITCH
	ANDA #TESTBT
	IFNE			;SWITCH OFF, GO BACK TO ATTRACT MODE
	LDA #PH$BNR		;BANNER PHASE
	STA PHASE
	ENDIF
	RTS

PHIOPT:
	JSR ALLOFF		;TURN OFF ALL MESSAGES
	LDA #0A			;HIGH LITE INDEX STARTS WITH MESSAGE
	STA EEINDX
	LDA #00
	STA RESETS		;START WITH A CLEAN SHEET
	STA NVTSTR		;NOVRAM TEST RESULTS ( 0 MEANS NO TEST DONE )
	LDA #NAREA
	JSR SUMMIT		;CHECK FOR PROPER CHECKSUM
	IFNE			;?BAD CHECKSUM?
	LDA #NAREA
	JSR EEINI0		;THEN RE-INIT IT
	ENDIF
	INC PHASE
	RTS

PHEOPT:
	JSR IVGEN1		;SETUP VG
	JSR EEOPT		;DISPLAY ALL OPTIONS
	LDD #VGCOLR+<VGCWHT*100>;HILITE COLOR
	STD (Y)++
	LDB #MS.OPT+1		;BASE MESSAGE NUMBER
	ADDB EEINDX
	JSR DOMES2		;OUTPUT OPTION MESSAGE IN HILITE
	LDA EEINDX		;HILITE THIS OPTION'S VALUE
	JSR EEOPT3		;OUTPUT OPTION VALUE
	JSR EEOPT1		;MAKE CHANGES TO OPTIONS
	JSR VWMESS
	JSR VGDONE
				;---
	LDA GN.SWE		;CHECK FOR AUX SWITCH
	ANDA #AUXBIT
	IFNE			;GOTO NEXT PHASE
	JMP RESET		;DO RESET AND SELF TEST
	ENDIF
	LDA IN.SW0		;CHECK FOR SELF TEST SWITCH
	ANDA #TESTBT
	IFNE			;SWITCH OFF, GO BACK TO ATTRACT MODE
	JSR ALLOFF		;TURN OFF ALL MESSAGES
	LDA #PH$BNR		;BANNER PHASE
	STA PHASE
	ENDIF
	RTS
	.PAGG
	.SBTTL	SELECT A DEATH STAR
PHISDS:
	LDD #0100
	STD PH.TIM
	LDD #0000
	STD PH.YOF
	STD MSYOFF
	LDD #VGCOLR+<VGCRED*100>;RED
	STD PH.COL
	JSR ALLOFF		;TURN OFF ALL MESSAGES
	LDB #MS.DS1
	BEGIN
	TFR B,A
	JSR MESSON
	INCB
	CMPB #MS.DSZ+1
	HSEND
				;
	INC PHASE
	RTS


TDTH:				;X,Y POS
	.WORD	100.,-400.
;;;	.WORD	-100.,-200.
	.WORD	-300.,000.
;;;	.WORD	-100.,200.
	.WORD	100.,400.
TDTHZ:

PHESDS:
	LDD PH.TIM
	SUBD #0001
	STD PH.TIM
	IFMI			;PLAYER DIDN'T DECIDE, START AT EASY
	LDA #00
	STA GM.WAV
	LDA #PH$SG2		;START THE GAME
	STA PHASE
	CLR GTIME+2
	CLR GTIME+1		;CLEAR GAME TIMES AT START OF GAME
	CLR GTIME		;KEEP CORRECT ORDER (IRQ INTERACTION)
	RTS
	ENDIF			;ELSE KEEP LOOKING
	JSR IVGEN1		;SETUP VG
	LDX #TDTH		;TABLE FOR DEATH STAR SETUP
	BEGIN	
	LDD (X)++		;Y POS
	ANDA #1F
	STD (Y)++
	LDD (X)++		;X POS
	ANDA #1F
	STD (Y)++
	LDD #VGSCAL+0		;SIZE THE DEATH STAR
	STD (Y)++
	LDD #VJBMIN		;MINIATURE BASE
	STD (Y)++
	CMPX #TDTHZ		;END OF TABLE?
	HSEND
	LDA WV.LVL		;WHAT COLOR FOR THE CURSOR
	IFMI			;NOT ON ANY PLANETOID
	LDD #VGCOLR+<VGCTRQ*100>;SO MAKE IT THE STANDARD CURSOR COLOR
	ELSE			;ZEROED IN ON A FAVORITE
	LDD #VGCOLR+<VGCYLW*100>;LET THEM SEE THE LIGHT
	ENDIF
	STD (Y)++
	JSR VWSITC		;SITE WITHOUT COLOR INSTRUCTIONS
	JSR VWMESS		;LOOK AT THE MESSAGES
	LDD #200.&1FFF		;POSITION FOR COUNTDOWN
	STD (Y)++
	LDD #-16.&1FFF
	STD (Y)++
	LDD PH.TIM
	ASLD
	ASLD
	ASLD			;RESULTS ARE 00-10 HEX
	CMPA #0A
	IFHS			;CONVERT 0A-10 (HEX) TO 10-16 (DEC)
	ADDA #06
	ENDIF
	JSR VWBYTE
	JSR VGDONE
				;---
	LDA #0FF
	STA WV.LVL		;FLAG
	LDX #TDTH
	BEGIN
	LDD SI.CY		;Y POS OF CURSOR
	ADDD #VGOFFY		;ADD BACK THE SCREEN OFFSET
	SUBD (X)		;MINUS SCREEN CO-ORD FOR DEATH STAR
	ABSD
	STD TEMP
	CMPD #0072.
	IFLO			;POSSIBLE HIT
	LDD SI.CX		;X POS OF CURSOR
	SUBD 2(X)
	ABSD
	CMPD #0052.
	IFLO			;GETTING CLOSER
	ADDD TEMP
	CMPD #0080.
	IFLO			;DEFINITE HIT
	TFR X,D
	SUBD #TDTH
	LSRB			;CONVERT 0->0,4->2,8->4
	STB WV.LVL		;FLAG FOR YELLOW CURSOR
	STB GM.WAV
	LDA GN.SWE
	ANDA #FIREBT!THMBT	;EITHER TRIGGER OR THUMB SWITCH
	IFNE			;YUP, BUT DID PLAYER HIT ANYTHING
	LDA #PH$SG2		;FINISH STARTING THE GAME
	STA PHASE
	CLR GTIME+2		;CLEAR GAME TIMES AT START OF GAME
	CLR GTIME+1
	CLR GTIME		;DO IN CORRECT ORDER (IRQ INTERACTION)
	ENDIF
	RTS			;LEAVE
	ENDIF
	ENDIF
	ENDIF
	LEAX 4(X)
	CMPX #TDTHZ
	HSEND
	RTS
				;===
	.PAGG
	.SBTTL	ENTER INITIALS
PHIENT:
	LDD #0000
	STD PH.TIM
	STD PH.YOF
	STD MSYOFF
	LDD #VGCOLR+<VGCBLU*100>
	STD PH.COL
	JSR ALLOFF
	LDA #MS.HS1
	JSR MESSON
	LDA #MS.HS1+1
	JSR MESSON
	LDA #MS.HS1+2
	JSR MESSON
	LDA #MS.HS1+3
	JSR MESSON
	LDA #MS.HS1+4
	JSR MESSON
	LDA #MS.HSZ
	JSR MESSON
	JSR PMCNT		;CANTINA MUSIC
				;
	JSR CHKHIS		;CHECK EAROM HI SCORES FOR REASONABLENESS
				;
	INC PHASE
	RTS
PHEENT:
	JSR IVGEN1		;ENTER INITIALS FOR HIGH SCORE
	JSR VWMES		;SCORE AND STUFF
	JSR VWCOIN		;COIN STUFF
	JSR VWHSCR
	JSR VWMESS
	JSR VGDONE
				;---
	JSR GETINT		;GET THE PLAYER'S INITIALS
				;---
	LDA IN.SW0		;CHECK FOR TEST SWITCH
	ANDA #TESTBT
	IFEQ			;YES
	LDD #0300		;THEN ATTEMPT TO LEAVE THIS MODE GRACEFULLY
	STD PH.TIM		;SAYS TIME'S UP, NO MORE INITIALS
	ENDIF
				;---
	LDD PH.TIM
	ADDD #0001
	STD PH.TIM
	CMPD #0280		;GIVE 'EM ABOUT 30 SECONDS
	IFHS
	LDD #0FFFF
	STD UPDFLG
	ENDIF
				;---
	LDD UPDFLG
	IFMI			;DONE
	LDA #PH$HIS		;LOOK AT HIGH SCORE TABLE NOW
	STA PHASE
	LDU #INITLS		;TRANSFER TOP 3 HIGH SCORES TO NON-VOLATILE RAM
	LDX #SAVINT
	LDA #08
	JSR TMPEE3
	LDU #HSCORS
	LDX #SAVSCR
	LDA #11.
	JSR TMPEE3
	LDA #01			;EEROM AREA 1
	JSR EECKSM
	ENDIF
	RTS
	.PAGG
	.SBTTL	COIN1
PHIBNR:
PHICN1:
	INC PHASE

	JSR DOWNVG		;DOWNLOAD PSUEDO VGROM TO VGRAM
	JSR ALLOFF		;TURN OFF ALL MESSAGES
	LDD #0000		;SET Y OFFSETS FOR MESSAGES TO 0
	STD PH.YOF
	STD MSYOFF
	JSR BGBNNR		;START UP THE BANNER
	JSR IMATH		;RESTORE MATH BOX
	JSR IPARM
	LDU #M.U1		;STARS ASSUME UV1 MATRIX
	JSR UNITV		;SETUP FACING FORWARD
				;---
	LDA MUSTIM
	CMPA #0FF		;SPECIAL FLAG FOR SKIPPING MUSIC THIS TIME
	IFEQ			;SKIP IT
	LDA TIMER+2		;PREPARE FOR NEXT CYCLE
	STA MUSTIM
	ELSE
	LDA TIMER+2
	CMPA MUSTIM
	IFNE			;APROX 6.66666 MINS.
	STA MUSTIM		;FOR NEXT TIME
	JSR EEUTIM		;TIME TO UPDATE TIMEON
	LDA OPTS1		;HIGH NIBBLE OF 2ND OPTION BANK
	ANDA #04		;THE OPERATOR SICK AND TIRED OF THE MUSIC YET?
	IFEQ			;NO! THEN GIVE SOME MORE TO HEAR
	LDX #TMUSIC
	LDA P.RND1
	LDB #ZMUSIC-TMUSIC/2	;# OF ENTRIES
	MUL
	LSLA			;WORD POINTER
	JSR @A(X)
	ENDIF
	ENDIF
	ENDIF
	RTS
TMUSIC:
	.WORD	PMBEN,PMCNT,PMEND,PMRRP
	.WORD	PMTHB,PMTH5,PMREB,PM4TH
	.WORD	PMDAR
ZMUSIC:
				;===

PHEBNR:
PHECN1:
	JSR IVGEN1
	JSR VWSTAR
				;---
	JSR VWBNNR		;VIEW BANNER
	JSR VWSPMS		;WITH CLOSE COUPLED SPECIAL MESSAGES
				;---
	JSR VWCOIN
	JSR VWMES		;SCORE AND STUFF
	JSR VGDONE
				;---
	JSR SMVBNR		;MOVE THE STARS IN BACK OF THE BANNER
				;---
	JSR STRTCK		;LOOK FOR STARTUP OR STATS OR TEST OR ?
				;---
	RTS
	.PAGG
	.SBTTL	START GAME A
PHISG1:
	LDA #5
	STA PH.TIM
	LDA #0FF		;DON'T PLAY MUSIC RIGHT AFTER WE FINISH A GAME
	STA MUSTIM
	JSR ALLOFF
	JSR SPKRED
	INC PHASE
	RTS
PHESG1:
	LDA #PH$SDS		;SELECT DETH STAR NEXT
	STA PHASE
	LDD #0
	STD FRAME
	STA WV.LVL		;START AT LEVEL 0
	LDA OPTS1+1		;LOW NIBBLE OF OPTION SWITCH BANK 2
	ANDA #03		;GAS OPTION
	ADDA #06		;GIVES 6 TO 9 UNITS OF SHIELD STRENGTH
	STA S.GAS
	STA GS.OLD		;SET UP OLD VALUE ALSO
				;
	LDA OPTS1+1
	LSRA
	LSRA
	ANDA #3			;ISOLATE GAME DIFFICULTY OPTION
	STA GM.DIF		;CURRENT DEFAULT DIFFICULTY, STARTS AT 0(EASY)
				;
	LDA #0
	STA GM.BMP		;DETECT RINGERS THAT START TOO EASY
	STA GS.GLW
	STA GS.HIT
	STA S.SC87
	STA S.SC65
	STA S.SC43
	STA S.SC21
	STA SC.FWV		;ZERO FLAG FOR FIRST WAVE ONLY
	STA Q.GHIT		;SOUNDOUT ON FIRST GUNHIT
	STA Q.ATP		;NO TOPS CLEARED WHEN FIRST STARTING UP
	SEI			;***

	INC RHEOY+RH$LO			;PERTURB RKEOSTAT LIMITS
	INC RHEOP+RH$LO
	INC RHEOY+RH$SP
	INC RHEOP+RH$SP
	CLI			;***
	RTS
				;===

PHISG2:				;FINISH STARTING UP THE GAME
	JSR IMATH
	JSR IPARM
	JSR ISTAR
	LDA #0C0		;FACE BACKWARDS
	STA M$AX+M.S1
	STA M$BY+M.S1
	LDA #0
	STA $BCCNT		;NO MORE BONUS COINS THIS TIME AROUND
	INC PHASE
PHESG2:
	LDA #PH$BGN
	STA PHASE
	RTS
	.PAGG
	.SBTTL	BEGIN ACT
PHIBGN:
	JSR OLD1SHP		;USE OLD SHIPS UNIT VECTORS
				;
	LDX #8			;CONVERT 8 BITS
	LDA GM.WAV
	INCA			;VIEW WAVE STARTS AT 1
	JSR BINBCD
	LDA BCD+2
	STA GM.DWAV		;DECIMAL FOR VIEWING
				;
	LDA GM.WAV
	CMPA #31.
	IFHI
	LDA #31.		;LIMIT
	ENDIF
	STA SP.WAV		;LOCAL SPACE USE
	ADDA GM.DIF		;INCLUDE OVERALL DIFFICULTY
	CMPA #15.
	IFHI
	LDA #15.
	ENDIF
	STA WV.HRD		;	CURRENT WAVES DIFFICULTY
				;
	INC PHASE
				;
PHEBGN:
	LDA #PH$SP1
	STA PHASE
	LDA #0
	STA WV.LVL
	RTS
	.PAGG
	.SBTTL	SPACE WAVES
PHISP1:
	JSR IPGEN		;JUST GENERAL PARMS, NOT PLAYER OR STARS
	JSR IXPLD
	LDD #0
	STD PH.TIM
	STA Q.RTHV		;DARTH IN VIEW, FIRST TIME -- SOUNDOFF
				;
	LDA #9
	STA Q.SHK		;# OF SHOTS BEFORE 'I CANT SHAKE HIM'
				;
	LDA SC.FWV
	IFEQ			;?THE PLAYERS FIRST WAVE?
	LDD #2*20.-1			;THEN START A BIT AHEAD
	STD PH.TIM
	ENDIF
	INC PHASE
				;===
PHESP1:
	JSR VIEW
				;---
	LDA S.GAS
	LBMI PHIS0D		;B EXIT WHEN PLAYER DIES
				;---
	JSR MVGUN		;MOVE GUN SHOTS
				;===
	JSR DONGLW
	JSR DOXPLD
	JSR DO1GLW
	JSR DO1GAS
				;===
	JSR CPU			;COMPUTER DRONES
				;---
				;TWIRL THE PLAYER
	JSR VGTOSITE		;PULL IN SITE COORDS FROM IRQ RHEOSTATS
	JSR STWSP1		;TWIRL PLAYER
	LDA #M$S1BC		;DOWNLOAD UNIT VECTORS TO MATH-BOX ( RESIDU )
	JSR IS1UV
	JSR SMVSP1		;MOVE PLAYER
				;---
	LDD PH.TIM
	ADDD #1
	STD PH.TIM
	CMPD #2*20.
	IFEQ
				;
	LDA GM.WAV
	CMPA #4-1
	IFGE			;?WAVE 4 OR HIGHER?
	ANDA #1
	IFNE			;?ANDIF EVEN (ODD-1) WAVE?
	JSR PMDAR		;THEN DO DARTH THEME
	BRA 33$
	ENDIF
	ENDIF			;ELSE DO
	JSR PMTH5		;THEME MUSIC
33$:				;
	ELSE
	CMPD #2+7+1*20.		;SHORTLY AFTER THEME
	IFEQ
	JSR PMTHB		;THEME B FOLLOWS MAIN THEME
	ELSE
	CMPD #2+7+1+9+1*20.	;FOLLOWED BY DESCENT MUSIC
	IFEQ
	JSR PMDES
	ELSE
	CMPD #2+7+1+9+1+1*20.	;RIGHT AFTER DESCENT MUSIC
	IFHS
	LDA #PH$SP2		;GO AHEAD AND DESCEND
	STA PHASE
	ENDIF
	ENDIF
	ENDIF
	ENDIF
				;---
	LDA WV.LIV
	CMPA #03		;3 ALIENS ALIVE?
	IFLO			;NO, THEN THROW ANOTHER ONE AT THE PLAYER
	JSR ADASHP
	ENDIF
	RTS
				;===
PHISP2:
	INC Q.RTHV		;NO MORE SOUNDOFF IF DARTH GETS VISIBLE
	INC PHASE
PHESP2:
	JSR VIEW
				;---
	LDA S.GAS
	LBMI PHIS0D		;B EXIT WHEN PLAYER DIES
				;---
	JSR MVGUN		;MOVE GUN SHOTS
				;---
	JSR DONGLW
	JSR DOXPLD
	JSR DO1GLW
	JSR DO1GAS
				;---
	JSR CPURET		;COMPUTER DRONES RUN AWAY
				;---
				;TWIRL THE PLAYER
	JSR VGTOSITE		;PULL IN SITE COORDS FROM IRQ RHEOSTATS
	JSR STWSP2		;TWIRL PLAYER
	LDA #M$S1BC
	JSR IS1UV
	JSR SMVSP2		;MOVE PLAYER
				;---
	LDX #ALIEN
	BEGIN			;---
	LDA A$TYP(X)
	BNE 40$			;STILL SOME RUNNING AWAY
	LEAX A$IZE(X)		;TEST NEXT ALIEN
	CMPX #ALIENZ
	HSEND
				;
	LDA #PH$S0G		;GOTO DETH STAR GROUND IF NONE LEFT
	STA PHASE
				;---
40$:
	RTS
				;===
	.PAGG
	.SBTTL	TRANSITION FROM SPACE TO GROUND
PHIS0G:
	LDD #VGSCAL+500+080
	STD DT.SCL		;START WITH MATCHING SIZE DETH STARS
	LDD #0100
	STD DT.STP		;STEP SIZE FOR SCALING THE DETH STAR
				;---
	LDA SC.FWV
	IFEQ			;?FIRST TIME THRU?
	LDA SP.WAV
	CMPA #5-1
	IFEQ			;?AND SELECTED SPACE WAVE FIVE?
				;	THEN SPECIAL PROCESSING WITH PH$S1B
				;/LOOK AT THE SIZE OF THAT THING/
	BRA 25$			;SAY ONLY THE PREVIOUS
	ENDIF
	ENDIF
				;ELSE
	JSR SPKTHI		;THIS IS RED FIVE, I'M GOING IN
	JSR AUDRY
25$:				;---
	INC PHASE
	RTS
				;===

PHES0G:
	JSR VEWHPA
				;---
	JSR DOXPLD
	JSR DO1GLW
	JSR DO1GAS
				;===
	JSR S1TW		;TURN TOWARDS DETH STAR
	JSR S1MVHP
				;---
	LDD M$AX+M.S1
	CMPD #3F00
	IFGE			;?AIMING TOWARDS DETH STAR YET?
	LDA #PH$S1G		;READY TO DO HYPER INTO DETH STAR
	STA PHASE
	ENDIF
40$:				;---
	RTS
				;===

PHIS1G:
				;---
	LDA SC.FWV
	IFEQ			;?FIRST TIME THRU?
	LDA SP.WAV
	CMPA #5-1
	IFEQ			;?AND SELECTED SPACE WAVE FIVE?
				;	THEN SPECIAL PROCESSING WITH PH$S1B
	JSR SPKSIZ		;/LOOK AT THE SIZE OF THAT THING/
	ENDIF
	ENDIF
				;---
	JSR AUDTH		;THRUST TOWARDS DETH STAR
				;
	INC PHASE		;GO AHEAD AND EXECUTE GROWING DETH STAR

	RTS
				;===

PHES1G:
	JSR VEWHPB		;VIEW THE GROWING DETH STAR
				;---
	JSR DONGLW
	JSR DO1GLW
	JSR DO1GAS
				;===
	JSR S1TW
	JSR S1MVHP
				;---
	LDB DT.STP
	NEGB
	SEX
	ADDD DT.SCL
	ANDB #7F
	STD DT.SCL
	CMPD #VGSCAL+100+10
	IFLS			;?OBJECT BIG ENOUGH?
	LDA SP.WAV
	IFEQ			;?FIRST SPACE WAVE?
	LDA #PH$S0B		;THEN SKIP AHEAD TO TRENCH
	ELSE			;ELSE ALLOW GROUND
 	LDA #PH$GD		;DO GROUND FLYING
	ENDIF
	STA PHASE
	ENDIF
	LDD DT.STP		;CHANGE STEP SIZE
	ADDD #0060
	STD DT.STP
				;---
	LDA ST.BRT		;DIM OUT THE STARS
	SUBA #02
	IFLS
	LDA #0
	ENDIF
	STA ST.BRT
				;---
	RTS
				;===
	.PAGG
	.SBTTL GROUND TERRAIN FOLLOWING
PHIGD:
	LDA GM.WAV		;BUMP TO NEXT GROUND WAVE
	DECA			;ALWAYS SKIPPED ON FIRST GAME WAVE
	CMPA #31.
	IFHS
	LDA #31.
	ENDIF
	STA GD.WAV
	ADDA GM.DIF
	CMPA #15.
	IFHI
	LDA #15.
	ENDIF
	STA WV.HRD
				;
	JSR IPARM		;INIT SHIP AND ALIEN PARMS
	JSR ISTARG
	JSR IGRND
	JSR IXPLD
	LDD #100		;INITIAL PLAYER SPEED
	STD M$VX+M.S1
	ASRD
	STD M$TX+M.S1		;OFFSET POSITION INTO MIDDLE FOR COLLISION DETECT
	LDD #2000		;INITIAL HITE
	STD M$TZ+M.S1

	LDA #00
	STA GD.SEQ
	STA Q.ATP		;NOT YET CLEARED ALL TOWER TOPS
	STA Q.KTW		;NO KILL TOWERS
				;---
	LDA #0
	STA PH.TIM
				;---
	JSR PM4TH		;BATTLE MUSIC IN FOURTHS
				;---
	INC PHASE
	RTS
				;===

PHEGD:				;DO GROUND FLYING
	JSR VEWGD
				;---
	LDA S.GAS
	LBMI PHIG0D		;J EXIT WHEN DEAD
				;---
	JSR MVGUN
	JSR DO1GLW
	JSR DO1GAS
	JSR DOXPLD
				;---
				;TWIRL THE SHIP THRU GROUND FLYING
	JSR VGTOSITE		;PULL IN SITE COORDS FROM IRQ RHEOSTATS
	JSR S1TWGD
	LDA #M$S1BC
	JSR IS1UV
	JSR S1MVGD
				;---
	LDD M$VX+M.S1
	ADDD #1
	CMPD #400
	IFLS
	STD M$VX+M.S1
	ENDIF
				;---
	LDA FRAME+1
	ANDA #0F
	IFEQ
	LDA PH.TIM
	CMPA #14.
	IFEQ
	JSR PMREB		;FINISH GROUND WITH REBEL
	ENDIF
	INC PH.TIM		;ONE MORE PSUEDO-SECOND
	ENDIF
				;---
	LDA GD.SEQ
	CMPA #5			;ONLY GO SO FAR INTO GROUND SEQUENCES
	IFHS
	LDA #01			;CLEAR TOWERS FROM GROUND
	STA Q.KTW
	LDA M$TX+M.S1
	CMPA #80		;SEQUENCE RUNS 80 TO 80
	IFLO			;?ONE FULL PASS INTO BLANKED SECTION 5?
	LDA #PH$G0B		;BASE TRENCH FOLLOWS GROUND TOWERS
	STA PHASE
	ENDIF
	ENDIF
				;---
	RTS
				;---
	.PAGG
	.SBTTLE	BASE STAR TRENCH

PHIS0B:				;SPACE TO BASE TRANSITION
PHIG0B:
	LDA #0			;FIRST TIME THIS WAVE
	STA BS.RPT		;FIRST TIME THRU
	STA Q.FRC		;ALLOWED TO USE THE FORCE
				;
	LDA GM.WAV
	CMPA #31.
	IFHI
	LDA #31.
	ENDIF
	STA BS.WAV
	ADDA GM.DIF
	CMPA #15.
	IFHI
	LDA #15.
	ENDIF
	STA WV.HRD
				;
	JSR GNBASE		;GEN A NEW BASE TRENCH
				;
	JSR SPKUSE		;USE THE FORCE LUKE
				;
	LDD #0
	STD PH.TIM
				;
	INC PHASE
				;
	RTS
				;===

PHES0B:
	JSR IPARM
				;---
	JSR NWBASE
				;---
	LDA #PH$BS
	STA PHASE
				;---
	RTS
				;===

PHEG0B:
	JSR VEWG0B
				;---
	JSR DO1GLW
	JSR DO1GAS
	JSR DOXPLD
	JSR SMVG0B
				;---
	LDD PH.TIM
	ADDD #1
	STD PH.TIM
	SUBD #17.		;34. COUNTS FOR 360 TURNOVER, DO HALF HERE
	IFHS
	LDA #PH$G1B
	STA PHASE
	ENDIF
				;---
	RTS
				;===

PHIG1B:
	LDD #0
	STD M$TX+M.S1
	STD M$TY+M.S1		;GET US AT START OF TRENCH
	STD PH.TIM		;TIMER
				;---
	JSR SMVG1B		;ROLL AGAIN TO SKIP JERK
				;---
	JSR NWBASE
				;---
	INC PHASE
				;---
PHEG1B:
	JSR VEWG1B
				;---
	JSR DO1GLW
	JSR DO1GAS
	JSR DOXPLD
	JSR SMVG1B
				;---
	LDD PH.TIM
	ADDD #1
	STD PH.TIM
	SUBD #17.		;34. COUNTS FOR 360 TURNOVER, DO HALF HERE
	IFHS			;?TIME TO GOTO BASE?
				;---
	LDX M$TX+M.S1		;SAVE OUR LOCATION
	LDU M$TY+M.S1
	LDD M$TZ+M.S1
	PSHS X,U,D
				;
	JSR IPARM		;INIT ALL PARMS
				;
	PULS X,U,D		;RESTORE OUR LOCATION
	STX M$TX+M.S1
	STU M$TY+M.S1
	STD M$TZ+M.S1
				;---
	LDA #0
	STA Q.FRC		;ALLOWED TO USE THE FORCE (MAKING SURE)
				;---
	LDA #PH$BS
	STA PHASE
	ENDIF
				;---
	RTS
				;===	

PHIB0B:				;BASE TO BASE TRANSITION
	LDA #1			;REPEATING THIS WAVE
	STA BS.RPT
				;
	JSR IPARM
				;DO NOT GENERATE A NEW BASE
	JSR NWBASE		;JUST INIT THE CURRENT SELECTION
				;
	LDA #0FF
	STA Q.FRC		;NO FORCE ALLOWED ON RERUNS
				;
	LDA WV.HRD		;MAKE TRENCH HARDER ON REPEAT PASSES
	ADDA GM.BMP		;BUMP UP THE DIFFICULTY
	CMPA #15.
	IFHI
	LDA #15.
	ENDIF
	STA WV.HRD
PHEB0B:
	LDA #PH$BS
	STA PHASE
	RTS
				;===

PHIBS:
	LDA #00			;TIMER FOR BASE STAR A
	STA Q.BSH		;NOT YET BASHED OUR NOSES
	STA PH.TIM
	LDD #300		;INITIAL PLAYER SPEED
	STD M$VX+M.S1
				;---
	INC PHASE
				;---DROP THRU  -- DECREASE SCREEN FREEZE
PHEBS:
	JSR VEWBS		;VIEW BASE TRENCH
				;---
	LDA S.GAS
	LBMI PHIB0D		;J EXIT WHEN PLAYER DIES
				;---
	JSR MVGUN
	JSR MVPTGN		;PLAYERS PROTON TORP GUN
	JSR DOBASE		;FIRES BASES SHOTS
	JSR DO1QGLW		;QUICKER GLOW IN TRENCH SEQUENCES
	JSR DO1GAS
				;---
				;TWIRL THE SHIP THRU THE WORMHOLE
	JSR VGTOSITE		;PULL IN SITE COORDS FROM IRQ RHEOSTATS
	JSR S1TWBS
	LDA #M$S1BC
	JSR IS1UV
	JSR S1MVBS		;BASE TRENCH CONTROLS MOTION
				;---
	LDA FRAME+1
	ANDA #0F
	IFEQ			;?PSUEDO SECOND PASSED?
				;
	LDA PH.TIM
	CMPA #2
	IFEQ			;?FINISHED WITH VOICE OR CURSING R2?
	JSR PMRRP		;THEN DO REBEL REPEAT THEME
	ENDIF
				;
	LDA BS.WAV
	LSRA
	IFCC			;BEGIN WITH WAVE 0 SAYING . . .
	LDA PH.TIM
	CMPA #16.
	IFEQ
	JSR SPKTRU		;LUKE, TRUST ME
	ELSE
	CMPA #24.
	IFEQ
	JSR SPKYAU		;YAHOO, YOURE ALL CLEAR KID
	ENDIF
	ENDIF
	ELSE			;ELSE ALTERNATE WAVE
	LDA PH.TIM		;OCCURS A BIT SOONER
	CMPA #16.
	IFEQ
	JSR SPKLET		;LET GO LUKE
	ELSE
	CMPA #22.
	IFEQ
	JSR SPKSTR		;THE FORCE IS STRONG WITH THIS ONE
	ENDIF
	ENDIF
	ENDIF	
	INC PH.TIM
	ENDIF
				;---
	LDA BS.EFL
	IFNE			;?STARTING TO VIEW END OF TRENCH?
	LDD BS.ELC
	SUBD M$TX+M.S1
	SUBD #0800
	IFLS			;?ABOUT TO BASH OUR NOSE IN THE END WALL?
	LDA PT.LIV		;DID WE KILL IT??
	IFEQ			;NO, TOO BAD--NO EXPLOSION
				;---
	LDA #01
	STA Q.BSH		;FLAG FOR BASHED OUR NOSE
	JSR AUDCR		;CRASHED
	JSR BG1GLW		;BASHED OUR NOSE -- LIMITS REPEATS
	LDA S.GAS		;?WILL THIS KILL PLAYER?
	LBLE PHIB0D		;THEN EXIT
				;ELSE
	LDA #PH$B0B		;TRY TRENCH AGAIN UNTIL SUCCESSFUL
	STA PHASE
	JSR SPKR2N		;R2 SWEARS AT PLAYER FOR MISSING EXHAUST PORT
	ELSE			;YES, LET'S WATCH IT EXPLODE!
	LDA #PH$DX1
	STA PHASE
				;
	LDA GM.WAV
	CMPA #4-1
	IFGE			;?WAVE 4 OR HIGHER?
	ANDA #1
	IFNE			;?ANDIF AN EVEN(ODD-1) WAVE?
	JSR SPKGRE		;GREAT SHOT KID, THAT WAS 1 IN A MILLION
	BRA 80$
	ENDIF
	ENDIF			;ELSE DO NORMAL
80$:				;---
	ENDIF
	ENDIF
	ENDIF

	RTS
				;===
	.PAGG
	.SBTTL	GO TO NEXT SET OF WAVES
PHINXT:
	JSR IMATH
	JSR IPARM
	LDA #0C0		;TURN PLAYER AWAY FROM NEW DETH STAR
	STA M$AX+M.S1
	STA M$BY+M.S1
				;---
	LDA #4
	STA PH.TIM
	INC PHASE
	RTS
				;===
PHENXT:
	LDA FRAMEL
	ANDA #0F
	IFEQ			;ABOUT A SECOND
	DEC PH.TIM
				;---
	LDA PH.TIM
	CMPA #03
	IFEQ
	LDA PT.LIV
	IFNE			;?FIRED AT THE EXHAUST PORT?
	JSR SCRPORT		;SCORE THE EXHAUST PORT
	ENDIF
	ENDIF
				;---
	LDA PH.TIM
	CMPA #02
	IFEQ
	JSR SCRSHL		;ADD SHIELD ENERGY BONUS
	ENDIF
				;---
	LDA PH.TIM
	CMPA #01
	IFEQ			;ADD BONUS ENERGY TO SHIELDS IF DESERVED
	LDA PT.LIV		;DID PLAYER KILL DETH STAR?
	IFNE			;YES, SO ADD BONUS ENERGY
	JSR ADCGAS		;ADD CANNED GAS
	ENDIF
	ENDIF
				;---
	LDA PH.TIM
	CMPA #00
	IFEQ			;?ALMOST AT END OF NEXT PHASE?
	JSR SCRWAV		;AND ALSO ADD WAV BONUS
	ENDIF
				;---
	ENDIF
				;---
	JSR VEWNXT		;VIEW NXT PHASE STUFF
				;---
	JSR DO1GAS		;WE MIGHT INC GAS
	JSR SMVNXT		;MOVE PLAYER (STARS)
				;---
	LDA PH.TIM
	CMPA #-2
	IFEQ			;WRAP TO NEXT DETH STAR
	LDA GM.WAV
	INCA
	CMPA #98.		;MAX OUT YET?
	IFHI			;YES, LIMIT IT
	LDA #98.
	ENDIF
	STA GM.WAV
				;
	LDA GM.WAV
	CMPA #6-1		;IGNORE BUMP WHEN ABOVE SELECTALEVEL
	IFLO			;?STARTING WAVE 0 TO 5?
	LDA GM.BMP		;USED TO KILL OFF RINGERS WHO START TO EASY
	INCA
	CMPA #4
	IFHI
	LDA #4			;MAX TO BUMP
	ENDIF
	STA GM.BMP
	ENDIF
				;
	LDA GM.DIF
	ADDA GM.BMP		;GAME DEFAULT DIFFICULTY GOES UP EACH WAVE
	CMPA #15.
	IFHI
	LDA #15.		;0F MAX DIFFICULTY LEVELS (WORKS TO WAVE 10.)
	ENDIF
	STA GM.DIF
				;
	LDA #0FF		;NO MORE FIRST WAVES
	STA SC.FWV
	LDA #PH$BGN		;GO TO BEGINNING OF NEW WAVE
	STA PHASE
	ENDIF
				;---
	RTS
				;===

	.PAGG
	.SBTTL	SPACE TO ENDGAME TRANSITION

PHIS0D:
	JSR SPKSKP		;SKIP ANY OTHER VOICES
				;
	LDA #PH$S0D+1
	STA PHASE		;EXECUTE THIS PHASE
				;---
	LDD #0
	STD PH.TIM		;NEW PHASE TIMER JUST STARTED
				;---
	RTS
				;===

PHES0D:
	JSR VEWS0D
				;---
	JSR MVGUN
	JSR KPGLOW
	JSR DONGLW
	JSR DOXPLD
				;---
	LDD #-04FF		;FLIP DIRECTION OF ROLL CUZ WE ARE DIEING
	STD M.SIN
	LDD #03FCE
	STD M.COS
	JSR S1RL
				;---
	LDD PH.TIM
	ADDD #1
	STD PH.TIM
	CMPD #2*20.		;2 SECONDS
	IFHS
	LDA #PH$EGM
	STA PHASE
	ENDIF
				;---
	RTS
				;===
	.PAGG
	.SBTTL	GROUND TO ENDGAME TRANSITION

PHIG0D:
	JSR SPKSKP		;SKIP ANY WAITING VOICES
				;
	LDA #PH$G0D+1
	STA PHASE		;EXECUTE THIS PHASE
				;---
	LDD #0
	STD PH.TIM		;NEW PHASE TIMER JUST STARTED
				;---
	RTS
				;===

PHEG0D:
	JSR VEWG0D
				;---
	JSR MVGUN
	JSR KPGLOW
				;---
	LDD PH.TIM
	ADDD #1
	STD PH.TIM
	CMPD #2*20.		;2 SECONDS
	IFHS
	LDA #PH$EGM
	STA PHASE
	ENDIF
				;---
	RTS
				;===
	.PAGG
	.SBTTL	BASE TRENCH TO ENDGAME TRANSITION

PHIB0D:
	JSR SPKSKP		;SKIP ANY WAITING VOICES
				;
	LDA #PH$B0D+1
	STA PHASE		;EXECUTE THIS PHASE
				;---
	LDD #0
	STD PH.TIM		;NEW PHASE TIMER JUST STARTED
				;---
	RTS
				;===

PHEB0D:
	JSR VEWB0D
				;---
	JSR MVGUN
	JSR KPGLOW
				;---
	LDD PH.TIM
	ADDD #1
	STD PH.TIM
	CMPD #2*20.		;2 SECONDS
	IFHS
	LDA #PH$EGM
	STA PHASE
	ENDIF
				;---
	RTS
				;===
	.PAGG
	.SBTTL	END OF GAME
				;---
PHIEGM:				;INIT END OF GAME
				;PREVIOUS PHASE HAS ALREADY SKIPPED OLD SPEECH
	JSR SPKREM		;SAY "REMEMBER..."
	JSR SPKFOA		;SAY FORCE WILL BE WITH YOU ALWAYS
				;
	INC PHASE		;TRANSFER TO END OF GAME
	RTS
				;---
PHEEGM:				;END OF GAME
				;---
	JSR IMATH
	JSR IPARM
	JSR ISTAR
	LDU #M.U1
	JSR UNITV
				;---
	JSR EEACCT		;UPDATE GAME TIME, GAMES PLAYED AND HISTORY
	JSR UPDATE		;CHECK FOR NEW HI SCORE
	LDA UPDFLG
	IFPL			;?NEW HI SCORE?
	LDA #PH$ENT		;THEN ENTER INITIALS
	ELSE			;ELSE NO LUCK
	JSR PMBEN		;BEN'S THEME WHEN LOSE GAME WITH NO HIGH SCORE
	LDA #PH$BNR
	ENDIF
	STA PHASE
90$:				;---
	RTS
				;===
	.PAGG
	.SBTTL	DEATH STAR EXPLOSION
PHIDX1:
	LDD #VGSCAL+100+04		;START DEATH STAR AT VERY LARGE
	STD DT.SCL
	LDD #0AFF		;STEP SIZE
	STD DT.STP
	JSR ISTAR		;SETUP STARS
	LDU #M.U1
	JSR UNITV
	INC PHASE
	JSR PMEND		;START END OF DETH STAR MUSIC
	RTS
PHEDX1:
	JSR VEWDX1
				;---
	JSR DO1GAS
	JSR DO1GLW
;	JSR SMVDX1		;MOVE BACKWARDS
				;---
	LDB DT.STP
	SEX
	ADDD DT.SCL
	ADDD #80		;D7 IS WRAP
	ANDB #7F
	STD DT.SCL
	CMPD #VGSCAL+400+80
	IFHS
	LDA #PH$DX2
	STA PHASE
	ENDIF

	LDD DT.STP		;CHANGE STEP SIZE
	SUBD #0010
	IFMI
	LDD #0000
	ENDIF
	STD DT.STP
	RTS
				;===

PHIDX2:
	JSR BGXPLN		;START EXPLOSION
	INC PHASE
	RTS
PHEDX2:
	JSR VEWDX2
				;---
;	JSR SMVDX2

	LDA XP.PHS
	CMPA #01		;
	IFHS			;GOTO NEXT PHASE
	LDA #PH$DX3
	STA PHASE
	ENDIF
	RTS
				;===

PHIDX3:
	INC PHASE
	RTS
PHEDX3:
	JSR VEWDX3
				;---
;	JSR SMVDX3
				;---
	LDA XP.PHS
	IFEQ			;DEATH STAR FINISHED EXPLODING
	LDA #PH$NXT
	STA PHASE
	ENDIF

	RTS
	.PAGG
	.SBTTL	MOVE STARS IN SOME DIRECTION
SMVBNR:				;PLAYER 1 MOVE DURING BANNER
	LDD ST.UX		;RELATIVE MOVEMENT FOR STARS
	ADDD #0080		;45 DEGREES UP X
	STD ST.UX
	LDD ST.UZ
	ADDD #0080		;45 DEGREES UP Z
	STD ST.UZ
	RTS
				;===
SMVINS:				;STAR MOVEMENT DURING FLIGHT INSTRUCTION PHASE
	LDD ST.UY
	ADDD #-0080		;SIDEWAYS
	STD ST.UY
	RTS
				;===
SMVSCR:				;STAR MOVEMENT DURING SCORING SCREEN PHASE
	LDD ST.UZ
	ADDD #0080		;UP
	STD ST.UZ
	RTS
				;===
SMVHIS:			;STAR MOVEMENT DURING HIGH SCORE DISPLAY
	LDD ST.UX
	ADDD #0080		;FORWARD
	STD ST.UX
	RTS
				;===
	.REPT 0
SMVDX1:			;STAR MOVEMENT DURING DEATH STAR PRELIM
	LDD ST.UX
	SUBD #0080		;BACKWARDS AT NORMAL RATE
	STD ST.UX
	RTS
				;===
SMVDX2:			;STAR MOVEMENT DURING DEATH STAR EXPLOSION
	LDD ST.UX
	SUBD #0080		;BACKWARDS AT NORMAL RATE
	STD ST.UX
	RTS
				;===
SMVDX3:			;STAR MOVEMENT DURING DEATH STAR MAIN EXPLOSION
	LDD ST.UX
	SUBD #0200		;HAWL ASS OUT OF HERE BACKWARDS
	STD ST.UX
	RTS
				;===
	.ENDR
	.PAGG
	.SBTTL	MOVE THE PLAYER
STWSP1:
S1TW:
				;ROLL IF HIT
	LDA S.ROL
	IFNE			;?ANY ROLLING TO DO?
	IFGT			;?POSITIVE?
	DEC S.ROL
	LDD #04FF
	ELSE			;ELSE NEGATIVE
	INC S.ROL
	LDD #-04FF
	ENDIF
	STD M.SIN
	LDD #03FCE		;4.48 DEGREES
	STD M.COS
	JSR S1RL
	ENDIF
				;
	JSR AIM			;AIM AT ALIEN OR DETH STAR
	JSR S1RHPT
	JSR S1RHYW
	RTS
				;---
STWSP2:				;FOR THE LAST OF A GROUP OF THREE ALIENS
				;ROLL IF HIT
	LDA S.ROL
	IFNE			;?ANY ROLLING TO DO?
	IFGT			;?POSITIVE?
	DEC S.ROL
	LDD #04FF
	ELSE			;ELSE NEGATIVE
	INC S.ROL
	LDD #-04FF
	ENDIF
	STD M.SIN
	LDD #03FCE		;4.48 DEGREES
	STD M.COS
	JSR S1RL
	ENDIF

	JSR AIMDTH
	JSR S1RHPT
	JSR S1RHYW
	RTS			;---

S1TWGD:				;TWIRL THE GROUND FLYER
	LDA S.ROL
	IFNE			;?TIME TO ROLL PLAYER?
	IFGT
	DECA			;GO TOWARDS ZERO
	ELSE
	INCA			;GO TOWARDS ZERO
	ENDIF
	STA S.ROL
	ENDIF
				;---
	LDA S.ROL
	IFMI
	NEGA			;ABS FOR MULTIPLIER
	ENDIF
	LDB #32.		;15 PER DEGREE PER COUNT
	MUL
	TST S.ROL
	IFMI
	NEGD			;RESTORE SIGN
	ENDIF
	STD GD.ROL		;AMOUNT OF OFFSET TO ROLL
				;---
	LDA SI.RSX		;NOW ROLL CUZ OF PLAYER AIM
	IFMI
	COMA
	ENDIF
	LDB #2			;MAX COUNT OF 5*128=45 DEGREES(78 PER 5 DEGREES)
				;USE 4 MAX SO DOUBLE SHIFT GET 8 BITS
	MUL
	TST SI.RSX
	IFMI
	NEGD			;RESTORE SIGN
	ENDIF	
	ADDD GD.ROL
	TST S.ROL
	IFEQ			;?NO FANCY COLLISION ROLL?THEN GO SLOW
	SUBD GD.ACT		;COMPARE WITH ACTUAL ROLL AMOUNT
	IFGT			;?ROLL PLUS?
	CMPD #10		;LIMIT PLUS ROLL
	IFGT
	LDD #10		;127.(BYTE MAX)-77.(RESIDU MOST)=50.(MAX INCREASE ALLOWED)
	ENDIF
	ELSE
	CMPD #-10		;LIMIT MINUS ROLL
	IFLT
	LDD #-10
	ENDIF
	ENDIF
	ELSE			;ELSE IS FANCY ROLL
UNTWGD:				;D;= NEG(GD.ACT) FOR FAST UNROLL
	SUBD GD.ACT		;COMPARE WITH ACTUAL ROLL AMOUNT
	IFGT			;?ROLL PLUS?
	CMPD #50.		;LIMIT PLUS ROLL
	IFGT
	LDD #50.		;127.(BYTE MAX)-77.(RESIDU MOST)=50.(MAX INCREASE ALLOWED)
	ENDIF
	ELSE
	CMPD #-50.		;LIMIT MINUS ROLL
	IFLT
	LDD #-50.
	ENDIF
	ENDIF
	ENDIF
	TFR B,A			;SAVE A COPY
	ADDA RH$RSD+RHEOR	;TICS TO ROLL
	STA RH$RSD+RHEOR
	SEX			;GET BACK TO 16 BITS
	ADDD GD.ACT		;AND KEEP TRACK OF ACTUAL ROLL
	STD GD.ACT
				;---
	LDX #RHEOR
	JSR RHRSDU
	IFNE			;?HAVE SOME ROLLING TO DO?
	JSR S1RL
	ENDIF
	RTS	
				;===

S1TWBS:				;TWIRL IN BASE TRENCH
				;---
	RTS
				;===

AIM:				;AIM AT ALIEN OR DEATH STAR
	LDX AM.PTR
	IFEQ			;CYCLE THRU STARTING AT CURRENT POSITION
	LDX #ALIEN
	ENDIF
				;---
	BEGIN			;LOOP THRU ALL ALIENS
	LDA A$TYP(X)
	CMPA #1
	IFEQ			;?FOUND OUR FIRST LIVE ALIEN?
	LDA A$GLW(X)
	IFEQ			;?AND NOT GLOWING FROM A HIT?
	STX S2.PRM		;SAVE ALIEN POINTER
	JMP AIMA
	ENDIF
	ENDIF
	LDA Q.SHK
	IFGT			;?STILL WAITING FOR GOOD OPPONENT?
	LDA #9
	STA Q.SHK		;# OF SHOTS BEFORE 'I CANT SHAKE HIM'
	ENDIF
	LEAX A$IZE(X)		;GET NEW ALIEN TO AIM AT
	CMPX #ALIENZ
	HSEND			;LOOP TILL DONE
				;---
AIMDTH:				;---WHEN NO ALIENS TO LOOK AT, USE DETH STAR
	LDD #0
	STD AM.PTR		;NO CURRENT POINTER TO ALIEN BEING TRACKED
	LDA M$AX+M.S1
	IFPL			;?DETH STAR IN FRONT?
	LDB M$AZ+M.S1		;THEN SLEW NORMALLY(USE HITE OF DETHSTAR)
	ELSE			;ELSE DETH STAR IN BACK
	LDB #7F			;STRAIGHT IN BACK GIVES LARGE VALUE
	SUBB M$AZ+M.S1
	ENDIF
	STB RH$RAT+RHEOP
				;---
	LDA M$AX+M.S1
	IFPL			;?DETH STAR IN FRONT?
	LDB M$AY+M.S1		;THEN SLEW NORMALLY(USE WIDTH OF DETHSTAR)
	ELSE			;ELSE DETH STAR IN BACK
	LDB #7F			;STRAIGHT IN BACK GIVES LARGE VALUE
	SUBB M$AY+M.S1
	ENDIF
	COMB
	STB RH$RAT+RHEOY
	RTS
				;===
AIMA:				;AIM AT ALIEN
	LDA #M$S1BC
	JSR IS1UV		;DOWNLOAD LATEST UNIT VECTOR
	JSR RESIDU		;AND HANDLE RESIDU
	LDX S2.PRM		;GET THE ALIEN TO AIM AT
	STX AM.PTR		;SAVE OUR CURRENT ALIEN
	CLRA
	LDB A$BIC(X)
	ADDB #3
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT		;GET ALIENS LATEST LOC VIA PLAYER
	LDA M.XP
	IFGT			;?ALIEN IN FRONT?
	LDD M.YP		;THEN SCALE USING X
	BEGIN
	LSL M.XP+1
	ROL M.XP
	BVS 26$			;B WHEN X OVERFLOWS
	LSLD			;NOW DO Y
	IFVS			;?Y AT MAX SCALE?
	RORD			;THEN RESTORE SIGN
	BRA 26$			;J AND SKIP OUT
	ENDIF
	LSL M.ZP+1
	ROL M.ZP
	VSEND
	ROR M.ZP		;RESTORE CORRECT SIGN
	ROR M.ZP+1
	ELSE			;ELSE ALIEN IS BEHIND -- USE LARGEST SCALE
	LDD M.YP		;PREPARE DREG FOR SPEED
	ORB #1			;FORCE END TO LOOP
	BEGIN
	LSLD			;NOW DO Y
	IFVS			;?Y AT MAX SCALE?
	RORD			;THEN RESTORE SIGN
	BRA 26$			;J AND SKIP OUT
	ENDIF
	LSL M.ZP+1
	ROL M.ZP
	VSEND
	ROR M.ZP		;RESTORE CORRECT SIGN
	ROR M.ZP+1
	ENDIF
26$:
	COMA			;DREG := SHIFTED Y
	STA RH$RAT+RHEOY	;LEFT/RIGHT YAW
	LDB M.ZP
	STB RH$RAT+RHEOP	;UP/DOWN PITCH
				;---
	RTS
				;===	
SMVSP1:				;MOVE PLAYER AS PER SPACE WAVE TYPE 1
SMVSP2:				;MOVE PLAYER AS PER SPACE WAVE TYPE 2
SMVNXT:				;MOVE PALYER ( HYPER TO NEXT DETH STAR )
S1MV:				;PLAYER 1 MOVE
	LDD FRAME
	JSR LSLD7
	STD ST.UX		;STARS RELATIVE MOVEMENT
	RTS
				;===
S1MVHP:				;MOVE DURING HYPER
	LDD FRAME
	JSR LSLD8
	STD ST.UX
	RTS
				;===
S1MVGD:				;GROUND FLYING PLAYER MOVEMENT
	LDD M$VX+M.S1		;PLAYERS FORWARD MOVEMENT
	ADDD M$TX+M.S1
	IFVS			;?WRAPPED AROUND?
	INC GD.SEQ		;THEN START UP NEXT SEQUENCE
	IFVS
	DEC GD.SEQ		;PREVENT ITS OVERFLOW
	ENDIF
	ENDIF
	STD M$TX+M.S1
	STD M$TX+M.U1
				;---
	LDD M$VX+M.S1		;FASTEST IS AT 45 DEGREES
	JSR LSLD4
	LDB SI.RSX		;RESPOND IMMEDIATELY TO CONTROL POSITION--SLALOM
	IFMI
	COMB			;HANDLE 80 CORRECTLY,ABSB
	ENDIF
	LSLB			;FULL SCALE VALUE
	MUL
	TST SI.RSX		;REMEMBER TO FLIP DIRECTIONS
	IFLT
	NEGD
	ENDIF
	JSR ASRD4
	STD M$VY+M.S1		;ALLOW OTHERS TO KNOW OUR SPEED
	ADDD M$TY+M.S1
	STD M$TY+M.S1
	STD M$TY+M.U1
				;===
	LDD M$VX+M.S1
	JSR LSLD4
	LDB SI.RSY
	IFMI
	COMB			;HANDLE 80 CORRECTLY,ABSB
	ENDIF
	NOP			;SLOWER RANGE
	MUL
	TST SI.RSY		;REMEMBER TO FLIP DIRECTIONS
	IFMI
	NEGD
	ENDIF
	JSR ASRD4
	STD M$VZ+M.S1
	ADDD M$TZ+M.S1
	CMPD #1C00		;USE BELOW IN GD$MDT
	IFGT
	LDD #1C00
	ELSE
	CMPD #200		;USE BELOW IN GD$MDT
	IFLT
	LDD #200
	ENDIF
	ENDIF
	STD M$TZ+M.S1
	STD M$TZ+M.U1
				;---
	RTS
				;---

GD$MNT	==200
GD$MXT	==1C00
GD$MDT	==1C00-200/2+200	;MIDDLE OF ALLOWED TOWER TRAVERSE(VERTICAL)
				;===

	.SBTTL	GROUND TO BASE TRENCH TRANSITION

SMVG0B:
	LDD M$TZ+M.S1
	CMPD #380
	IFGT			;?PLAYER TOO HI?
	SUBD #180
	STD M$TZ+M.S1		;DROP HIM DOWN
	ENDIF
				;
	BRA SMVG9B		;REST OF G*B TRANSITION
				;---

SMVG1B:
	LDD M$TZ+M.S1
	CMPD #-0E00+100		;JUST ABOVE BOTTOM OF TRENCH
	IFGT
	SUBD #100
	STD M$TZ+M.S1		;DROP PLAYER INTO TRENCH
	ENDIF
				;---

SMVG9B:				;REST OF G*B TRANSITION
	LDD M$VX+M.S1
	ADDD M$TX+M.S1		;MOVE PLAYER FORWARD
	STD M$TX+M.S1
				;
	LDD #300
	SUBD M$VX+M.S1
	JSR ASRD3
	ADDD M$VX+M.S1
	STD M$VX+M.S1
				;
	LDA GM.WAV
	LSRA			;VARY WHICH WAY WE ROTATE
	IFCS
	LDD #3000.		;10.55 DEGREES *34. GIVES A 360
	ELSE
	LDD #-3000.
	ENDIF
	STD M.SIN
	LDD #16107.		;10.55 DEGREES, *34. TURNS DOES A 360
	STD M.COS
	JSR S1RL		;LETS ROLLEM
				;
	LDD #0
	SUBD GD.ACT
	JSR UNTWGD		;REMEMBER TO UNTWIST ANY GROUND MOVEMENT
				;
	RTS
				;===

S1MVBS:				;WORMHOLE PLAYER MOVEMENT
	LDD M$VX+M.S1		;PLAYERS FORWARD MOVEMENT
	ADDD M$TX+M.S1
	STD M$TX+M.S1
	STD M$TX+M.U1
				;---
	LDD M$VX+M.S1		;FASTEST IS AT 45 DEGREES
	JSR LSLD4
	LDB SI.RSX		;RESPOND IMMEDIATELY TO CONTROL POSITION--SLALOM
	IFMI
	COMB			;HANDLE 80 CORRECTLY,ABSB
	ENDIF
	MUL
	TST SI.RSX		;REMEMBER TO FLIP DIRECTIONS
	IFLT
	NEGD
	ENDIF
	JSR ASRD4
	STD M$VY+M.S1		;ALLOW OTHERS TO KNOW OUR SPEED
	ADDD M$TY+M.S1
	CMPD #1FF
	BLE 35$
	LDD #1FF
35$:				;---
	CMPD #-1FF
	BGE 38$
	LDD #-1FF
38$:				;---
	STD M$TY+M.S1
	STD M$TY+M.U1
				;===
	LDD M$VX+M.S1
	LSLD
	LSLD
	LSLD
	LSLD			;SCALE UP *16.
	LDB SI.RSY
	IFMI
	COMB			;HANDLE 80 CORRECTLY,ABSB
	ENDIF
	LSLB			;*2 FOR MAX SPEED SLALOM(45 DEGREE)
	MUL
	TST SI.RSY		;REMEMBER TO FLIP DIRECTIONS
	IFMI
	NEGD
	ENDIF
	ASRD
	ASRD
	ASRD
	ASRD			;SCALE BACK DOWN/16.
	STD M$VZ+M.S1
	ADDD M$TZ+M.S1
	CMPD #-101
	BLE 45$
	LDD #-101
45$:				;---
	CMPD #-0DFF
	BGE 48$
	LDD #-0DFF
48$:				;---
	STD M$TZ+M.S1
	STD M$TZ+M.U1
				;===
	RTS
				;===
	.PAGG
S1RHPT:				;---SHIP 1 RHEOSTAT PITCH
	LDX #RHEOP
	JSR RHTRIG		;CONVERT TO TRIG VALUES
	JSR RHRSDU
	BEQ 30$			;?ROTATE?
	JSR S1PT		;PITCH APPROPRIATELY
30$:
	RTS
S1RHYW:				;---SHIP 1 RHEOSTAT YAW
	LDX #RHEOY
	JSR RHTRIG		;PROCESS INTO TRIG VALUES
	JSR RHRSDU		;PROCESS MAJOR RHEOSTAT RESIDU
	BEQ 30$			;?ROTATE?
	JSR S1YW		;YAW (N) APPROPRIATELY
30$:
	RTS
				;===

				;********* SPECIAL INTERFACE WITH IRQ RHEOSTATS
VGTOSITE:			;PULLS IRQ RHEO VALS INTO SITE VALS FOR NORMAL USE
	SEI			;***
	LDD VG.RSY	;PITCH GOES TO REAL UP/DOWN Y
	STD SI.RSY
	LDD VG.RSX	;YAW GOES TO REAL LEFT/RIGHT X
	STD SI.RSX
	LDD VG.CY
	STD SI.CY
	LDD VG.CX
	STD SI.CX
	CLI			;***PERRY NOYD GETS IRQ'D
	RTS
				;===

RHTRIG:				;X-->RAM BLOCK
				;OUTPUT
				;SETUP M.SIN, M.COS
	LDA RH$RAT(X)
	BPL 20$
	COMA			;WIDER BALANCED ZERO, ALLOW -80
20$:				;---
	LDB #80			;FROM +-128. TO ?
	MUL
	NOP
	NOP
	NOP
40$:				;---
	LDB RH$RAT(X)
	IFPL
	ADDA RH$RSD(X)
	IFVS
	LDA #127.
	ENDIF
	ELSE			;GO IN NEGATIVE DIRECTION
	NEGA
	ADDA RH$RSD(X)
	IFVS
	LDA #-127.
	ENDIF
	ENDIF
	STA RH$RSD(X)		;SIGNED VALUE
	RTS

RHRSDU:				;---
	LDA RH$RSD(X)
	BPL 48$
	NEGA			;ABSOLUTE VALUE
48$:				;---
	CMPA #78.		;?PASSED THE LARGE MAGIC ANGLE?
	BLO 60$
	LDD #3FC2		;HS. 78., ROTATE 4.99 LARGE MAGIC ANGLE DEGREES
	STD M.COS
	LDA RH$RSD(X)
	BPL 54$
	ADDA #78.		;NEGATIVE ROTATE
	STA RH$RSD(X)
	LDD #-590
	STD M.SIN
	RTS
54$:				;---
	SUBA #78.		;POSITIVE ROTATE
	STA RH$RSD(X)		;CORRECT THE RESIDUE
	LDD #+590
	STD M.SIN
	RTS
60$:				;---CHECK FOR SMALLER MAGIC ANGLE
	CMPA #14.		;.895 MARK
	BLO 70$			;?BEYOND .895 MAGIC ANGLE?
	LDD #3FFE
	STD M.COS
	LDA RH$RSD(X)		;THEN STEP TOWARDS IT
	BPL 64$			;?NEGATIVE ROTATE?
	ADDA #14.
	STA RH$RSD(X)
	LDD #-100
	STD M.SIN
	RTS
64$:				;---POSITIVE,ROTATE
	SUBA #14.		;CORRECT THE RESIDUE
	STA RH$RSD(X)
	LDD #100
	STD M.SIN
	RTS
70$:				;---
	CLRB			;NO ROTATE
	RTS
RESIDU::			;HANDLE RESIDUE ROTATIONS UPON DOWNLOADED UNIT VECTORS
	LDA RH$RSD+RHEOP	;PITCH TICS LEFT
	BEQ 40$			;RESIDUE LEFT?
	JSR RESCNV		;CONVERT RESIDUE TO SIN/COS
	LDA RH$RSD+RHEOP
	BPL 35$			;?TURNING BACKWARDS?
	LDD #0			;THEN INVERT SINE
	SUBD M.SIN
	STD M.SIN
35$:				;---
	CLRA
	LDB #M$U1BC		;PITCH DOWNLOADED UNIT VECTORS
	STD M.BIC
	LDA #M$PTCH
	JSR MGOWT
40$:				;HANDLE YAW RESIDUE
	LDA RH$RSD+RHEOY
	BEQ 60$
	JSR RESCNV		;CONVERT RESIDUE
	LDA RH$RSD+RHEOY
	BPL 45$			;?TURNING BACKWARDS?
	LDD #0			;THEN INVERT SINE
	SUBD M.SIN
	STD M.SIN
45$:				;---
	CLRA
	LDB #M$U1BC		;YAW DOWNLOADED UNIT VECTORS
	STD M.BIC
	LDA #M$YAW
	JSR MGOWT
60$:
	LDA RH$RSD+RHEOR	;ROLL TICS LEFT
	BEQ 70$			;RESIDUE LEFT?
	JSR RESCNV		;CONVERT RESIDUE TO SIN/COS
	LDA RH$RSD+RHEOR
	BPL 65$			;?TURNING BACKWARDS?
	LDD #0			;THEN INVERT SINE
	SUBD M.SIN
	STD M.SIN
65$:				;---
	CLRA
	LDB #M$U1BC		;ROLL DOWNLOADED UNIT VECTORS
	STD M.BIC
	LDA #M$ROLL
	JSR MGOWT
70$:				;---
	RTS
RESCNV:				;CONVERT A=RESIDUE TO SIN,COS
	BPL 22$
	NEGA			;ABSOLUTE VALUE
22$:
	LDB #3
	MUL
	LDX #TRHTIC		;TABLE OF TIC SIN AND COS
	ABX			;X-->ENTRY
	LDD 0(X)		;SIN AS WORD ENTRY
	STD M.SIN		;
	LDB 2(X)		;ONE BYTE COS OFFSET FROM 1
	SEX
	ADDD #4000		;GET WORD COSISNE
	STD M.COS
	RTS
	.MACRO TIC A1,A2
	.WORD A1'.		;SIN
	.BYTE A2'.-4000		;COS, ENCODED AS NEGATIVE OFFSET
	.ENDM
	.=.-3
	TRHTIC:
	.=.+3


;    SINE COSINE FOR MAGIC TICS, 4000(16384.) IS UNITY
                                ;#    DEGREES SINE    COSINE
        TIC  18      16384      ;# 1   .064    18      16384 
        TIC  37      16384      ;# 2   .128    37      16384 
        TIC  55      16384      ;# 3   .192    55      16384 
        TIC  73      16384      ;# 4   .256    73      16384 
        TIC  91      16384      ;# 5   .32     91      16384 
        TIC  110     16384      ;# 6   .384    110     16384 
        TIC  128     16384      ;# 7   .447    128     16384 
        TIC  146     16383      ;# 8   .511    146     16383 
        TIC  165     16383      ;# 9   .575    165     16383 
        TIC  183     16383      ;# 10  .639    183     16383 
        TIC  201     16383      ;# 11  .703    201     16383 
        TIC  219     16383      ;# 12  .767    219     16383 
        TIC  238     16382      ;# 13  .831    238     16382 
        TIC  256     16382      ;# 14  .895    256     16382 
        TIC  274     16382      ;# 15  .959    274     16382 
        TIC  292     16381      ;# 16  1.023   292     16381 
        TIC  311     16381      ;# 17  1.087   311     16381 
        TIC  329     16381      ;# 18  1.151   329     16381 
        TIC  347     16380      ;# 19  1.215   347     16380 
        TIC  366     16380      ;# 20  1.278   366     16380 
        TIC  384     16380      ;# 21  1.342   384     16380 
        TIC  402     16379      ;# 22  1.406   402     16379 
        TIC  420     16379      ;# 23  1.47    420     16379 
        TIC  439     16378      ;# 24  1.534   439     16378 
        TIC  457     16378      ;# 25  1.598   457     16378 
        TIC  475     16377      ;# 26  1.662   475     16377 
        TIC  493     16377      ;# 27  1.726   493     16377 
        TIC  512     16376      ;# 28  1.79    512     16376 
        TIC  530     16375      ;# 29  1.854   530     16375 
        TIC  548     16375      ;# 30  1.918   548     16375 
        TIC  567     16374      ;# 31  1.982   567     16374 
        TIC  585     16374      ;# 32  2.046   585     16374 
        TIC  603     16373      ;# 33  2.109   603     16373 
        TIC  621     16372      ;# 34  2.173   621     16372 
        TIC  640     16372      ;# 35  2.237   640     16372 
        TIC  658     16371      ;# 36  2.301   658     16371 
        TIC  676     16370      ;# 37  2.365   676     16370 
        TIC  694     16369      ;# 38  2.429   694     16369 
        TIC  713     16368      ;# 39  2.493   713     16368 
        TIC  731     16368      ;# 40  2.557   731     16368 
        TIC  749     16367      ;# 41  2.621   749     16367 
        TIC  767     16366      ;# 42  2.685   767     16366 
        TIC  786     16365      ;# 43  2.749   786     16365 
        TIC  804     16364      ;# 44  2.813   804     16364 
        TIC  822     16363      ;# 45  2.877   822     16363 
        TIC  840     16362      ;# 46  2.94    840     16362 
        TIC  859     16361      ;# 47  3.004   859     16361 
        TIC  877     16361      ;# 48  3.068   877     16361 
        TIC  895     16360      ;# 49  3.132   895     16360 
        TIC  913     16359      ;# 50  3.196   913     16359 
        TIC  932     16357      ;# 51  3.26    932     16357 
        TIC  950     16356      ;# 52  3.324   950     16356 
        TIC  968     16355      ;# 53  3.388   968     16355 
        TIC  986     16354      ;# 54  3.452   986     16354 
        TIC  1005    16353      ;# 55  3.516   1005    16353 
        TIC  1023    16352      ;# 56  3.58    1023    16352 
        TIC  1041    16351      ;# 57  3.644   1041    16351 
        TIC  1059    16350      ;# 58  3.708   1059    16350 
        TIC  1078    16349      ;# 59  3.771   1078    16349 
        TIC  1096    16347      ;# 60  3.835   1096    16347 
        TIC  1114    16346      ;# 61  3.899   1114    16346 
        TIC  1132    16345      ;# 62  3.963   1132    16345 
        TIC  1151    16344      ;# 63  4.027   1151    16344 
        TIC  1169    16342      ;# 64  4.091   1169    16342 
        TIC  1187    16341      ;# 65  4.155   1187    16341 
        TIC  1205    16340      ;# 66  4.219   1205    16340 
        TIC  1224    16338      ;# 67  4.283   1224    16338 
        TIC  1242    16337      ;# 68  4.347   1242    16337 
        TIC  1260    16335      ;# 69  4.411   1260    16335 
        TIC  1278    16334      ;# 70  4.475   1278    16334 
        TIC  1296    16333      ;# 71  4.539   1296    16333 
        TIC  1315    16331      ;# 72  4.602   1315    16331 
        TIC  1333    16330      ;# 73  4.666   1333    16330 
        TIC  1351    16328      ;# 74  4.73    1351    16328 
        TIC  1369    16327      ;# 75  4.794   1369    16327 
        TIC  1388    16325      ;# 76  4.858   1388    16325 
        TIC  1406    16324      ;# 77  4.922   1406    16324 
        TIC  1424    16322      ;# 78  4.986   1424    16322 
				;===
	.PAGG
	.SBTTL	VIEW ROUTINES FOR THE PHASES
VIEW:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;
	JSR VWMES
				;
	LDA SC.FWV
	IFEQ			;?FIRST TIME THRU?
	LDD PH.TIM		;THEN GIVE INSTRUCTIONS TO PLAYER
	CMPD #20*5		;LOOK AT EACH MESSAGE 5 TIMES, ONE CYCLE TAKES 20
	IFLO
	ANDB #10
	IFEQ
	LDB #MS.SFB		;SHOOT FIREBALLS
	ELSE
	LDB #MS.STF		;SHOOT TIE FIGHTERS
	ENDIF
	JSR DOMESS
	ENDIF
	ENDIF
				;---
	JSR VWGAS
	JSR VWDTHA		;VIEW DETH STAR, MINIATURE
	JSR VWSITE
	JSR VWSTAR
	JSR VWXPLD		;CAN SEE PARTS ONCE ORIGINAL IS GONE FROM VIEW
				;---
	JSR TSTLAZ		;PREPARE FOR LAZAR HITS
	JSR SNVW
	JSR VWGUN
	JSR CLSLZ		;PROCESS COLLISIONS
	JSR VWLAZ		;AND SEE RESULT
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWS0D:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;---
	JSR VWMES
	JSR VWGAS
	JSR VWSTAR
	JSR VWXPLD		;SHOW PARTS AFTER TIE GONE FROM DISPLAY
	JSR SNVW
	JSR VWGUN
	JSR VWMOVR		;VIEW EXPANDING GAME OVER MESSAGE
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWHPA:				;VIEW HYPER INTO SMALL DETH STAR
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
	JSR VWMES
	JSR VWGAS
	JSR VWSITE
	JSR VWSTAR
	JSR VWDTHA		;VIEW DETH STAR, MINIATURE
	JSR VWXPLD		;PLACE AFTER TIE NO LONGER SHOWN
				;---
	JSR TSTLAZ		;PREPARE FOR LAZAR HITS
	JSR SNVW
	JSR VWGUN
	JSR CLSLZ		;PROCESS COLLISIONS
	JSR VWLAZ		;AND SEE RESULT
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
VEWHPB:				;VIEW HYPER INTO LARGE DETH STAR
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
	JSR VWMES
	JSR VWGAS
	JSR VWSITE
	JSR VWSTAR
	JSR VWDTHB		;VIEW DETH STAR, ENLARGING
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWGD:				;VIEW GROUND FLYING
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
	JSR VWMES
	JSR VWMTWR		;TOWER RELATED MESSAGES
	JSR VWGAS
	JSR VWSITE
	JSR VWSTRG		;VIEW GROUND STARS
				;---
	JSR TSTLAZ		;PREPARE FOR LAZAR HITS
	JSR VWGUN
	JSR VWGRND
	JSR CLGLZ		;PROCESS COLLISIONS
	JSR VWLAZ		;AND SEE RESULT
				;---
	JSR VWXPLD
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWG0D:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;---
	JSR VWMES
	JSR VWMTWR		;TOWER RELATED MESSAGES
	JSR VWGAS
	JSR VWSTRG		;VIEW GROUND STARS
				;---
	JSR VWGUN
	JSR VWGRND
	JSR VWMOVR		;VIEW EXPANDING GAME OVER MESSAGE
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

	.SBTTL	GROUND TO BASE TRANSITION

VEWG0B:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;
	JSR VWMES
	JSR VWMTWZ		;TOWER DONE, END MESSAGES ONLY
	LDB #MS.USE		;USE THE FORCE
	JSR DOMESS
				;
	JSR VWGAS
	JSR VWSITE
	JSR VWSTRG		;VIEW GROUND STARS
				;---
	JSR VWXPLD
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWG1B:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;
	JSR VWMES
	JSR VWMTWZ		;TOWER DONE, END MESSAGES ONLY
	LDB #MS.USE		;USE THE FORCE
	JSR DOMESS
				;
	JSR VWGAS
	JSR VWSITE
	JSR VWBASE
				;---
	JSR VWXPLD
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

	.SBTTL	BASE TRENCH VIEW

VEWBS:				;VIEW BASE TRENCH
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;---
	JSR VWMES
				;
	LDA PH.TIM
	CMPA #04
	IFLS
	LDA BS.RPT
	IFEQ			;?FIRST TIME THRU THIS TRENCH?
	JSR VWMTWZ		;SOME TOWER PHASE MESSAGES SEEN STILL
	ELSE			;ELSE MUST HAVE MISSED AND AM REPEATING
	LDD #VGSCAL-100		;DOUBLE SIZE
	STD (Y)++
	LDB #MS.MSD		;MISSED EXHAUST PORT
	JSR DOMESS		;	SCALE RESET AUTOMATICALLY
	ENDIF
	ENDIF
				;
	LDA SC.FWV
	IFEQ			;?FIRST WAVE?
	LDA PH.TIM
	CMPA #08
	IFLS
	LDA BS.RPT
	IFEQ			;?FIRST TIME THRU THIS TRENCH?
	LDA Q.ATP
	IFEQ			;?SPACE CLEAR SINCE NOT HIT ALL TOWER TOPS?
	LDA BS.WAV
	IFEQ			;?FIRST WAVE WITHOUT CATWALKS?
	LDB #MS.SFB		;SHOOT FIREBALLS
	ELSE			;ELSE ALTERNATE WITH CATWALK ALSO
	LDA FRAMEL
	ANDA #10
	IFEQ			;?TIME TO SWITCH TWEEN MESSAGES?
	LDB #MS.SFB		;SHOOT FIREBALLS
	ELSE
	LDB #MS.ACW		;AVOID CATWALKS
	ENDIF
	ENDIF
	JSR DOMESS
	ENDIF
	ENDIF
	ENDIF
	ENDIF
				;
	LDA SC.FWV		;FIRST WAVE?
	IFEQ			;YES, THEN MAY SHOW MESSAGE
	LDA BS.PFL
	IFNE
	LDD #VGSCAL-100		;DOUBLE SIZE
	STD (Y)++
	LDB #MS.EXH		;"EXHAUST PORT AHEAD"
	JSR DOMESS		;	SCALE RESET AUTOMATICALLY
	ENDIF
	ENDIF
				;
	LDA Q.FRC
	IFGE			;?USING THE FORCE?
	IFEQ			;?BUT STILL WAITING?
	LDB #MS.USE
	JSR DOMESS
	ELSE			;ELSE WAS SUCCESSFUL
	JSR VWFRC		;VIEW FORCE SCORING
	ENDIF
	ENDIF
				;---

	JSR VWGAS
	JSR VWSITE
	JSR VWBASE		;VIEW STAR BASE
				;---
	JSR TSTLAZ		;PREPARE FOR LAZAR HITS
	JSR VWGUN
	JSR CLBLZ		;PROCESS COLLISIONS
	JSR VWLAZ		;AND SEE RESULT
				;---
	JSR VWPTGN		;SEE THE PROTON TORPS IMMEDIATELY
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWB0D:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;---
	JSR VWMES
				;
	LDA Q.BSH		;TEST IF WE BASHED OUR NOSES
	IFNE			;?HIT BACK WALL?
	LDD #VGSCAL-100		;DOUBLE SIZE
	STD (Y)++
	LDB #MS.MSD		;MISSED EXHAUST PORT
	JSR DOMESS
	ENDIF
				;---
	JSR VWGAS
	JSR VWBASE		;VIEW STAR BASE
				;---
	JSR VWGUN
				;---
	LDA SC.FWV		;FIRST WAVE PLAYED?
	IFEQ			;YES, THEN MAY SHOW MESSAGE
	LDA BS.PFL
	IFNE
	LDD #VGSCAL-100		;DOUBLE SIZE
	STD (Y)++
	LDB #MS.EXH		;"EXHAUST PORT AHEAD"
	JSR DOMESS
	ENDIF
	ENDIF
				;---
	JSR VWMOVR		;VIEW EXPANDING GAME OVER MESSAGE
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWNXT:
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR RESIDU
				;---
	JSR VWMES
	JSR VWGAS
	JSR VWSITE
	JSR VWSTAR
				;---
	LDB #MS.DSD		;"DEATH STAR DESTROYED"
	JSR DOMESS
				;---
	LDA PH.TIM
	CMPA #02
	IFLE
	LDB #MS.BRE		;"BONUS FOR REMAINING ENERGY"
	JSR DOMESS
	LDB #MS.BRE+1		;"5,000 X "
	JSR DOMESS
	LDD #1FFF&144.		;Y POS
	STD (Y)++
	LDD #1FFF&112.		;X POS
	STD (Y)++
	LDA GS.OLD		;SHOW ENERGY LEFT
	JSR VWNIBL
	LDD #VGCNTR
	STD (Y)++
	ENDIF
				;---
	LDA PH.TIM
	CMPA #01
	IFLE
	LDA PT.LIV		;DID PLAYER GET KILL DETH STAR
	IFNE			;YES, THEN GIVE BONUS TYPE MESSAGE
				;
	LDA OPTS1		;HIGH BYTE OF 2ND OPTION BANK
	ANDA #03		;BONUS FUEL UPON KILLING DETH STAR
	IFNE
	LDB OPTS1+1
	ANDB #3
	ADDB #6
	CMPB S.GAS
	IFLS			;?ARE WE FULL UP ON GAS?
	LDB #MS.BSE+1		;SHIELD AT FULL STRENGTH
	ELSE			;ELSE TELL HOW MANY ADDED
	LDU #VJMFL		;MAKE IT FLASHY LIKE THE REST OF THE MESSAGE
	STU (Y)++
	LDU #1FFF&072.		;SHOW THE AMOUNT
	STU (Y)++
	LDU #1FFF&-320.		;X POS
	STU (Y)++
	LDB #01
	STB BT.SUP
	JSR VWNIBL
	LDD #VGCNTR
	STD (Y)++
	LDB #MS.BSE		;"X ADDED TO DEFLECTOR SHIELD"
	ENDIF
	JSR DOMESS
	ENDIF
				;
	ENDIF
	ENDIF
				;---
	LDA PH.TIM
	CMPA #00
	IFLE
	LDA SC.FWV		;FIRST WAVE?
	IFEQ			;YES
	LDB GM.WAV
	IFNE			;WASN'T WAVE 0, SO GIVE THEM MESSAGE
	LDB #MS.BON		;"DEATH STAR BONUS EARNED"
	JSR DOMESS
	ENDIF
	ENDIF
	ENDIF
				;---
	JSR VWGLW
	JSR VGDONE
	RTS
				;===

VEWDX1:				;DETH STAR PARTIAL PHASE 1
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
				;
	JSR VWMES
	LDA Q.FRC
	IFGT			;?SUCCESSFUL USE OF THE FORCE?
	JSR VWFRC
	ENDIF
				;
	JSR VWGAS
	JSR VWSITE
	JSR VWDTHB		;VIEW DETH STAR, ENLARGING
	JSR VGDONE
	RTS
				;===	
VEWDX2:				;DETH STAR PARTIAL PHASE 2
	JSR IVGEN1
	LDA #M$S1BC
	JSR IS1UV		;MATH BOX, PRIMARY INIT
	JSR VWMES
	JSR VWGAS
	JSR VWSITE
				;VIEW DETH STAR MINIATURE
	LDD #VGOFFY&1FFF	;Y OFFSET
	STD (Y)++
	LDD #0000		;NO X OFFSET
	STD (Y)++
	LDD #7200		;SCALE FOR MINIATURE
	STD (Y)++
	LDD #VJBMIN		;GET JSRL TO MINNY BASE OF DETH STAR
	STD (Y)++
	LDD #VGSCAL		;RESTORE BASE
	STD (Y)++
				;---
	JSR VWXPLN		;DETH STAR PRETTY STARTING
				;---
	JSR VGDONE
	RTS
				;===	

VEWDX3:				;DETH STAR PARTIAL PHASE 3
	JSR IVGEN1
	JSR VWMES
	JSR VWGAS
	JSR VWSITE
	JSR VWXPLN
	JSR VGDONE
	RTS
				;===

VWMES:
	LDD #VJTITL
	STD (Y)++
	LDD #VGCGRN*100+VGCOPC	;BRITE
	STD (Y)++
	LDD #VGRW3&01FFF	;HI UP
	STD (Y)++
	LDD #VGLIML+<0*VG$CW>&01FFF	;LEFT
	STD (Y)++
	LDA #6			;ZERO SUPPRESS TOP 6 DIGITS
	STA BT.SUP
	LDX #S.SC87
	JSR VW8DIG		;COMPLETE WITH COMMAS
	LDD #VGCNTR
	STD (Y)++
				;---
				;SHOW LAST SCORE ADDED IN
	LDB SC.ADT		;TIMER
	IFNE			;STILL VISIBLE, SHOW IT
	SUBB #08
	CMPB #20
	IFLO
	LDB #00
	ENDIF
	STB SC.ADT		;USE TIMER FOR BRIGHTNESS
	LSRB
	LDA #<VGCOPC/100>+VGCYLW
	STD (Y)++
	LDD #VGRW5&1FFF		;Y POS
	STD (Y)++
	LDD #VGLIML+<2*VG$CW>&01FFF ;X POS
	STD (Y)++
	LDA #05			;SUPRESS 5 LEADING ZEROES
	STA BT.SUP
	LDX #SC.ADD-1		;X-->8 DIGIT FIELD, EVEN THO ONLY LO 6 SHOW
	JSR VW6DIG		;6 DIGITS WITH COMMAS
	LDD #VGCNTR
	STD (Y)++
	ENDIF
				;---
				;SHOW WAVE NUMBER
	LDD #VGCGRN*100+VGCOPC	;COLOR BRITE
	STD (Y)++
	LDD #VGRW1&01FFF	;Y UP HI
	STD (Y)++
	LDD #VGLIMR-<<2+5>*VG$CW>&01FFF	;X RIGHT
	STD (Y)++
	LDA #1			;ZERO SUPPRES TOP 1 DIGIT
	STA BT.SUP
				;---
	LDA GM.DWAV		;BCD WAVE NUMBER
	JSR VWBYTE
	LDD #VGCNTR
	STD (Y)++
	RTS
				;===

VWMTWR:				;VEIW MESSAGES RELATED TO TOWERS
	LDA GD.WAV
	IFGT			;LOWEST WAVE GETS NO MESSAGES ( NO TOWERS )
	LDA GD.TWL
	IFNE			;?MORE TOWERS TO HIT?
	LDA FRAMEL
	ANDA #30
	IFNE			;?SHOW NEXT TOWERS WORTH?
	LDB #MS.NXT		;"XXXXX POINTS NEXT TOWER"
	JSR DOMESS
	LDD #VGCOLR+<VGCGRN*100>
	STD (Y)++
	LDD #VGRW7&01FFF	;Y POS
	STD (Y)++
	LDD #01ED0&01FFF	;X POS
	STD (Y)++
	LDA #04			;SUPRESS 4 ZEROES
	STA BT.SUP
	LDA TWRMULT
	JSR VWBYTE
	LDA TWRMULT+1
	JSR VWBYTE
	LDA TWRMULT+2
	JSR VWBYTE
	LDD #VGCNTR
	STD (Y)++
	ELSE			;ELSE SHOW ALL TOWERS WORTH
	LDB #MS.RWD		;"50,000 FOR SHOOTING ALL TOWERS"
	JSR DOMESS
	ENDIF
	ENDIF
				;---
VWMTWZ:				;MESSAGES STILL SEEN IN TRENCH
	LDA GD.WAV		;NO MESSAGES IN FIRST WAVE TRENCH
	IFGT
	LDD #MS.TWR		;"TOWERS"
	JSR DOMESS
	LDD #VGCOLR+<VGCGRN*100>
	STD (Y)++
	LDD #VGRW6&01FFF
	STD (Y)++
	LDD #VGLIMR-<5*VG$CW>&01FFF
	STD (Y)++
	LDA #01
	STA BT.SUP
	LDA GD.TWL		;TOWERS LEFT
	JSR VWBYTE
	LDD #VGCNTR
	STD (Y)++
				;---
	ENDIF
	ENDIF
				;---
	LDA Q.ATP
	IFNE			;GOT THEM ALL, PROCLAIM SUCH
	LDB #MS.ATP		;"ALL TOWER TOPS"
	JSR DOMESS
	ENDIF
				;---
	RTS
				;===

VWMOVR:				;VIEW GROWING GAME OVER MESSAGE
	LDA PH.TIM+1
	CMPA #32.		;STOP GROWING
	IFHI
	LDA #32.
	ENDIF
	LDB #06			;EXPAND AT 6 PER FRAME
	MUL
	NEGB
	ADDB #0C0		;SMALL IS 0C0, LARGE IS 000
	LDA #VGSCAL&0F000/100	;FRONT PART OF SCALE INSTRUCTION
	STD (Y)++
	LDB #MS.GO1		;"GAME OVER" IN CENTER OF SCREEN
	JSR DOMESS
	RTS
				;===

	.PAGG
	.SBTTL		BIN TO BCD, BCD TO BIN, AND VIEW BYTES

;CONVERT POSITIVE BINARY TO BCD
;INPUT BINARY IN D, NUMBER OF SHIFTS IN X
;OUTPUT IS BCD IN BCD,BCD+1,BCD+2
BINBCD::STD BIN	
	LDD #00
	STD BCD
	STA BCD+2
	BEGIN
	ASL BIN+1
	ROL BIN
	LDA  BCD+2
	ADCA BCD+2
	DAA
	STA  BCD+2
	LDA  BCD+1
	ADCA BCD+1
	DAA
	STA  BCD+1
	ROL  BCD
	LEAX -1(X)
	EQEND
	RTS
;
;
;CONVERT 2 POSITIVE BCD DIGITS TO BINARY
;INPUT A, OUTPUT BIN
BCDBIN::STA BIN
	ANDA #0F0			;USE FIRST NYBBLE
	LDB #0A0	
	MUL				;ACC A CONTAINS FIRST DIGIT*10.
	LDB BIN
	ANDB #0F
	STB BIN
	ADDA BIN
	STA BIN
	RTS
				;===

	.PAGE
	.SBTTL	VIEW DETH STAR

VWDTHA:				;VIEW DETH STAR, VERSION A (MINIATURE)
	LDD M$AX+M.U1		;X POSITION AT FAR(4000,0,0) DISTANCE
	IFGT			;?IN FRONT OF PLAYER?
	STD M.DVD		;PREPARE DIVIDER,PERSPECTIVE
	LDD M$AY+M.U1
	STD M.YP
	ABSD
	SUBD M$AX+M.U1
	IFLT			;?Y WITHIN X FIELD OF VIEW?
	LDD M$AZ+M.U1
	STD M.ZP		;ASSUME OK, THEN TEST
	ABSD
	SUBD M$AX+M.U1
	IFLT			;?Z WITHIN X FIELD OF VIEW?
	JSR OBJCEN		;THEN PROCESS THE CENTER POINT
	LDD #VGSCAL+100
	STD (Y)++
	LDD #VJBMIN		;GET JSRL TO MINNY BASE OF DETH STAR
	STD (Y)++
	LDD #VGSCAL		;RESTORE BASE
	STD (Y)++
	ENDIF
	ENDIF
	ENDIF
	RTS
				;===

VWDTHB:				;VIEW DEATH STAR, VERSION B (WITH SCALING)
	LDD M$AX+M.U1		;X POSITION AT FAR(4000,0,0) DISTANCE
	IFGT			;?IN FRONT OF PLAYER?
	STD M.DVD		;PREPARE DIVIDER,PERSPECTIVE
	LDD M$AY+M.U1
	STD M.YP
	ABSD
	SUBD M$AX+M.U1
	IFLT			;?Y WITHIN X FIELD OF VIEW?
	LDD M$AZ+M.U1
	STD M.ZP		;ASSUME OK, THEN TEST
	ABSD
	SUBD M$AX+M.U1
	IFLT			;?Z WITHIN X FIELD OF VIEW?
				;---
	JSR DTHVW
				;---
	ENDIF
	ENDIF
	ENDIF
	RTS
				;===

DTHVW:
	TEMP SCL,2,VX,2,VY,2
				;
	JSR OBJCEN		;THEN PROCESS THE CENTER POINT
	LDD -4(Y)		;SAVE CENTER POINT LOCATION
	STD TMPVY
	LDD -2(Y)
	STD TMPVX
				;
	LDD DT.SCL
	STD TMPSCL
				;---
	LDU #VJBCIR		;CIRCLE
	JSR 104$
				;---
	LDU #VJBTRN		;TRENCH
	JSR 100$
				;---
	LDU #VJBDSH		;DISH
	JSR 100$
				;---
	LDU #VJBNSD		;INSIDE
	JSR 100$
				;---
	LDU #VJBFRM		;FARM
	JSR 100$
				;---
	LDD DT.SCL
	SUBA #03		;SCALE UP THE SIZE OF THE CITY BLOCKS
	CMPD #VGSCAL-200
	IFLO			;NO LONGER A SCALE INSTRUCTION
	LDD #VGSCAL-200		;MAX SIZE
	ENDIF
	STD TMPSCL
				;
	CMPA #<VGSCAL-200>/100	;BINARY SCALE = 00?
	IFEQ			;YES
	LDD #VGCYLW*100+VGCOLR&0FF00!60	;BRIGHTER FOR BINARY=0
	ELSE			;NOT BINARY SCALE OF 0
	LDD #VGCYLW*100+VGCOLR&0FF00!30 ;CITY LIGHTS
	ENDIF
	STD (Y)++
				;---
	LDA SP.WAV
	BITA #01
	IFEQ
	LDU #VJUB1
	ELSE
	LDU #VJUB2		;CITIES 2,3, AND 4 GO TOGETHER
	JSR 100$
	LDU #VJUB3
	JSR 100$
	LDU #VJUB4
	ENDIF
	JSR 100$
				;---
	LDA SP.WAV
	BITA #01
	IFEQ
	LDU #VJLB1
	ELSE
	LDU #VJLB2		;CITIES 2,3, AND 4 GO TOGETHER
	JSR 100$
	LDU #VJLB3
	JSR 100$
	LDU #VJLB4
	ENDIF
	JSR 100$
				;---
	RTS	
				;===
100$:				;DRAW TO CENTER, SCALE, THEN DO STAMP
				;U:=STAMP
	LDD TMPVY		;CENTER OF PLANET ON SCREEN
	STD (Y)++
	LDD TMPVX
	STD (Y)++
104$:				;
	LDD TMPSCL		;SCALE THE STAMP
	STD (Y)++
	STU (Y)++		;VIEW THE STAMP
	RTS
				;===

	.PAGG
	.SBTTL		SNVW VIEW ALIEN SHIP
SNVW:
	LDX #ALIEN		;SHIP PARAMS
10$:				;---LOOP THRU SHIPS
	STX S2.PRM
	LDA A$TYP(X)
	BEQ 90$			;?SOMEWHAT ALIVE?
	JSR S2VW		;VIEW THE SHIP
90$:				;---
	LDX S2.PRM		;NEXT SHIP
	LEAX A$IZE(X)
	CMPX #ALIENZ
	BLO 10$
96$:				;---
RTS1:	RTS
S2VW:
	LDX S2.PRM
	CLRA
	LDB A$BIC(X)
	ADDB #3
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT
	LDA M.XP
	LSLA			;-4000<X<4000 FOR VALID SQUARING
	BVS 12$
	LDA M.YP
	LSLA
	BVS 12$
	LDA M.ZP
	LSLA
	BVS 12$
	LDD M.XPS		;CHECK FOR COLLISION
	ADDD M.YPS
	ADDD M.ZPS
	TFR D,U
114$:				;---
	CMPU #900
	IFLS			;?PLAYER AT MIDDISTANCE?
	LDD A$CHST(X)
	CHSET C$PM		;THEN SET PLAYER MIDDLE DISTANCE
	STD A$CHST(X)
	ENDIF
				;---
	CMPU #100
	IFLS			;?PLAYER NEARBY?
	LDD A$CHST(X)
	CHSET C$PN		;THEN SET PLAYER NEAR
	STD A$CHST(X)
	ENDIF
				;---
	CMPU #0A0
	IFLS			;?PLAYER NEARBY?
	LDA Q.PBB
	IFEQ			;?NO SHIP CURRENTLY PASSING BY?
	LDA A$BIC(X)
	STA Q.PBB		;THEN START THIS SHIP PASSING BY
	JSR SPKELE		;ELEPHANT PASSBY
	JSR AUDPB		;APPROACH OF PASSBY SOUND
	STU Q.PBD		;INIT CURRENT DISTANCE
	ELSE			;ELSE IS BIC OF SHIP IS PASSING BY
	CMPA A$BIC(X)
	IFEQ			;?IS THIS THE SHIP CURRENTLY PASSINGBY?
	CMPU Q.PBD		;THEN CHECK FOR CHANGES IN DISTANCE AWAY
	IFLE			;?NOT MOVING AWAY YET? NOTE SIGNED FLAG TEST
	STU Q.PBD		;THEN SAVE THIS LATEST DISTANCE
	ELSE			;ELSE IS DEFINITLY MOVING AWAY
	IFHS			;?MINUS FLAG STILL CLEAR? ONE TIME ONLY
	LDA #-1
	STA Q.PBD		;SET DISTANCE TO MINUS, END PASSBY FLAG
	JSR AUDPS		;SHORT PASSBY EXIT DOPPLER SOUND
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	ELSE			;ELSE NOT NEAR TO PLAYER
	LDA A$BIC(X)
	CMPA Q.PBB
	IFEQ			;?WAS THIS THE SHIP DOING A PASSBY?
	CLR Q.PBB		;THEN PREPARE FOR NEXT SHIP
				;NOTE THAT SLIGHT PASSBYS ARE IGNORED
	ENDIF
	ENDIF
12$:				;---
	LDD M.XP		;
	CMPD #10
	LBLE RTS1
	CMPD #7F00
	LBHI RTS1
19$:				;----SAVE NEW X
	STD M.DVD
	STD M.XT
	LDD M.YP
	STD M.YT
	LDD M.YPS
	SUBD M.XPS		;X SQUARED
	LBHS RTS1		;B OUT OF VIEW
28$:				;---
	LDD M.ZP
	STD M.ZT
	LDD M.ZPS
	SUBD M.XPS		;X SQUARED
	LBHS RTS1
31$:				;---
	LDX S2.PRM
	LDD A$CHST(X)
	CHSET C$PV		;WITHIN PLAYERS VIEW SCREEN
	STD A$CHST(X)
				;---
	LDA Q.RTHV
	IFEQ			;?DARTH NOT YET VISIBLE?
	LDA A$PIC(X)
	CMPA #TD$RTH
	IFEQ			;?IS THIS DARTH?
	INC Q.RTHV		;ONE TIME ONLY
	LDA SP.WAV
	LSRA
	IFCC			;?EVEN , SELECT A LEVEL FIRST WAVE?
	LDA P.RND1
	IFMI			;?RANDOM?
	JSR SPKSTA		;STAY IN ATTACK FORMATION
	ELSE
	JSR SPKIMO		;I'M ON THE LEADER
	ENDIF
	ELSE			;ELSE ODD, HAVE LOWER ENERGY NOW
	JSR SPKHAV		;I HAVE YOU NOW
	ENDIF
	ENDIF
	ENDIF
				;---
	LDA A$BIC(X)
	JSR IS2UV		;DOWNLOAD SHIP 2 UNIT VECTORS
				;SHIP 2 VISIBLE
	JSR OBJCEN		;PROCESS CENTER OF SHIP
				;---
	TEMP SIZ,2,OCT,2,XD,2,YD,2
	LDD #80.		;JUST TRY IT -- SHUT DOWN CPU AND TEST
	STD M.YP		;GET SHIP SIZE
	LDA #M$PERS
	JSR MGOWT
	LDD M.YP
	ADDD #10.		;ADDIN CURSOR SIZE
	STD TMPSIZ
	LDD BJ.CX		;OBJECT CENTER
	SUBD LZ.CX		;LAZAR CENTER
	IFMI
	NEGD			;ABSD
	ENDIF
	STD TMPXD		;SAVE X DISTANCE
	STD TMPOCT		;PREPARE FOR OCTAGON COLLISION DETECT
	LDD BJ.CY
	SUBD LZ.CY		;NOW CHECKING Y COORDS
	IFMI
	NEGD
	ENDIF
	STD TMPYD		;SAVE Y DISTANCE
	ADDD TMPOCT
	STD TMPOCT		;OCTAGON CHECK
	LDD TMPXD
	SUBD TMPSIZ
	IFLE			;LE FOR LIBERALITY
	LDD TMPYD
	SUBD TMPSIZ
	IFLE			;?WITHIN Y ALSO?
	LDD TMPSIZ
	LSRD
	ADDD TMPSIZ		;MAKE 1.5 FOR OCTAGON
	SUBD TMPOCT
	IFGE			;?ALSO WITHIN OCTAGON?
	LDD M.XT		;THEN SEE IF WE ARE THE CLOSEST ALIEN
	CMPD CL.ADS		;SHIP DISTANCE
	IFLO			;?ALSO THE NEAREST SHIP SO FAR?
	STD CL.ADS		;REMEMBER ITS DISTANCE
	LDX S2.PRM		;THEN WE GOT A HIT
	STX CL.AP		;RECORD WHO WE ARE
	ENDIF
	ENDIF
	ENDIF
	ENDIF
				;---
	LDD TMPSIZ		;?AIM IS NEARING ALIEN?
	ADDD TMPSIZ
	ADDD TMPSIZ		;ALLOW LARGER WARNING AREA
	SUBD TMPOCT
	IFHS
	LDX S2.PRM
	LDA A$TYP(X)
	CMPA #1
	BNE 86$			;?ALIVE?
	LDD A$CHST(X)
	CHSET C$PS		;STATUS: ALIEN IN PLAYER SITES
	STD A$CHST(X)
	ENDIF
86$:				;---
				;SET BRITENESS
				;ELSE HANDLE GLOW
				;---
	LDX S2.PRM
	LDB A$GLW(X)
	LDU #TVWCL		;GET GLOW COLORS
	LSLB
	LDD B(U)
	STD (Y)++
55$:				;---
	LDA #M$CNCT
	JSR MGOWT
				;
	LDB A$PIC(X)
	JSR OBJBPNT		;PROCESS OBJECT POINTS
	JSR OBJDRW		;DRAW THE OBJECT LINES
	LDD #VGCNTR		;CENTER
	STD (Y)++
90$:
	RTS
				;===
				;TABLES OF SHIP COLORS
				;TVWBYT CONVERTS OLD VALS TO NEW HARDWARE
	.MACRO TVWBYT .A,.B,.C,.D,.E,.F,.G,.H,.I
	.IRP .1,<.A .B .C .D .E .F .G .H .I>
	.WORD VGCOPC&0F000+<.1&0F*100>+<.1&0F0>
	.ENDR
	.ENDM

TVWCL:				;VIEW SHIP COLOR BRITE IF HIT
	TVWBYT 082,037,82,37,82,47,82,47
	TVWBYT 082,057,82,057,082,067,082,067
	TVWBYT 082,077,082,077,082,087,082,087
	TVWBYT 082,087,082,087,082,087,0C7,0C7
				;---

NW1SHP:				;RESET UNITVECTORS ALSO
	LDU #M.S1
	JSR UNITV
	LDD #0
	STD M$TX+M.S1
	STD M$TY+M.S1
	STD M$TZ+M.S1
OLD1SHP:			;USE OLD UNIT VECTORS
	LDD #0
	STA S.GLW
	STA S.ROL
	STA VG.LON
	STA LZ.ON		;TURN OFF LAZARS
	STA LZ.EDG
	STA LZ.HIT
	STD GD.ACT
	STA RH$RSD+RHEOR	;SPECIAL ROLL
	STA RH$RSD+RHEOP	;CLEAR OUT MAGIC RESIDUE
	STA RH$RSD+RHEOY
	STD RH$POS+RHEOY	;RESTART IN CENTER OF SCREEN
	STD RH$POS+RHEOP
	RTS
				;===

	HLL69F

	.END
                                                                         