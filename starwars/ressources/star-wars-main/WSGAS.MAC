	.TITLE	WSGAS	GAS AND SCORE
	.INCLUDE	WSCOMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===
				;D-PAGE RAM
	.GLOBB BT.SUP
	.GLOBB FRAMEL
	.GLOBB GS.GLW,GS.HIT,GS.LEN,GS.OLD,GS.VBS,GS.VTP,GS.VUP
	.GLOBB S.CAN
	.GLOBB S.GAS
	.GLOBB S.SC21,S.SC43,S.SC65,S.SC87
				;---
				;RAM
	.GLOBL GD.TWL
	.GLOBL OPTS1
	.GLOBL Q.ATP
	.GLOBL SC.FWV,GM.WAV
	.GLOBL SC.ADD,SC.ADT
	.GLOBL TWRMULT
				;---
				;OUTSIDE ROUTINES
	.GLOBL AUDDR,AUDRC,AUDRD
	.GLOBL SPKHIT,SPKLOS,SPKR2T
	.GLOBL DOMESS
	.GLOBL MS.SHG,MS.USE
	.GLOBL VJFUEL
	.GLOBL VWBYT1,VW6DIG
				;---
				;VECTOR GENERATOR
	.GLOBL VGCNTR,VGSCAL
	.GLOBL VG$C,VG$CW,VGRW0,VGRW7
	.GLOBL VJFLS,VJMFL,VGCGRN,VGCOFF,VGCRED,VGCYLW,VGCOPC
				;===

	.MACRO .PAGG		;GLOBAL PAGE NUMBERS
	.PAGEG G		;GAS AND SCORE
	.ENDM

	.CSECT GAS
	.PAGG
	.SBTTL	GAS--DO1GAS,VWGAS,ADCGAS

ADCGAS::			;ADD CANNED GAS
	LDA OPTS1		;HIGH NIBBLE OF OPTION BANK 2
	ANDA #03		;HOW MUCH BONUS ENERGY?
	IFNE			;MORE THAN NOTHING
	ADDA S.GAS		;ADD IT IN
	STA S.GAS
	LDA OPTS1+1		;LOW NIBBLE OF OPTION BANK 2
	ANDA #03		;MAX ALLOWABLE GAS IS STARTING AMOUNT
	ADDA #06
	CMPA S.GAS
	IFLO			;OVER THE MAX LIMIT
	STA S.GAS		;SO SET IT TO THE LIMIT
	ENDIF
				;---
	LDA #20.		;SHOW GAS REFUEL FOR A SECOND
	STA S.CAN
	ENDIF
				;---
	RTS
				;===

DO1GAS::
				;
	LDA GS.GLW		;WHAT CAN WE LOSE?
	IFGT			;?SHIELDS HIT?
	LDA GS.HIT
	IFLE			;?AND DONE WITH PREVIOUS GAS CHANGE?
	LDA #1
	STA GS.HIT		;GAS NOW HANDLING BEING HIT
	LDA S.GAS
	STA GS.OLD		;SAVE OLD AMOUNT FOR FLICKER
	LDA #-10.		;START DISPLAY ANIMATION FROM SCRATCH
	ADDA S.GAS
	STA GS.LEN
	DEC S.GAS		;THEN DECREASE OUR FUEL
	IFLT			;?OUT OF FUEL?
	LDA #-1
	STA S.GAS		;SET TO DEAD
	CLR GS.HIT		;NO ANIMATION CUZ FINAL MESSAGE ALREADY ON
	ENDIF
	LDA S.GAS
	CMPA #0
	IFEQ
	JSR SPKLOS		;I'VE LOST R2
	JSR AUDDR		;DEAD R2, SWAN SONG
	ELSE
	CMPA #1
	IFEQ
	JSR AUDRC		;GAS AT 1 COOKS R2
	ELSE
	CMPA #2
	IFEQ
	JSR SPKR2T		;R2 TRY AND INCREASE THE POWER
	JSR AUDRD		;R2 DONE
	ENDIF
	ENDIF
	ENDIF
	CLRB
	STB GS.VTP		;NO VIEW TOP OF GAUGE
	STB GS.VUP		;NO VIEW UP PART OF GAUGE
	STB GS.VBS		;NOT EVEN BASE OF GAUGE YET
	ENDIF
	ENDIF
				;---
	LDA S.CAN		;DEC CAN ( FLAG FOR BRIGHT ) UNTIL 00
	IFNE
	DEC S.CAN
	ENDIF
	RTS
				;---

VWGAS::
	LDA GS.HIT
	IFEQ			;?FINISHED HANDLING HIT?
	LDA S.GAS
	IFLE			;?AND NO GAS LEFT?
	JMP VWGONE		;J JUST VIEW GAS GONE MESSAGE
	ENDIF
	ENDIF
	LDB S.GAS
	LSLB
	LDX #TGCLR		;SELECT CURRENT COLOR
	LDU B(X)
	STU (Y)++
	LDD #VJFUEL		;SHOW TITLE OF GAS GAUGE
	STD (Y)++
				;---
	LDD #VGRW0&01FFF	;GOTO BASE OF GAUGE
	STD (Y)++
	LDD #0
	STD (Y)++
				;---
	LDA GS.HIT
	IFNE			;?ARE WE ANIMATING A HIT?
	JSR GSVNEW		;THEN VIEW OUR NEW DISPLAY
	ELSE			;ELSE LOOK AT OLD ONE
	JSR GSVALL
	ENDIF
				;---
	LDD #-4*VG$C/2&01FFF	;DOWN 4/2 OF NUMERAL
	STD (Y)++
	LDD #-1*VG$CW/2&01FFF	;LEFT ONE HALF NUMERAL
	STD (Y)++
	LDA GS.HIT
	IFGT			;?CURRENTLY REDRAWING?
	LDU #VJFLS		;THEN FLASH NEW NUMBER
	ELSE
	LDB S.GAS
	LSLB
	LDX #TGCLR		;SELECT CURRENT COLOR
	LDU B(X)
	ENDIF
	STU (Y)++
	CLR BT.SUP		;DONT SUPPRESS ANY NUMERALS
	LDA S.GAS
	IFLT
	CLRA			;LIMIT TO ZERO
	ENDIF
	JSR VWBYT1		;JUST VIEW ONE NUMERAL OF BYTE
	LDD #VGCNTR
	STD (Y)++
	RTS
				;===

VWGONE:
	LDD #VGSCAL-100		;DOUBLE SIZE
	STD (Y)++
	LDB #MS.SHG		;SHIELDS GONE WARNING
	JSR DOMESS
	RTS
				;===

GSVALL:				;VIEW ALL OF GAS GAUGE
	LDB S.GAS
	LSLB
	LDX #TGCLR
	LDD B(X)		;GET CORRECT COLOR
	TST S.CAN		;TEST BRIGHT FLAG
	IFNE			;FLAG ON
	ORB #0FF		;MAKE VERY BRIGHT
	ENDIF
	STD (Y)++
				;---
	LDB S.GAS
	LSLB
	LDX #TGALL		;DRAW ALL OF THE GAUGE
	LDU B(X)
	STU (Y)++

	RTS
				;===

GSVNEW:				;ANIMATE OUR NEW GAS GAUGE
	LDA GS.VTP
	IFEQ			;?WORKING ON SMOOTH TOP LINE?
	LDU #VJFLS		;FLASH THE OLD VALUE
	STU (Y)++
	LDB GS.OLD
	LSLB
	LDX #TGALL		;COVER UP ALL OF THE GAUGE
	LDU B(X)
	STU (Y)++
				;---
	LDA FRAMEL
	ANDA #0
	IFEQ			;?AND TIME INTERVAL HAS PASSED?
	INC GS.LEN
	IFGE			;?FINISHED WITH SHIELD FLASH OF GAS GAUGE?
	INC GS.VTP		;THEN START REDRAW OF GAUGE, BEGIN WITH TOP
	ENDIF
	ENDIF
				;---
	ELSE			;ELSE DO ANIMATION OF REDRAW NEW GAUGE
	JSR GSVHIT		;DRAW THE HIT ON THE WHOLE NEW GAUGE
	LDU #VJFLS		;COVER PART OF NEW WITH FLASH THE OLD VALUE
	STU (Y)++
	LDA GS.VUP
	IFEQ			;?PREPARE FOR UPSTROKE?
	LDB GS.OLD
	LSLB
	LDX #TGUP		;COVER UP THE UPSTROKE ET AL.
	LDU B(X)
	STU (Y)++
				;---
	LDA FRAMEL
	ANDA #0
	IFEQ			;?TIME INTERVAL?
	INC GS.VUP		;SET TO VIEW NORMAL UPSTROKE
	LDB S.GAS		;FIND WHERE TO UNDO FLASHING OLD GAUGE
	LDX #TGDLM		;WHERE TO START UNCOVERING NEW GAUGE
	LDA B(X)
	STA GS.LEN
	ENDIF
				;---
	ELSE			;ELSE NEW UPSTROKE REVEALED, WORK ON BASE
	LDA GS.VBS
	IFEQ			;?STILL WORKING ON REVEALING BASE?
	LDB GS.LEN
	LSLB
	LDX #TGDRW		;DRAW ANIMATION
	LDU B(X)
	STU (Y)++
				;---
	LDA FRAMEL
	ANDA #0
	IFEQ			;?TIME INTERVAL?
	DEC GS.LEN		;FLASHY COVERING GETS SHORTER AND SHORTER
	IFLE			;?ALL DONE UNCOVERING BASE?
	INC GS.VBS		;THEN SAY SO
	ENDIF
	ENDIF
				;---
	ELSE			;ELSE NEW BASE FULLY VISIBLE, NEW GAUGE DONE
	LDA FRAMEL
	ANDA #0
	IFEQ			;?AND TIME INTERVAL HAS PASSED?
	LDA #0
	STA GS.HIT		;THEN STOP ANIMATING THE HIT
	STA GS.GLW		;AND TELL REST OF WORLD WE ARE READY FOR MORE
	LDA S.GAS
	STA GS.OLD		;CURRENT IS NOW OLD, STABILIZE TO CORRECT VALUE
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	RTS
				;===

GSVHIT:				;VIEW A DAMAGED FUEL GAUGE
	LDB S.GAS		;VIEW NEW CURRENT GAS VALUE
	LSLB
	LDX #TGCLR
	LDD B(X)		;GET CORRECT COLOR
	STD (Y)++
				;---
	LDB S.GAS		;VIEW NEW CURRENT GAS VALUE
	LSLB
	LDX #TGALL		;DRAW ALL OF THE GAUGE
	LDU B(X)
	STU (Y)++
	RTS	
				;===

TGCLR:				;COLOR BY S.GAS
	.WORD VGCOFF*100+VGCOPC	;0
	.WORD VGCRED*100+VGCOPC	;1
	.WORD VGCRED*100+VGCOPC	;2
	.WORD VGCYLW*100+VGCOPC	;3
	.WORD VGCYLW*100+VGCOPC	;4
	.WORD VGCGRN*100+VGCOPC	;5
	.WORD VGCGRN*100+VGCOPC	;6
	.WORD VGCGRN*100+VGCOPC	;7
	.WORD VGCGRN*100+VGCOPC	;8
	.WORD VGCGRN*100+VGCOPC	;9
				;===

TGALL:				;DRAW WHOLE PIC, TOP,UPSTROKE,BASELINE
	.IRP .A,<0,1,2,3,4,5,6,7,8,9>
	.GLOBL VJGA'.A
	.WORD VJGA'.A
	.ENDR
				;===

TGUP:				;DRAW UPSTROKE FOLLOWED BY BASE LINE
	.IRP .A,<0,1,2,3,4,5,6,7,8,9>
	.GLOBL VJGU'.A
	.WORD VJGU'.A
	.ENDR
				;===
TGDRW:				;ANIMATE BY GOING THRU THESE BASE LINES
	.IRP .A,<0,1A,1,2A,2,3A,3,4A,4,5A,5,6A,6,7A,7,8A,8,9A,9>
	.GLOBL VJG'.A
	.WORD VJG'.A
	.ENDR
				;===
TGDLM:				;WHERE TO START UNDOING OLD OVERLAY ON GAUGE
	.IRP .A,<0,2,4,6,8,10.,12.,14.,16.,18.>
	.BYTE '.A
	.ENDR



	.PAGE
	.SBTTL	SCORE ROUTINES

SCRWAV::			;ADD WAVE BONUS TO THE SCORE
	LDA SC.FWV		;FIRST WAVE?
	IFEQ			;YES, THEN GIVE THE PLAYER HIS/HER JUST DESSERTS
	LDB GM.WAV		;JUST FINISHED THIS LEVEL
	IFNE			;WAVE 0 GETS NO BONUS
	ASLB			;*3
	ADDB GM.WAV
	LDX #TSCBN1-3		;POINTS TO TABLE BUT IGNORING LEVEL 0
	ABX
	TFR X,U
	JSR ADUSCR		;ADD IT IN
	ENDIF
	ENDIF
	RTS
				;---

SCRTWR::
	LDU #TWRMULT		;INCREMENTAL SCORE FOR TOWERS
	JSR ADUSCR		;ADD IT IN
	LDX #TSCTWR
				;ADD TO MULTIPLE SCORE
	LDA TWRMULT+2		;LSD FIRST
	ADDA 2(X)
	DAA
	STA TWRMULT+2
	LDA TWRMULT+1
	ADCA 1(X)
	DAA
	STA TWRMULT+1
	LDA TWRMULT+0		;MSD
	ADCA 0(X)
	DAA
	STA TWRMULT+0
				;---
	LDA GD.TWL		;HANDLE NUMBER OF TOWERS LEFT
	IFNE			;?ANY LEFT?
	ADDA #99		;DECIMAL DEC
	DAA
	STA GD.TWL
	IFEQ			;?DONE ALL TOWERS?
	LDU #TSCATP		;THEN GIVE BIG BONUS
	JSR ADUSCR
	INC Q.ATP		;YEP, ALL TOPS GOT HIT
	ENDIF
	ENDIF
	RTS
				;---

SCRSHLD::			;GIVE POINTS FOR SHIELD ENERGY REMAINING
	LDB S.GAS		;SET COUNT
	IFNE			;PROBLEM IF ZERO
	LDU #TSCSHL		;SCORE PER REMAINING SHIELD ENERGY
	LDA #00			;START WITH 000000
	STA SC.ADD
	STA SC.ADD+1
	STA SC.ADD+2
	BEGIN			;ADD THEM ALL IN
	LDA 2(U)
	ADDA SC.ADD+2
	DAA
	STA SC.ADD+2
	LDA 1(U)
	ADCA SC.ADD+1
	DAA
	STA SC.ADD+1
	LDA 0(U)
	ADCA SC.ADD+0
	DAA
	STA SC.ADD+0
	DECB			;DEC COUNT
	EQEND
	LDU #SC.ADD		;POINT TO SCORE WE JUST BUILT
	JSR ADUSCR
	ENDIF
	RTS
				;---
	
GETFRP:				;GET POINTER TO THIS WAVES POINTS
	LDB GM.WAV
	CMPB #TSCFRZ-TSCFRC/3
	IFHS
	LDU #TSCFRZ-3		;HIGHER LEVELS USE MAX SCORE
	ELSE
	LSLB
	ADDB GM.WAV		;*3
	LDU #TSCFRC
	LEAU B(U)
	ENDIF
				;
	RTS
				;---

VWFRC::				;VIEW THE SUCCESSFUL FORCE SCORE
	LDD #VJMFL		;COLOR
	STD (Y)++
				;
	LDD #VGRW7&01FFF	;Y DISTANCE UP
	STD (Y)++
	LDD #-320.&01FFF	;X POSITION ON LEFT SCREEN
	STD (Y)++
				;
	LDA #4			;SUPPRESS UP TO 4 LEADING ZEROS
	STA BT.SUP
	JSR GETFRP		;U-->6 DIGIT SCORE TO USE
	LEAX -1(U)		;POINT X-->8 DIGIT FIELD
	JSR VW6DIG		;BUT DISPLAY LO 6 DIGITS ONLY
				;
	LDB #MS.USE+1		;FOLLOW WITH TEXT, FOR USING THE FORCE
	JSR DOMESS		;	AUTO DOES SCALE AND CENTER RESET
				;
	RTS
				;===

SCRFRC::			;PLAYER USED THE FORCE IN THE TRENCH
	JSR GETFRP		;U-->LEVEL SCORE
	BRA ADUSCR
				;---
SCRTIES::			;KILL A REGULAR TIE FIGHTER
	LDU #TSCA1D
	BRA ADUSCR
				;---

SCRDARTH::			;GOT DARTH
	LDU #TSCA2D
	BRA ADUSCR
				;---

SCRPNL::			;DECORATIVE PANEL
	LDU #TSCPNL
	BRA ADUSCR
				;---

SCRBNK::			;LASER BUNKERS
	LDU #TSCBNK
	BRA ADUSCR
				;---

SCRTRT::			;TRENCH GUN TURRET
	LDU #TSCTRT
	BRA ADUSCR
				;---

SCRSHT::			;HIT FIREBALL
	LDU #TSCSHT
	BRA ADUSCR
				;---

SCRPORT::			;HIT EXHAUST PORT ( KILLED DEATH STAR )
	LDU #TSCPRT
	BRA ADUSCR
				;---

SCRALL::			;GOT ALL TOWER TOPS OR BUNKERS IN A WAVE
	LDU #TSCATP
	BRA ADUSCR
				;===

ADUSCR:				;ADD FROM U PTR TO SCORE, USES A REGISTER
	LDA 2(U)
	STA SC.ADD+2		;DISPLAY OUR NEW ADDITION
	ADDA S.SC21
	DAA
	STA S.SC21
	LDA 1(U)
	STA SC.ADD+1
	ADCA S.SC43
	DAA
	STA S.SC43
	LDA 0(U)
	STA SC.ADD+0
	ADCA S.SC65
	DAA
	STA S.SC65
	LDA S.SC87
	ADCA #0
	DAA
	STA S.SC87
				;---
	LDA #0FF
	STA SC.ADT		;NEW TIMER FOR NEW ADDITION
	RTS
				;===
TSCFRC:	.BYTE 00,50,00		;USE THE FORCE IN THE TRENCH
	.BYTE 01,00,00
	.BYTE 02,50,00
	.BYTE 05,00,00
	.BYTE 10,00,00		;LEVEL 5 AND ABOVE
TSCFRZ:
				;
TSCA1D:	.BYTE 00,10,00		;TIE FIGHTER SHOT
TSCA2D:	.BYTE 00,20,00		;CHASED DARTH OFF
TSCPNL:	.BYTE 00,00,50		;DECORATIVE PANEL HIT
TSCTRT:	.BYTE 00,01,00		;TRENCH TURRET
TSCTWR::.BYTE 00,02,00		;TOWER TOP
TSCBNK:	.BYTE 00,02,00		;LASER BUNKER
TSCSHT:	.BYTE 00,00,33		;HIT FIREBALL
TSCPRT:	.BYTE 02,50,00		;EXHAUST PORT
TSCATP:	.BYTE 05,00,00		;ELIMINATED ALL TOWER TOPS AND/OR BUNKERS
TSCSHL:	.BYTE 00,50,00		;SHIELD SCORE FOR REMAINING ENERGY UNITS
				;NO BONUS FOR CHOOSING DETH STAR 0
TSCBN1:	.BYTE 20,00,00		;BONUS FOR CHOOSING DETH STAR 1
TSCBN2:	.BYTE 40,00,00		;BONUS FOR CHOOSING DETH STAR 2
TSCBN3:	.BYTE 60,00,00		;BONUS FOR CHOOSING DETH STAR 3
TSCBN4:	.BYTE 80,00,00		;BONUS FOR CHOOSING DETH STAR 4
	HLL69F
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         