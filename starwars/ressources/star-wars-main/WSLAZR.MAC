	.TITLE	WSLAZR	LAZARS
	.INCLUDE	WSCOMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===
				;---
M$AX	==-10+0
M$AY	==-10+0+2
M$AZ	==-10+0+0+4

M$BX	==-10+0+8
M$BY	==-10+0+8+2
M$BZ	==-10+0+8+4

M$CX	==-10+0+10
M$CY	==-10+0+10+2
M$CZ	==-10+0+10+4

M$TX	==-10+18+0
M$TY	==-10+18+2
M$TZ	==-10+18+4

M$VX	==-10+6
M$VY	==-10+6+8
M$VZ	==-10+6+10

				;===
				;D-PAGE RAM
	.GLOBB BS.PFL,BS.PLC
	.GLOBB CL.BDS,CL.GDS,CL.ADS,CL.TDS
	.GLOBB LZ.EDG
	.GLOBB LZ.HIT
	.GLOBB LZ.ON
	.GLOBB LZ.PNW,LZ.PNX
	.GLOBB LZ.CX,LZ.CY,LZ.RSX,LZ.RSY
	.GLOBB PT.LZF
	.GLOBB VG.LON
	.GLOBB VG.CX,VG.CY,VG.RSX,VG.RSY
				;---
				;RAM
	.GLOBL LZPNT
	.GLOBL LZ.ALT,LZ.GX,LZ.GY
	.GLOBL PNLW,PNRW
	.GLOBL Q.FRC
	.GLOBL SP.LOC,SP.COL,SP.TYP
				;---
				;OUTSIDE ROUTINES,TABLES
	.GLOBL SCRPNL,SCRTRT
	.GLOBL AUDSX,AUDXL
	.GLOBL FRPTGN
	.GLOBL GDHTGB
	.GLOBL GNHTSG,CPHTSA
	.GLOBL MGOWT
				;---
				;MATH BOX
	.GLOBL M$PERS
	.GLOBL M.DVD,M.DVN
	.GLOBL M.QUO
	.GLOBL M.U1
	.GLOBL M.XP,M.YP,M.ZP
				;---
				;VECTOR GENERATOR
	.GLOBL VGCNTR,VGSCAL
	.GLOBL VGCGRN,VGCTRQ,VGCYLW,VGCOPC
	.GLOBL VGLIMB,VGLIML,VGLIMR
	.GLOBL VGOFFY
	.GLOBL VJLZS	;ALSO VJLZF*
	.GLOBL VJSPUR,VJSPUL,VJSPDL,VJSPDR
				;---
				;HARDWARE
				;---
				;SHIFT ROUTINES
	.GLOBL ASRD3
				;===

				;===
	.MACRO .PAGG		;GLOBAL PAGE NUMBERS
	.PAGEG L		;LAZARS
	.ENDM


	.CSECT LAZR

	.PAGG
	.SBTTL	LASAR -- S1LAZ,MVLAZ,VWLAZ,CL1LAZ
				;===
TSTLAZ::			;TEST IF LAZARS SHOULD BE ON IN MAINLINE
				;>0 ==> STICK LASAR ONTO HIT FOR A WHILE
				;<0 ==> GLANCED OFF, NOT STUCK
	LDA LZ.HIT		;CHECK IF A HIT HAS OCCURRED LAST FRAME
	IFGT
	DEC LZ.HIT		;TIME IT OUT
	LDA #0
	STA LZ.EDG		;LAZAR FREEZES IN POSITION
	STA LZ.ON		;AND NO SHOW REGULAR LAZARS
	ELSE
	LDA #0
	STA LZ.HIT
	ENDIF
	LDA #0
	STA LZ.ON		;AND STOP ALL LAZARS
				;---	
	SEI			;***PREVENT POSSIBLE IRQ/MAINLINE INTERACTIONS
	LDA VG.LON		;GET ON SWITCH FROM IRQ
	IFNE
	INC LZ.ALT		;EDGED ALTERNATION
	CLR LZ.HIT		;STOP THE HIT PICTURE, ALLOW SWEEPING LAZARS
	LDB #8
	STB LZ.EDG
	CLR VG.LON		;PREPARE IRQ FOR NEXT MAINLINE
	ENDIF
	LDA LZ.EDG
	IFGT			;?HAVE AN EDG TO DETECT?
	DEC LZ.EDG
	STA LZ.ON		;TURN ON LAZARS TOO
	LDD VG.RSX		;16 BIT REAL SITE VALUE, FOR LAZAR
	STD LZ.RSX
	LDD VG.RSY
	STD LZ.RSY
	LDD VG.CX		;10 BIT CURRENT SITE VALUE, FOR LAZAR
	STD LZ.CX
	LDD VG.CY
	STD LZ.CY
	ENDIF
	CLI			;***REALLOW INTERFERENCE
				;---
	LDA LZ.EDG
	CMPA #8-1		;CHEAP DETECT OF EVERY EDGE
	IFEQ
				;
	LDA Q.FRC
	IFEQ			;?WAS TRYING TO USE THE FORCE?
	DEC Q.FRC		;THEN NO MORE USING THE FORCE
	ENDIF
				;
	JSR AUDXL		;START XWING LASAR
	ENDIF
				;---
	LDA #0FF		;SETUP FOR COLLISION, NONE YET
	STA CL.ADS		;ALIEN DISTANCE NEGATIVE (NONE YET)
	STA CL.BDS		;BUNKER
	STA CL.GDS		;GUN
	STA CL.TDS		;TOWER
				;---
	RTS
				;===
	.PAGG
	.SBTTL	VWLAZ:: VIEW LAZARS

	TEMP DX,2,DY,2
VWLAZ::				;VIEW ANY LASARS
	LDA LZ.ON
	ORA LZ.HIT		;?OR HIT IN PROGRESS?
	BNE 5$			;B ?LAZARS OFF?
	RTS
5$:				;---ELSE DO THEM
	LDA LZ.ALT
	ANDA #01		;FIRE SWITCH EDGE?
	IFNE			;YES, FIRE LEFT LAZARS
				;VIEW UPPER LEFT LAZAR
	LDD #VGOFFY+0.		;Y COORD FOR START UPPER LAZAR
	ADDD LZ.GY		;	GUNS SHIFT AROUND
	ANDA #01F		;OPCODE
	STD (Y)++
				;
	LDD LZ.CY
	SUBD #0.
	SUBD LZ.GY
	STD TMPDY		;DELTA LEFT TO DRAW
				;
	LDD #VGLIML+90.		;X COORD FOR START LEFT LAZAR
	ADDD LZ.GX
	ANDA #01F		;NO BRITE
	STD (Y)++
				;
	LDD LZ.CX		;VG, 10BIT CURRENT SITE POSITION
	SUBD #VGLIML+90.
	SUBD LZ.GX
	STD TMPDX		;DELTA LEFT TO DRAW
				;
	LDB #0			;OFFSET INTO COLORS(POM-POM GUN)
	JSR LAZVW
				;---
				;VIEW LOWER LEFT LAZAR
	LDD #VGLIMB+35.		;Y COORD FOR START LOWER LAZAR
	ADDD LZ.GY		;	GUNS SHIFT AROUND
	ANDA #01F		;OPCODE
	STD (Y)++
				;
	LDD LZ.CY
	SUBD #<VGLIMB-VGOFFY>+35.
	SUBD LZ.GY
	STD TMPDY		;DELTA LEFT TO DRAW
				;
	LDD #VGLIML+85.		;X COORD FOR START LEFT LAZAR
	ADDD LZ.GX
	ANDA #01F		;NO BRITE
	STD (Y)++
				;
	LDD LZ.CX		;VG, 10BIT CURRENT SITE POSITION
	SUBD #VGLIML+85.
	SUBD LZ.GX
	STD TMPDX		;DELTA LEFT TO DRAW
				;
	LDB #8.			;OFFSET INTO COLORS(POM-POM GUN)
	JSR LAZVW
	ENDIF
				;---
	LDA LZ.ALT
	ANDA #01		;FIRE SWITCH EDGE?
	IFEQ			;YES, SHOOT THEM WITH THE RIGHT SIDE
				;VIEW LOWER RIGHT LAZAR
	LDD #VGLIMB+35.		;Y COORD FOR START LOWER LAZAR
	ADDD LZ.GY		;	GUNS SHIFT AROUND
	ANDA #01F		;OPCODE
	STD (Y)++
				;
	LDD LZ.CY
	SUBD #<VGLIMB-VGOFFY>+35.
	SUBD LZ.GY
	STD TMPDY		;DELTA LEFT TO DRAW
				;
	LDD #VGLIMR-85.		;X COORD FOR START RIGHT LAZAR
	ADDD LZ.GX
	ANDA #01F		;NO BRITE
	STD (Y)++
				;
	LDD LZ.CX		;VG, 10BIT CURRENT SITE POSITION
	SUBD #VGLIMR-85.
	SUBD LZ.GX
	STD TMPDX		;DELTA LEFT TO DRAW
				;
	LDB #0			;OFFSET INTO COLORS(POM-POM GUN)
	JSR LAZVW
				;---
				;VIEW UPPER RIGHT LAZAR
	LDD #VGOFFY+0.		;Y COORD FOR START UPPER LAZAR
	ADDD LZ.GY		;	GUNS SHIFT AROUND
	ANDA #01F		;OPCODE
	STD (Y)++
				;
	LDD LZ.CY
	SUBD #0.
	SUBD LZ.GY
	STD TMPDY		;DELTA LEFT TO DRAW
				;
	LDD #VGLIMR-90.		;X COORD FOR START RIGHT LAZAR
	ADDD LZ.GX
	ANDA #01F		;NO BRITE
	STD (Y)++
				;
	LDD LZ.CX		;VG, 10BIT CURRENT SITE POSITION
	SUBD #VGLIMR-90.
	SUBD LZ.GX
	STD TMPDX		;DELTA LEFT TO DRAW
				;
	LDB #8.			;OFFSET INTO COLORS(POM-POM GUN)
	JSR LAZVW
	
	ENDIF
				;---
	RTS
				;===

LAZVW:				;---VECTOR TO LAZAR SITE AND DISPLAY
	LDU #TLZFR		;FULL FIRE COLORS
	LEAU B(U)		;ADD OFFSET TO COLORS
	LDA LZ.HIT
	IFGT			;?HIT SOMETHING IMPORTANT?
	LDB #3F			;SPREAD OUT HIT COUNT INTO FULL BRITE
	MUL			;RESULT BRITE IN B
	LDA #VGCTRQ*100+VGCOPC/100	;USED LAZAR GOES BRITE TO DIM
	STD (Y)++
	JMP 88$
	ENDIF			;ELSE DRAW LAZAR LINES
				;---	
	LDX #LZPNT		;FIRST ENTRY
20$:				;---
	LDD 0(U)++		;PULL THE APPROPRIATE COLOR
	STD (Y)++
				;---
	LDD TMPDY		;CURRENT DELTA TO SITE
	BMI 22$
	ADDD #1			;ROUND POSITIVE UP
22$:				;---
	ASRA
	RORB			;DIVIDE BY 2
	STD (Y)			;TEMP SAVE
	NEGD
	ADDD TMPDY		;REDUCE ORIGINAL APPROPRIATE AMOUNT
	STD TMPDY
	LDD (Y)			;GET Y PORTION AGAIN
	ANDA #01F
	STD (Y)++		;AND VECTORIZE Y
				;---
	LDD TMPDX		;CURRENT DELTA TO SITE
	BMI 26$
	ADDD #1			;ROUND POSITIVE UP
26$:				;---
	ASRA
	RORB			;DIVIDE BY 2
	STD (Y)			;TEMP SAVE
	NEGD
	ADDD TMPDX		;REDUCE ORIGINAL APPROPRIATE AMOUNT
	STD TMPDX
	LDD (Y)			;GET X PORTION AGAIN
	ORA #0E0		;DEFAULT BRITE
	STD (Y)++		;AND VECTORIZE X
				;---
	LDD TMPDX		;KEEP GOING TILL WE ARRIVE AT SITE
	ADDD #8
	BLT 20$			;RELOOP IF <-8
	SUBD #16.
	BGT 20$			;RELOOP IF DX>8
	LDD TMPDY
	ADDD #8
	BLT 20$			;RELOOP IF <-8
	SUBD #16.
	BGT 20$			;RELOOP IF DY>8
				;---
	LDD 0(U)++
	STD (Y)++		;SETUP APPROPRIATE COLOR
88$:				;---DISPLAY REST OF LAZAR LINE
	LDD TMPDY
	ANDA #01F
	STD (Y)++
	LDD TMPDX
	ORA #0E0		;BRITE
	STD (Y)++
				;---
	LDA LZ.HIT
	IFGT			;?HIT SOMETHING?
	LDD #VJLZS		;SHOW LAZAR SPLASH
	STD (Y)++
	ELSE
	IFLT			;?OR SPLASHING AGAINST SOMETHING?
	LDB SP.LOC		;X DISTANCE, USE TO SCALE
	LDA #<VGSCAL-100&0FF00>/100	;MAKE IT A SCALE INSTRUCTION
					;LARGER PLEASE
	STD (Y)++
	LDD SP.COL		;COLOR, DEPENDS ON WHAT WAS HIT
	STD (Y)++
	LDA SP.TYP		;QUADRANT DATA
	ANDA #01		;UP-RIGHT?
	IFNE			;YES
	LDD #VJSPUR
	STD (Y)++
	ENDIF
	LDA SP.TYP
	ANDA #02		;UP-LEFT?
	IFNE			;YES
	LDD #VJSPUL
	STD (Y)++
	ENDIF
	LDA SP.TYP
	ANDA #04		;DOWN-LEFT?
	IFNE			;YES
	LDD #VJSPDL
	STD (Y)++
	ENDIF
	LDA SP.TYP
	ANDA #08		;DOWN-RIGHT?
	IFNE			;YES
	LDD #VJSPDR
	STD (Y)++
	ENDIF
	ENDIF
	ENDIF
	LDD #VGSCAL		;RESTORE SCALE
	STD (Y)++
	LDD #VGCNTR		;CENTER
	STD (Y)++
				;---
	RTS
				;===

TLZFR:				;COLORS FOR LAZAR FIRE
	.IRP .A,<0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F>
	.GLOBL VJLZF'.A
	.WORD VJLZF'.A
	.ENDR
	.IRP .A,<0>		;A BIT EXTRA FOR SAFETY(MAX LENGTH SHOULD BE 8+8)
	.GLOBL VJLZF'.A
	.WORD VJLZF'.A
	.ENDR

				;===
	.PAGE
	.SBTTLE	CLBLZ -- COLLIDE WITH BASE LAZAR

	TEMP TX,2,TY,2,TZ,2

CLBLZ::				;COLLIDE WITH LAZAR, BASE STAR TRENCH
	LDA LZ.ON
	IFNE			;?LAZARS ON?
				;---
	JSR 10$
	LDD #200		;AND IN TYPICAL NON-STRUCTURED MANNER,
	STD M.DVN		;RESTORE DIVIDER
				;---
	LDD CL.GDS		;CHECK THE GUNS ALSO
	IFPL			;?GOT A GUN?
	LDA #4
	STA LZ.HIT
	JSR GNHTSG		;ALWAYS HIT A GUN SINCE NO DISTANCE CLUE
	ENDIF
				;---
	LDA PT.LZF		;PROTON TORP LAZAR FLAG
	IFGT			;?LAZAR GOT CLOSE ENUF TO FIRE PROTON TORPS?
	LDA #0FF
	STA PT.LZF		;MARK THAT PROTON TORP HAS FIRED
	JSR FRPTGN		;THEN LAUNCH DIRECT HIT PROTON TORPS
	ENDIF
				;---
	ENDIF
				;---
	RTS			;EXIT

10$:				;---
	LDD #7000		;FARTHEST FORWARD POINT
	ADDD M$TX+M.U1
	STD TMPTX
	LDD #0
	SUBD LZ.RSX		;LEFT/RIGHT
	JSR ASRD3
	ADDD LZ.RSX		;(8X-1X) FOR 7000 MAX
	ADDD M$TY+M.U1
	STD TMPTY		;LEFT/RIGHT
	LDD #0
	SUBD LZ.RSY		;UP/DOWN
	JSR ASRD3
	ADDD LZ.RSY		;(8Y-1Y) FOR 7000 MAX VALUE
	ADDD M$TZ+M.U1
	STD TMPTZ
				;---
				;*** BE SURE TO RESTORE DIVIDER UPON EXIT
	LDD #-1000		;?PASSED BOTTOM OF TRENCH?
	SUBD TMPTZ		;KEEP RESULT POSITIVE
	LBLT 50$		;
	STD M.DVN		;% OF LINE BENEATH BOTTOM
	LDD M$TZ+M.U1		;OLD TZ
	SUBD TMPTZ		;LENGTH OF LINE
	STD M.DVD		;UNSIGNED DIVIDE ONLY
	LDD TMPTY
	SUBD M$TY+M.U1		;POTENTIAL Y VALUES
	STD M.YP
	LDD TMPTX		;NEW-OLD:MAX RANGE
	SUBD M$TX+M.U1		;POTENTIAL X VALUES
	STD M.ZP		;MISNAMED--DELTA X
	LDD M.QUO		;GET THE FRACTION OF LINE
	STD M.XP		;GEN %*DY,%*DX
	LDA #M$PERS
	JSR MGOWT
	LDD TMPTY		;FARTHEST POSSIBLE NEW Y
	SUBD M.YP		;INTERSECTED NOT QUITE THAT FAR
	BMI 44$
	CMPD #400		;?WITHIN RIGHT SIDE?
	BGT 50$			;B IF OUTSIDE THEN TRY SIDES
	BRA 46$			;THEN GOT A COLLISION
44$:				;---
	CMPD #-400		;?WITHIN LEFT SIDE?
	BLT 50$			;B IF OUTSIDE THEN TRY SIDES
46$:				;---
	STD TMPTY		;Y: ACTUAL END OF LAZAR ON BOTTOM
	LDD TMPTX		;NEW-%(NEW-OLD)
	SUBD M.ZP		;MISNAMED: X OFFSET
	STD TMPTX		;COLLIDED X POSITION
	STD LZ.PNX		;X DEPTH
	LDD #-1000		;BOTTOM OF TRENCH
	STD TMPTZ
	LDA #-1			;AT LEAST HIT THE BOTTOM
	STA LZ.HIT		;
	LDA #BT0+BT1		;UPPER HALF
	STA SP.TYP
	LDA TMPTX		;RELATIVE DISTANCE AWAY
	SUBA M$TX+M.U1
	LDB #3
	MUL
	CMPD #00E0
	IFHS			;LIMIT THE SCALE
	LDB #0E0
	ENDIF
	STB SP.LOC
	LDD #VGCGRN*100+VGCOPC
	STD SP.COL
				;---
	LDA BS.PFL
	IFNE			;?EXHAUST PORT ON?
	LDA PT.LZF
	IFEQ			;?PROTON TORP STILL PRIMED?
	LDD TMPTY		;
	ADDD #200
	IFGE			;?WITHIN LEFT EDGE?
	SUBD #400
	IFLE			;?WITHIN RIGHT EDGE?
	LDD TMPTX
	SUBD BS.PLC		;GET DELTA FROM PORTHOLE LOC
	ADDD #200
	IFGE			;?ABOVE BOTTOM EDGE?
	SUBD #400
	IFLE			;?BELOW TOP EDGE?
	LDA #1
	STA PT.LZF		;SET LAZAR FIRE FLAG
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	ENDIF
				;---
	RTS			;EXIT DONE WITH BOTTOM
				;---
50$:				;---SIDE CHECK
	LDD TMPTY
	LBPL 70$		;B RIGHT SIDE
60$:				;---CHECK LEFT SIDE COLLISION
	LDD #-400		;?PASSED LEFT SIDE OF TRENCH?
	SUBD TMPTY		;KEEP RESULT POSITIVE
	LBLT 90$		;B NOT YET PASSED SIDE
	STD M.DVN		;% OF LINE BENEATH SIDE
	LDD M$TY+M.U1		;ABS(NEW-OLD:TOTAL RANGE)
	SUBD TMPTY		;LENGTH OF LINE
	STD M.DVD		;UNSIGNED DIVIDE ONLY
	LDD TMPTZ
	SUBD M$TZ+M.U1		;POTENTIAL Z VALUES
	STD M.ZP
	LDD TMPTX		;NEW-OLD:TOTAL RANGE
	SUBD M$TX+M.U1		;POTENTIAL X VALUES
	STD M.YP		;MISNAMED--DELTA X
	LDD M.QUO		;GET THE FRACTION OF LINE
	STD M.XP		;GEN %*DZ,%*DX
	LDA #M$PERS
	JSR MGOWT
	LDD TMPTZ		;FARTHEST POSSIBLE Z
	SUBD M.ZP		;INTERSECTED NOT QUITE THAT FAR
	BMI 66$
	CMPD #0			;?BENEATH TOP?
	LBGT 80$			;B IF OUTSIDE THEN STOP TRYING
	BRA 68$			;THEN GOT A COLLISION
66$:				;---
	CMPD #-1000		;?ABOVE BOTTOM?
	LBLT 80$			;B IF OUTSIDE THEN STOP TRYING
68$:				;---
	STD TMPTZ		;Z: ACTUAL END OF LAZAR ON SIDE
	ADDD #1000		;BASE IT AT ZERO
	STD LZ.PNW		;WIDTH
	LDD TMPTX
	SUBD M.YP		;MISNAMED: X OFFSET
	STD TMPTX		;COLLIDED X POSITION
	STD LZ.PNX
	LDD #-400		;LEFT SIDE OF TRENCH
	STD TMPTY		;Y POSITION
	LDA #-1			;AT LEAST HIT THE SIDES
	STA LZ.HIT		;
	LDA #BT0+BT3		;RIGHT HALF
	STA SP.TYP
	LDA TMPTX		;RELATIVE DISTANCE AWAY
	SUBA M$TX+M.U1
	LDB #3
	MUL
	CMPD #00E0
	IFHS			;LIMIT THE SCALE
	LDB #0E0
	ENDIF
	STB SP.LOC
	LDD #VGCGRN*100+VGCOPC
	STD SP.COL
	LDX #PNLW		;LEFT WALL PANELS
	JMP LZCPNW		;?COLLIDE WITH PANELS?
70$:				;---CHECK RIGHT SIDE COLLISION
	SUBD #400		;?PASSED RIGHT SIDE OF TRENCH?
	BLT 90$			;B NOT YET PASSED SIDE
	STD M.DVN		;% OF LINE BENEATH SIDE
	LDD TMPTY		;LENGTH OF LINE
	SUBD M$TY+M.U1		;OLD TY
	STD M.DVD		;UNSIGNED DIVIDE ONLY
	LDD TMPTZ
	SUBD M$TZ+M.U1		;POTENTIAL Z VALUES
	STD M.ZP
	LDD TMPTX		;NEW-OLD:TOTAL RANGE
	SUBD M$TX+M.U1		;POTENTIAL X VALUES
	STD M.YP		;MISNAMED--DELTA X
	LDD M.QUO		;GET THE FRACTION OF LINE
	STD M.XP		;GEN %*DZ,%*DX
	LDA #M$PERS
	JSR MGOWT
	LDD TMPTZ		;FARTHEST POSSIBLE Z
	SUBD M.ZP		;INTERSECTED NOT QUITE THAT FAR
	BMI 76$
	CMPD #0			;?BENEATH TOP?
	BGT 80$			;B IF OUTSIDE THEN STOP TRYING
	BRA 78$			;THEN GOT A COLLISION
76$:				;---
	CMPD #-1000		;?ABOVE BOTTOM?
	BLT 80$			;B IF OUTSIDE THEN STOP TRYING
78$:				;---
	STD TMPTZ		;Z: ACTUAL END OF LAZAR ON SIDE
	ADDD #1000		;BASE IT AT ZERO
	STD LZ.PNW		;WIDTH
	LDD TMPTX
	SUBD M.YP		;MISNAMED: X OFFSET
	STD TMPTX		;COLLIDED X POSITION
	STD LZ.PNX		;X DEPTH
	LDD #400		;RIGHT SIDE OF TRENCH
	STD TMPTY
	LDA #-1
	STA LZ.HIT		;AT LEAST HIT THE SIDES
	LDA #BT1+BT2		;LEFT HALF
	STA SP.TYP
	LDA TMPTX		;RELATIVE DISTANCE AWAY
	SUBA M$TX+M.U1
	LDB #3
	MUL
	CMPD #00E0
	IFHS			;LIMIT THE SCALE
	LDB #0E0
	ENDIF
	STB SP.LOC
	LDD #VGCGRN*100+VGCOPC
	STD SP.COL
	LDX #PNRW		;RIGHT WALL
	JMP LZCPNW		;EXIT: CHECK PANEL COLLISION
80$:				;---POTENTIAL WALL COLLISION FAILED
90$:				;---
	RTS
				;===

				;===

	TEMP MSK,1,FLG,1
				;SET LAZAR RADIUS AND DIAMETER
LZD=	80			;80 MAX DIAMETER
LZR=	LZD/2			;RADIUS IS HALF DIAMETER

				;===
LZCPNW:				;CHECK COLLIDE WITH WIDE WALL PANELS
	LDA LZ.ON
	BNE 10$			;
	RTS			;EXIT IF LAZARS NOT ON
10$:				;---
	LDB LZ.PNX
	LSRB
	LSRB
	LSRB
	ANDB #0F		;PANEL EVERY 800(16 PANELS DEEP)
	ABX			;POINT INTO PANEL FLAG RAM
	LDD LZ.PNX
	ANDA #07
	SUBD #200-LZR
	BLT 70$			;B TOO SHORT ON X
	SUBD #400+LZD
	BGT 70$			;B TOO LONG ON X
	LDA #3			;SET UP MASK
	STA TMPMSK
	LDD LZ.PNW		;CHECK FOR PROPER WIDTH
	SUBD #80-LZR		;LEAST EDGE OF FIRST PANEL
20$:				;---
	SUBD #300+LZD		;GREATER EDGE OF PANEL
	BGT 60$			;
	SUBD #0-<300+LZD>	;SIZE OF PANEL
	BLT 70$			;B MISSED
	JMP LZHPN		;J HIT A PANEL
60$:				;---
	SUBD #100-LZD		;ADVANCE TO NEXT PANEL
	LSL TMPMSK
	LSL TMPMSK		;SLIDE MASK FOR NEXT PANEL
	BNE 20$			;LOOP TILL NO LIVE PANELS
70$:				;---
	RTS
				;===

LZHPN:				;HIT A PANEL
	LDA TMPMSK
	ANDA 0(X)		;CHECK FOR TYPE OF PANEL
	IFNE			;?ALIVE?
	STA TMPFLG		;SAVEIT, IS 1,2,3 IN THE SLOT
				;---
	LDA TMPMSK
	LSLA
	ANDA TMPMSK		;GEN A TYPE 2 IN CORRECT SLOT
	CMPA TMPFLG		;CHECK AGAINST MASKED PANEL TYPE
	IFNE			;?NOT A FORCE FIELD?
	IFHI			;MUST HAVE BEEN A 1, I.E. A DECORATIVE PANEL
	LDA #4			;STICK HERE AND SHOW A HIT
	STA LZ.HIT
	LDA 0(X)
	EORA TMPFLG		;GET RID OF PANEL
	STA 0(X)		;STORED BACK

	JSR SCRPNL		;SCORE FOR A PANEL
	JSR AUDSX
	ELSE			;MUST BE A TURRET
	LDA #4			;STICK HERE AND SHOW A HIT
	STA LZ.HIT
	LDA 0(X)
	EORA TMPFLG		;GET RID OF PANEL
	STA 0(X)		;STORED BACK

	JSR SCRTRT		;KILLED A TURRET
	JSR AUDSX
	ENDIF
	ENDIF
	ENDIF
	RTS
				;===
	.PAGG
	.SBTTLE	CLGLZ -- COLLIDE WITH GROUND LAZAR

CLGLZ::
	LDA LZ.ON
	IFNE			;?ARE LAZARS ON?
	LDD CL.GDS		;CHECK THE GUNS FIRST
	IFPL			;?GOT A GUN?
	LDA #4
	STA LZ.HIT
	JSR GNHTSG		;ALWAYS HIT A GUN SINCE NO DISTANCE QUEUE
	ENDIF
	BRA CLGA		;THEN CHECK FOR ALIENS NEXT
	ENDIF
	RTS
				;---
CLGA:
	LDD CL.ADS
	BMI CLGB
	CMPD CL.BDS
	BHI CLGB
	SUBD CL.TDS
	BHI CLGT
	LDA #4
	STA LZ.HIT
	JMP CPHTSA
				;---
CLGB:				;BUNKER TEST
	LDD CL.BDS
	BMI CLGT
	SUBD CL.TDS
	BHI CLGT
	LDA #4
	STA LZ.HIT
	JMP GDHTGB
				;---
CLGT:
	LDD CL.TDS
	IFPL			;?VALID TOWER?
	LDA #-1			;NO HIT, BUT SPLASH AGAINST WALL
	STA LZ.HIT
	LDA #BT0+BT1+BT2+BT3	;FULL SURFACE
	STA SP.TYP
	LDA CL.TDS		;RELATIVE DISTANCE AWAY
	LDB #3			;2 FOR PRE SUB2 AND 1 FOR SMALL LINEAR TOWERS
	MUL
	CMPD #00E0
	IFHS			;LIMIT THE SCALE
	LDB #0E0
	ENDIF
	STB SP.LOC
	LDD #VGCYLW*100+VGCOPC
	STD SP.COL
	ENDIF
	RTS
				;===
	.PAGG
	.SBTTLE	CLSLZ -- COLLIDE WITH SPACE LASAR

CLSLZ::
	LDA LZ.ON
	IFNE			;?ARE LAZARS ON?
	LDD CL.GDS		;CHECK ALIEN GUNS FIRST
	IFPL			;?VALID GUN POSSIBILITY?
	SUBD CL.ADS		;CHECK AGAINST ALIEN DISTANCE
	BLO HTSG		;B IF CLOSER, THEN HIT THE GUN
	BRA HTSA		;J ELSE VALID ALIEN IS CLOSER
	ENDIF
	LDA CL.ADS		;IF NO GUN, CHECK ALIEN
	BGE HTSA		;B IF ALIEN VALID, HIT HIM
	ENDIF
				;---
	RTS
				;===

HTSG:				;SPACE LAZAR HIT ALIEN GUN
	LDA #4
	STA LZ.HIT		;DISPLAY HIT FOR A WHILE
	JMP GNHTSG		;GUNS, HIT SPACE GUN
				;===

HTSA:				;SPACE LAZAR HIT ALIEN SHIP
	LDA #4
	STA LZ.HIT		;DISPLAY HIT FOR A WHILE
	JMP CPHTSA		;CPU, HIT SPACE ALIEN
				;===

	HLL69F
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     