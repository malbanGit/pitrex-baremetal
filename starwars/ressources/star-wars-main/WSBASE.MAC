	.TITLE	WSBASE	BASE STAR(DEATH STAR FRAMEWORK)
	.INCLUDE	WSCOMN	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<
				;===
				;---
M$AX	==-10+0
M$AY	==-10+0+2
M$AZ	==-10+0+0+4

M$BX	==-10+0+8
M$BY	==-10+0+8+2
M$BZ	==-10+0+8+4

M$CX	==-10+0+10
M$CY	==-10+0+10+2
M$CZ	==-10+0+10+4

M$TX	==-10+18+0
M$TY	==-10+18+2
M$TZ	==-10+18+4

M$VX	==-10+6
M$VY	==-10+6+8
M$VZ	==-10+6+10

				;===
				;D-PAGE RAM
	.GLOBB BJ.CX
	.GLOBB BJ.CY
	.GLOBB BS.EFL,BS.ELC,BS.PFL,BS.PLC
	.GLOBB BS.DSP,BS.FLG,BS.PRB
	.GLOBB BJ.ID
	.GLOBB FRAME
	.GLOBB PT.LIV,PT.LZF
				;---
				;RAM
	.GLOBL BS.WAV
	.GLOBL PANEL
	.GLOBL PANELZ
	.GLOBL PNLW,PNRW
	.GLOBL PI.NRW,PI.FRW,PI.CRW
	.GLOBL Q.FRC
	.GLOBL RPIE,RPIEZ,RPIE$Q
	.GLOBL WG.FCU,WG.FCD
	.GLOBL WG.NRP,WG.NRL,WG.FRP,WG.FRL,WG.FTL,WG.CRP,WG.CRL
	.GLOBL WV.HRD
				;---
				;OUTSIDE ROUTINES
	.GLOBL BJCNTR
	.GLOBL BJGROT,BJBCLP,BJGPNT,BJGDRW
	.GLOBL BJLNV
	.GLOBL BJLNB
	.GLOBL FRPLGN,FRPRGN
	.GLOBL MGOWT
	.GLOBL SCRFRC
	.GLOBL TD$PORT
	.GLOBL VWPANEL
				;---
				;MATH BOX
	.GLOBL M$PSB2
	.GLOBL M$X0BC
	.GLOBL M.BIC
	.GLOBL M.GD,M$GDBC,M.GDCT,M.GDSC
	.GLOBL M.DVD
	.GLOBL M.S1
	.GLOBL M.U1
	.GLOBL M.XP
	.GLOBL M.X0
	.GLOBL M.YP
	.GLOBL M.Y0
	.GLOBL M.Z0
				;---
				;VECTOR GENERATOR
	.GLOBL VGCNTR
	.GLOBL VGCGRN,VGCOPC
	.GLOBL VGOFFY
	.GLOBL VGSCAL
	.GLOBL VJFLS
				;---
				;HARDWARE
	.GLOBL P.RND1
				;---
				;SHIFT ROUTINES
				;===

	.MACRO .PAGG		;GLOBAL PAGE NUMBERS
	.PAGEG B		;BASE STAR TRENCH
	.ENDM

	.CSECT BASE

	.PAGG
	.SBTTLE BASE PIE AND WEDGE TABLES

PI$WDG	=0			;POINTER TO WEDGE
PI$IZ	=2			;SIZE

WG$TYP	=0			;WEDGE TYPE
WG$PNL	=1			;PANEL LEFT DESCRIPTOR
WG$PNR	=2			;PANEL RIGHT DESCRIPTOR
WG$IZ	=3			;SIZE

TYP$SHORT=1			;SHORT WEDGE
TYP$LONG=2			;LONG WEDGE
TYP$END	=3			;END OF TRENCH
TYP$PORT=4			;EXHAUST PORT
TYP$NXT	=5			;GET NEXT WEDGE FROM PIE

	.PAGG
	.SBTTL	PIES    TRENCH SEQUENCES

.MACRO	.PIE	.A,.B,.C,.D,.E,.F,.G,.H,.I,.J,.K
	.IIF NB,.K,.ERROR ;TOO MANY ARGS
	.IRP	.1,<.A .B .C .D .E .F .G .H .I .J>
	.WORD TWDG'.1
	.ENDR
	.ENDM

PIE1:					;MOSTLY GUNS.
	.PIE 10,95,54,95,04,95,42,95
	.PIE 41,95,53,95,43,95,42,98

PIE2:					;TOP AND BOOTOM EXTREMES ONLY
	.PIE 10,95,04,93,07,93,31,95
	.PIE 21,95,22,95,41,94,07,98

PIE3:					;SMOOTH FLYING WITH GOOD VISIBILITY
	.PIE 10,95,02,93,08,95,28,96
	.PIE 27,92,31,93,12,94,53,99

PIE4:					;ROLLERS -- FULL UP-DOWN FLYING REQUIRED
	.PIE 10,95,05,93,17,97,14,94
	.PIE 34,94,44,93,17,97,14,99

PIE5:					;SINGLE CITY
	.PIE 10,95,44,93,33,94,27,92
	.PIE 28,96,12,94,11,94,01,99

PIE6:					;ROLLERS -- FULL UP-DOWN FLYING REQUIRED
	.PIE 10,95,05,93,33,94,23,93
	.PIE 34,94,14,94,31,93,17,99

PIE7:					;LOTS OF HALVES
	.PIE 10,95,26,97,09,96,19,93
	.PIE 23,93,32,92,45,93,13,29

PIE8:					;LOTS OF ROLLERS
	.PIE 10,95,03,94,37,96,06,96
	.PIE 25,94,16,94,20,94,18,29

PIE9:					;JOGS AND SLANTS
	.PIE 10,95,15,97,24,97,30,97
	.PIE 36,96,55,97,37,97,43,29

PIE10:					;EASY ROLLERS-JOGS-HARD ROLLERS
	.PIE 10,95,05,93,17,97,24,97
	.PIE 55,97,06,96,37,97,36,29

PIE11:					;NASTY MIXED-UP FLYING
	.PIE 10,95,15,97,24,97,35,93
	.PIE 16,94,20,94,18,92,06,29

PIEXX:					;RANDOM
RPIE$Q	==16.				;MUST MATCH RAM SIZE OF 16 ENTRIES
	.PIE 10,95,XX,94,XX,97,XX,94
	.PIE XX,97,XX,94,XX,97,XX,29
;
; *****  CHOOSE XX'S FROM TABLE BELOW
TWDGXX:
	.PIE 03,06,09,15,14,16,18,20
	.PIE 24,25,26,30,32,35,36,37
	.PIE 55
TWDGXZ:
					;===

TPIE:			;TABLE FULL OF PIES ( THIS SURE MAKES ME HUNGRY! )
	.WORD PIE1,PIE2,PIE3,PIE4,PIE5
	.WORD PIE6,PIE7,PIE8,PIE9,PIE10
	.WORD PIE11
TPIEZ:
	.PAGG
	.SBTTL	WEDGES  ---  PIECES OF PIE
.MACRO	LONG	.A1,.A2,.A3,.A4,.B1,.B2,.B3,.B4
	.BYTE TYP$LONG
	.BYTE	.A1*4+.A2*4+.A3*4+.A4
	.BYTE	.B1*4+.B2*4+.B3*4+.B4
.ENDM

.MACRO	SHORT	.A1,.A2,.A3,.A4,.B1,.B2,.B3,.B4
	.BYTE TYP$SHORT
	.BYTE	.A1*4+.A2*4+.A3*4+.A4
	.BYTE	.B1*4+.B2*4+.B3*4+.B4
.ENDM

.MACRO	PORT	.A1,.A2,.A3,.A4,.B1,.B2,.B3,.B4
	.BYTE TYP$PORT
	.BYTE	.A1*4+.A2*4+.A3*4+.A4
	.BYTE	.B1*4+.B2*4+.B3*4+.B4
.ENDM

.MACRO	NEXT
	.BYTE TYP$NXT
.ENDM

.MACRO	END
	.BYTE TYP$END
.ENDM
				;===

TWDG01:				;8 GUNS - 7 SINGLES ACROSS - EASY TO MEDIUM FLYING
	SHORT	0,0,2,0	0,0,2,0
	LONG	0,0,0,0	0,0,0,3
	LONG	0,2,0,0 0,2,0,0
	SHORT	0,0,0,3 0,3,0,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,0,0,0 2,0,3,0
	LONG	0,3,2,0 0,0,2,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,3,2 3,0,0,2
	SHORT	3,0,0,0 0,0,0,0
	LONG	2,0,0,0 2,0,0,0
	NEXT
				;===

TWDG02:				;8 GUNS - 4 SINGLES ACROSS - EASY FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	0,3,2,0 0,0,2,0
	LONG	0,0,0,3 0,0,0,3
	LONG	2,0,0,0 2,3,0,0
	LONG	0,0,3,0 0,0,3,0
	LONG	3,0,0,2 3,0,0,2
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,2,0 0,0,2,0
	NEXT
				;===

TWDG03:				;8 GUNS - SEMI-ROLLER COASTER - HARD FLYING
	SHORT	0,0,0,0	0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	SHORT	0,0,0,3 0,0,0,3
	SHORT	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,3,2,0 0,3,2,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	3,0,0,0 3,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,3,2 0,0,3,2
	SHORT	0,0,2,0 0,0,2,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,2,0 0,0,2,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	2,0,0,0 2,0,0,0
	NEXT
				;===

TWDG04:				;8 GUNS ALL LEVELS L & R - EASY FLYING
	LONG	0,0,0,0 0,3,0,0
	LONG	0,0,3,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,3
	LONG	3,0,0,0 0,0,0,0
	LONG	0,0,0,0 3,0,0,0
	LONG	0,0,0,3 0,0,0,0
	LONG	0,0,0,0 0,0,3,0
	LONG	0,3,0,0 0,0,0,0
	NEXT
				;===

TWDG05:				;8 GUNS - EASY ROLLER COASTER - MEDIUM FLYING
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,2,0,0 2,2,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,3 0,0,0,3
	LONG	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	3,0,0,0 3,0,0,0
	LONG	2,2,0,0 2,2,0,0
	SHORT	0,0,0,3 0,0,0,3
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,3,2,2 0,3,2,2
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG06:				;0 GUNS - TIGHT ROLLER COASTER - HARD FLYING
	SHORT	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG07:				;8 GUNS - 8 SINGLES TOP AND BOTTOM - EASY FLYING
	LONG	2,0,0,0 2,0,0,0
	LONG	2,0,3,0 2,0,0,3
	LONG	2,3,0,0 2,0,0,0
	LONG	2,0,0,0 2,3,0,0
	LONG	0,0,0,2 0,0,0,2
	LONG	0,3,0,2 0,0,3,2
	LONG	0,0,3,2 3,0,0,2
	LONG	0,0,0,2 0,0,0,2
	NEXT
				;===

TWDG08:				;6 GUNS - 8 SINGLES BOTTOM TO TOP - EASY TO MEDIUM FLYING
	LONG	0,0,0,2 0,0,0,2
	LONG	0,3,0,2 0,3,0,2
	LONG	0,0,0,2 0,0,0,2
	LONG	3,0,2,0 3,0,2,0
	LONG	0,0,2,0 0,0,2,0
	LONG	0,0,2,0 0,0,2,0
	LONG	3,2,0,0 3,2,0,0
	LONG	0,2,0,0 0,2,0,0
	NEXT
				;===

TWDG09:				;6 GUNS - 24 HALVES - MEDIUM TO HARD FLYING
	SHORT	0,2,0,2 2,0,2,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,0,2,0 0,2,0,2
	SHORT	0,3,0,3 3,0,3,0
	SHORT	2,2,0,0 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,2,2 2,2,0,0
	SHORT	3,0,0,0 0,0,0,3
	LONG	0,2,2,0 2,0,0,2
	LONG	0,0,0,0 0,0,0,0
	LONG	2,0,2,0 0,2,2,0
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG10:				;8 GUNS - 24 PANELS -- INTRO WEDGE - EASY FLYING
	LONG	1,0,0,1 1,0,0,1
	LONG	1,0,0,1 1,0,0,1
	LONG	0,1,1,0 0,1,1,0
	LONG	0,1,1,0 0,1,1,0
	LONG	1,0,0,1 1,0,0,1
	LONG	1,0,0,1 1,0,0,1
	SHORT	0,3,3,0 0,3,3,0
	SHORT	3,0,0,3 3,0,0,3
	NEXT
				;===

TWDG11:				;8 GUNS - 5 SINGLES ACROSS - EASY TO MEDIUM FLYING
	LONG	2,0,0,0 2,0,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,2,0 0,0,2,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	3,2,0,0 3,2,0,0
	LONG	0,0,0,3 0,0,0,3
	LONG	0,0,3,2 0,0,3,2
	LONG	2,3,0,0 2,3,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG12:				;8 GUNS - 3 DOUBLES ACROSS - EASY TO MEDIUM FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,2,2 0,0,2,2
	LONG	0,3,0,0 0,3,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,2,2,3 0,2,2,3
	LONG	0,0,0,0 0,0,0,0
	LONG	3,0,0,0 3,0,0,0
	LONG	2,2,3,0 2,2,3,0
	NEXT
				;===

TWDG13:				;8 GUNS - 8 ALTERNATING HALVES ON BOTTOM - EASY FLYING
	LONG	0,0,0,3 0,0,0,3
	LONG	0,0,0,2 0,0,0,0
	SHORT	3,0,0,0 0,0,0,2
	LONG	0,0,0,2 0,3,0,0
	SHORT	0,3,0,0 0,0,0,2
	LONG	0,0,0,2 0,0,3,0
	SHORT	0,0,3,0 0,0,0,2
	LONG	0,0,0,2 3,0,0,0
	SHORT	0,0,0,0 0,0,0,2
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG14:				;8 GUNS - 4 SINGLES ACROSS - 1 TRIPLE - MEDIUM FLYING
	SHORT	0,0,0,2 0,0,0,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,2 0,0,0,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	3,3,0,2 3,3,0,2
	SHORT	0,0,3,0 0,0,3,0
	SHORT	0,0,0,2 0,0,0,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,0 2,2,2,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,0,3 0,0,0,3
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG15:				;3 GUNS - 4 TRIPLES - 4 HALVES -- QUICK SLANT - HARD FLYING
	LONG	0,2,2,2 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,2,2,2 2,2,2,0
	LONG	0,0,0,0 0,0,0,3
	LONG	0,0,0,0 0,0,3,0
	LONG	0,0,0,0 0,0,0,3
	LONG	2,2,2,2 2,2,2,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,2,2,2 2,2,2,2
	NEXT
				;===

TWDG16:				;8 GUNS - 6 DOUBLES - TIGHT HUMP, SEMI-ROLLER - HARD FLYING
	LONG	0,0,3,0 0,0,3,0
	LONG	0,0,0,3 0,0,0,3
	LONG	2,2,0,0 2,2,0,0
	SHORT	0,0,0,3 0,0,0,3
	SHORT	0,0,2,2 0,0,2,2
	SHORT	0,2,2,0 0,2,2,0
	SHORT	0,0,2,2 0,0,2,2
	LONG	2,2,0,0 2,2,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	2,2,0,3 2,2,0,3
	NEXT
				;===

TWDG17:				;0 GUNS - 4 TRIPLES - MEDIUM FLYING
	LONG	2,2,2,0 2,2,2,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,2,2,2 0,2,2,2
	LONG	0,0,0,0 0,0,0,0
	LONG	2,2,2,0 2,2,2,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,2,2,2 0,2,2,2
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG18:				;4 GUNS - 6 SINGLES, 1 DOUBLE, 8 HALVES, 2 TRIPLES - HARD FLYING
	LONG	2,0,2,0 2,0,2,0
	SHORT	0,2,0,2 0,2,0,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	3,0,3,0 3,0,3,0
	LONG	2,0,0,2 2,0,0,2
	SHORT	0,2,2,0 0,2,2,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,2,2,0 2,2,2,0
	SHORT	0,2,2,2 0,2,2,2
	NEXT
				;===

TWDG19:				;8 GUNS - 16 HALVES, 1 DOUBLE, 2 SINGLES - MEDIUM FLYING
	SHORT	0,0,2,2 2,2,0,0
	SHORT	3,0,0,0 0,0,3,0
	SHORT	2,2,0,0 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,2,2,0 0,0,0,0
	SHORT	0,0,0,3 3,0,0,0
	SHORT	0,2,2,0 0,2,2,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,0,0,0 2,0,0,0
	SHORT	0,3,0,0 0,0,0,3
	SHORT	0,0,0,2 0,0,0,2
	SHORT	0,0,3,0 0,0,0,0
	SHORT	0,2,2,0 0,0,0,0
	SHORT	0,0,0,0 0,3,0,0
	SHORT	2,0,0,2 0,2,2,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG20:				;10 GUNS - 2 TRIPLES, 8 SINGLES - HARD FLYING
	SHORT	2,0,0,0 2,0,0,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	0,0,2,0 0,0,2,0
	SHORT	0,3,0,0 0,0,3,0
	SHORT	0,2,2,2 0,2,2,2
	SHORT	3,0,0,0 3,0,0,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	3,0,0,0 3,0,0,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	3,0,0,0 3,0,0,0
	SHORT	2,2,2,0 2,2,2,0
	SHORT	0,0,2,0 0,0,2,0
	SHORT	0,0,0,3 0,0,0,3
	SHORT	0,0,2,0 0,0,2,0
	NEXT
				;===

TWDG21:				;8 GUNS - 6 SINGLES ACROSS - EASY TO MEDIUM FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,0,2 0,0,0,2
	LONG	0,0,0,0 0,0,0,0
	SHORT	2,0,0,2 2,0,0,2
	SHORT	0,3,3,0 0,3,3,0
	SHORT	0,3,3,0 0,3,3,0
	SHORT	2,0,0,2 2,0,0,2
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,0,2 0,0,0,2
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG22:				;8 GUNS - 10 SINGLES ACROSS TOP AND BOTTOM - EASY TO MEDIUM FLYING
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,0,3,0 2,0,3,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,3,0,0 2,3,0,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,0,3,0 2,0,3,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,3,0,0 2,3,0,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,0,0,0 2,0,0,0
	NEXT
				;===

TWDG23:				;12 GUNS - 6 SINGLES - 1 DOUBLE -- LONG DOWN-UP - MEDIUM FLYING
	LONG	0,0,2,2 0,0,2,2
	LONG	2,3,0,0 2,3,0,0
	LONG	0,2,3,0 0,2,3,0
	LONG	0,0,2,3 0,0,2,3
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,3,2 0,0,3,2
	LONG	0,3,2,0 0,3,2,0
	LONG	3,2,0,0 3,2,0,0
	NEXT
				;===

TWDG24:				;0 GUNS - 32 HALVES -- R AND L JOGS - HARD FLYING
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG25:				;8 GUNS - 6 SINGLES - 3 DOUBLES -- DOWN HUMP DOWN - HARD FLYING
	SHORT	2,3,0,0 2,3,0,0
	SHORT	0,2,3,0 0,2,3,0
	SHORT	0,0,2,0 0,0,2,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,2,2 0,0,2,2
	LONG	2,2,0,0 2,2,0,0
	LONG	0,0,2,2 0,0,2,2
	LONG	0,0,0,0 0,0,0,0
	SHORT	2,3,0,0 2,3,0,0
	SHORT	0,2,3,0 0,2,3,0
	SHORT	0,0,2,0 0,0,2,0
	NEXT
				;===

TWDG26:				;0 GUNS - 3 DOUBLES - 20 HALVES -- HALVES UP DOWN HALVES - HARD FLYING
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,2,2,2 0,0,0,0
	SHORT	0,0,2,2 0,0,2,2
	LONG	0,0,0,0 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	LONG	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG27:				;4 GUNS - 6 SINGLES BOTTOM TO TOP - EASY TO MEDIUM FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	0,3,0,2 0,0,3,2
	LONG	0,0,0,2 0,0,0,2
	LONG	0,0,2,0 0,0,2,0
	LONG	3,0,2,0 3,0,2,0
	LONG	0,2,0,0 0,2,0,0
	LONG	0,2,0,0 0,2,0,0
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG28:				;6 GUNS - 6 SINGLES TOP TO BOTTOM - EASY TO MEDIUM FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	2,0,3,0 2,0,3,0
	LONG	2,0,0,0 2,0,0,0
	LONG	0,2,0,3 0,2,0,3
	LONG	0,2,0,0 0,2,0,0
	LONG	0,0,2,0 0,0,2,0
	LONG	0,0,2,3 0,0,2,3
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG29:				;16 GUNS - HARDER PORT - PROTECT YOURSELF
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,2,2,2 0,2,2,2
	SHORT	0,2,0,0 0,2,0,0
	LONG	3,0,0,0 3,0,0,0
	LONG	0,3,0,0 0,3,0,0
	LONG	3,0,3,0 3,0,3,0
	LONG	0,3,0,3 0,3,0,3
	SHORT	0,0,3,0 0,0,3,0
	PORT	0,0,0,3 0,0,0,3
	END
				;===

TWDG30:				;2 GUNS - 26 HALVES, 1 TRIPLE, 2 DOUBLES, 1 SINGLE - HARD FLYING
	SHORT	2,2,2,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,3 2,2,2,2
	LONG	2,2,2,2 0,0,0,3
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,0,2 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	LONG	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG31:				;10 GUNS - 3 DOUBLES ACROSS BOTTOM - MEDIUM FLYING
	SHORT	0,0,0,0 0,0,0,0
	SHORT	3,0,0,0 0,3,0,0
	LONG	0,0,2,2 0,0,2,2
	SHORT	0,3,0,0 3,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	3,0,0,0 0,3,0,0
	LONG	0,0,2,2 0,0,2,2
	SHORT	0,3,0,0 3,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	3,0,0,0 0,3,0,0
	LONG	0,0,2,2 0,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG32:				;6 GUNS - 5 SINGLES - 6 HALVES -- STAY L, THEN STAY R - MEDIUM FLYING
	SHORT	0,0,0,2 0,0,0,2
	LONG	0,3,0,0 2,0,0,0
	LONG	0,0,3,0 0,2,0,0
	LONG	3,0,0,2 0,0,2,2
	SHORT	0,0,0,2 0,0,0,2
	LONG	0,0,2,2 3,0,0,2
	LONG	0,2,0,0 0,0,3,0
	LONG	2,0,0,0 0,3,0,0
	LONG	0,0,0,2 0,0,0,2
	NEXT
				;===

TWDG33:				;10 GUNS - 10 SINGLES - MEDIUM FLYING
	SHORT	0,0,0,2 0,0,0,2
	SHORT	3,0,0,0 3,0,0,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	0,0,3,2 0,0,3,2
	SHORT	0,0,2,0 0,0,2,0
	LONG	0,0,0,0 0,0,0,0
	SHORT	0,0,0,2 0,0,0,2
	SHORT	0,2,3,0 0,2,3,0
	SHORT	2,0,0,0 2,0,0,0
	SHORT	0,0,0,2 0,0,0,2
	LONG	0,0,0,0 0,0,0,0
	SHORT	2,0,3,0 2,0,3,0
	SHORT	0,2,0,0 0,2,0,0
	SHORT	0,0,0,3 0,0,0,3
	NEXT
				;===

TWDG34:				;10 GUNS - 9 SINGLES - MEDIUM FLYING
	SHORT	0,0,0,3 0,0,0,3
	LONG	0,0,0,2 0,0,0,2
	SHORT	0,0,2,0 0,0,2,0
	LONG	2,3,0,0 2,3,0,0
	LONG	0,0,2,0 0,0,2,0
	SHORT	0,3,0,2 0,3,0,2
	LONG	3,0,2,0 3,0,2,0
	LONG	2,0,0,0 2,0,0,0
	SHORT	0,2,0,0 0,2,0,0
	LONG	0,0,2,3 0,0,2,3
	NEXT
				;===

TWDG35:				;10 GUNS - 2 SINGLES - 4 DOUBLES - 10 HALVES - HARD FLYING
	SHORT	0,0,3,2 0,0,3,2
	LONG	0,0,2,2 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	LONG	0,0,0,0 0,0,2,2
	SHORT	3,3,2,2 3,3,2,2
	LONG	0,0,2,2 0,0,0,0
	SHORT	2,2,0,0 2,2,0,0
	LONG	0,0,0,0 0,0,2,2
	SHORT	3,3,2,2 3,3,2,2
	LONG	0,0,2,2 0,0,0,0
	SHORT	0,0,0,2 0,0,0,2
	NEXT
				;===

TWDG36:				;2 GUNS - 26 HALVES, 1 TRIPLE, 2 DOUBLES, 1 SINGLE - HARD FLYING
	SHORT	2,2,2,2 0,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,3
	LONG	0,0,0,3 2,2,2,2
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 2,0,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 0,0,0,0
	LONG	0,0,0,0 2,2,2,2
	SHORT	2,2,2,2 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG37:				;0 GUNS - 4 TRIPLES, 2 DOUBLES, 2 SINGLES, 2 HALFS - HARD FLYING
	LONG	0,2,2,2 0,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,2,2,0 2,2,2,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,2,2,2 0,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,2,2,0 2,2,2,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	2,0,2,2 2,2,2,2
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,2,2,2 2,2,0,2
	NEXT
				;===
	
TWDG41:				;8 GUNS ONLY MIDDLE LEVELS - EASY FLYING
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,3,0,0 0,0,3,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,3,0 0,3,0,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,3,0,0 0,0,3,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,3,0 0,3,0,0
	NEXT
				;===

TWDG42:				;8 GUNS ALL LEVELS - EASY FLYING
	LONG	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,3,3,0 0,3,3,0
	LONG	0,0,0,0 0,0,0,0
	LONG	3,0,0,3 3,0,0,3
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG43:				;16 GUNS ALL LEVELS - EASY FLYING - MANY SHOTS
	SHORT	0,0,0,0 0,0,0,0
	SHORT	3,0,0,0 3,0,0,0
	LONG	0,3,0,0 0,3,0,0
	SHORT	0,0,3,0 0,0,3,0
	SHORT	0,0,0,3 0,0,0,3
	LONG	0,0,0,0 0,0,0,0
	SHORT	3,0,0,0 3,0,0,0
	LONG	0,3,0,0 0,3,0,0
	SHORT	0,0,3,0 0,0,3,0
	SHORT	0,0,0,3 0,0,0,3
	LONG	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG44:				;8 GUNS - 6 SINGLES, 1 DOUBLE - MEDIUM FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,0,2 0,0,0,2
	LONG	0,3,2,0 0,3,2,0
	SHORT	2,2,0,3 2,2,0,3
	SHORT	0,0,0,2 0,0,0,2
	LONG	2,0,3,0 2,0,3,0
	LONG	0,0,0,2 0,0,0,2
	LONG	0,3,2,0 0,3,2,0
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG45:				;12 GUNS - 1 SINGLE - 8 STAGGERED HALVES - MEDIUM FLYING
	SHORT	0,0,0,2 0,0,0,2
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,3,0,2 0,0,3,0
	SHORT	3,0,0,0 0,3,0,2
	LONG	0,0,0,0 0,0,0,0
	SHORT	2,0,0,3 3,2,0,3
	SHORT	0,3,0,0 0,0,0,0
	LONG	0,0,0,3 0,0,0,0
	SHORT	0,0,0,0 2,3,0,2
	SHORT	2,2,3,0 0,0,3,0
	LONG	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG53:				;16 GUNS ONLY TOP AND BOTTOM - EASY FLYING
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	SHORT	3,0,0,3 3,0,0,3
	LONG	0,0,0,0 0,0,0,0
	SHORT	3,0,0,3 3,0,0,3
	LONG	0,0,0,0 0,0,0,0
	SHORT	3,0,0,3 3,0,0,3
	LONG	0,0,0,0 0,0,0,0
	SHORT	3,0,0,3 3,0,0,3
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG54:				;8 GUNS LEFT SIDE THEN RIGHT - EASY FLYING
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	SHORT	3,0,0,3 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,3,3,0 0,0,0,0
	SHORT	0,0,0,0 3,0,0,3
	LONG	0,0,0,0 0,0,0,0
	SHORT	0,0,0,0 0,3,3,0
	LONG	0,0,0,0 0,0,0,0
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG55:				;3 GUNS - 4 SINGLES - 4 DOUBLES - 4 HALVES -- JOG R,L,R,L - HARD FLYING
	LONG	2,2,2,2 2,0,2,2
	LONG	0,0,0,0 0,0,0,0
	LONG	2,3,2,2 2,2,2,2
	LONG	0,0,0,0 0,0,0,0
	LONG	2,2,2,2 2,2,2,3
	LONG	0,0,0,0 0,0,0,0
	LONG	2,2,3,2 2,2,2,2
	LONG	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG92:				;6 GUNS - 8 PANEL DIVIDER WITH CATWALK AT TOP
	SHORT	0,1,1,0 0,1,1,0
	SHORT	2,3,3,3 2,3,3,3
	SHORT	0,1,1,0 0,1,1,0
	NEXT
				;===

TWDG93:				;0 GUNS - DIVIDER WITH ONE CATWALK AT TOP
	SHORT	0,0,0,0 0,0,0,0
	SHORT	2,1,1,1 2,1,1,1
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG94:				;0 GUNS - DIVIDER WITH ONE CATWALK AT BOTTOM
	SHORT	0,0,0,0 0,0,0,0
	SHORT	1,1,1,2 1,1,1,2
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG95:				;0 GUNS - 8 PANEL DIVIDER
	SHORT	0,0,0,0 0,0,0,0
	SHORT	1,1,1,1 1,1,1,1
	SHORT	0,0,0,0 0,0,0,0
	NEXT
				;===

TWDG96:				;6 GUNS - 8 PANEL DIVDER WITH CATWALK AT BOTTOM
	SHORT	0,1,1,0 0,1,1,0
	SHORT	3,3,3,2 3,3,3,2
	SHORT	0,1,1,0 0,1,1,0
	NEXT
				;===

TWDG97:				;8 GUNS - 8 PANELS -- HARD DIVIDER
	SHORT	0,1,1,0	0,1,1,0
	SHORT	3,3,3,3	3,3,3,3
	SHORT	0,1,1,0	0,1,1,0
	NEXT
				;===

TWDG98:				;0 GUNS - 34 PANELS -- EASY PORT
	SHORT	1,1,1,1 1,1,1,1
	SHORT	0,1,1,1 0,1,1,1
	SHORT	0,0,1,1 0,0,1,1
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,1,1 0,0,1,1
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,1,1 0,0,1,1
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,1,1 0,0,1,1
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,1 0,0,0,1
	SHORT	0,0,0,0 0,0,0,0
	SHORT	0,0,0,1 0,0,0,1
	PORT	0,0,0,0 0,0,0,0
	END
				;===

TWDG99:				;16 GUNS - 8 PANELS -- HARD PORT
	SHORT	0,0,0,0 0,0,0,0
	LONG	0,2,2,2	0,2,2,2
	SHORT	0,0,0,0	0,0,0,0
	LONG	1,0,0,0	1,0,0,0
	LONG	0,1,0,0	0,1,0,0
	LONG	0,0,1,0	0,0,1,0
	LONG	0,0,0,1	0,0,0,1
	SHORT	3,3,3,3	3,3,3,3
	PORT	3,3,3,3	3,3,3,3
	END
				;===

	.PAGG
	.SBTTL	WEDGE DESCRIPTIONS
;NUMBER        GUNS   PANELS SINGLES DOUBLES TRIPLES  HALVES	DESCRIPTION
;		(2)    (1)    (2)     (4)     (6)      (1)
;
;  01		8	0	7	0	0	0	(30)SINGLES
;  02		8	0	4	0	0	0	(24)SINGLES
;  03		8	0	7	2	0	0	(38)SINGLES AND DOUBLES ROLLER
;  04		8	0	0	0	0	0	(16)GUNS ONLY ALL LEVELS L&R
;  05		8	0	0	4	0	0	(32)DOUBLES, EASY ROLLER
;  06		0	0	0	8	0	0	(32)DOUBLES, TIGHT ROLLER
;  07		8	0	8	0	0	0	(32)4 SIN TOP, 4 SIN BOTTOM
;  08		6	0	8	0	0	0	(28)SINGLES-BOTTOM AND TOP
;  09		6	0	0	0	0	24	(36)HALVES ALL MIXED UP
;  10		8	24	0	0	0	0	(40)INTRO WEDGE
;  11		8	0	5	0	0	0	(26)SINGLES
;  12		8	0	0	3	0	0	(28)DOUBLES
;  13		8	0	0	0	0	8	(24)ALTERNATING HALVES BOT
;  14		8	0	4	0	1	0	(30)SINGLES AND TRIPLE
;  15		3	0	0	0	4	4	(34)TWO QUICK SLANTS
;  16		8	0	0	6	0	0	(40)DOUBLES, SEMI-ROLLER
;  17		0	0	0	0	4	0	(24)BIG ROLLER, 4 TRIPLES
;  18		4	0	6	1	2	8	(44)VERY MIXED
;  19		8	0	2	1	0	16	(40)VERY MIXED
;  20		10	0	8	0	2	0	(48)VERY MIXED
;  21		8	0	6	0	0	0	(28)SINGLES, TOP AND BOTTOM
;  22		8	0	10	0	0	0	(36)SINGLES, TOP AND BOTTOM
;  23		12	0	6	1	0	0	(40)SINGLES AND DOUBLE, LONG UP AND DOWN
;  24		0	0	0	0	0	32	(32)JOG LEFT/RIGHT FOUR TIMES
;  25		8	0	6	3	0	0	(40)SINGLES AND DOUBLES, DOWN-HUMP-DOWN
;  26		0	0	0	3	0	20	(32)MIXED, HALVES-UP-DOWN-HALVES
;  27		4	0	6	0	0	0	(20)SOFT RISE - SINGLES
;  28		6	0	6	0	0	0	(24)SOFT FALL - SINGLES
;  29		16	0	1	0	1	0	(40)HARDER PORT
;  30		2	0	1	2	1	26	(46)JOGS-A-LOT
;  31		10	0	0	3	0	0	(32)DOUBLES ON BOTTOM
;  32		6	0	5	0	0	6	(28)MIXED, LEFT-UP-RIGHT
;  33		10	0	10	0	0	0	(40)SINGLES
;  34		10	0	9	0	0	0	(38)SINGLES
;  35		10	0	2	4	0	10	(50)MIXED, SEMI-ROLLER
;  36		2	0	1	2	1	26	(46)JOGS-A-LOT
;  37		0	0	2	2	4	2	(38)TRIPLES! - SLANT
;  41		8	0	0	0	0	0	(16)GUNS ONLY, MIDDLE LEVEL
;  42		8	0	0	0	0	0	(16)GUNS ONLY, ALL LEVELS
;  43		16	0	0	0	0	0	(32)GUNS ONLY, ALL LEVELS
;  44		8	0	6	1	0	0	(32)SINGLES AND DOUBLE
;  45		12	0	1	0	0	8	(34)MIXED
;  53		16	0	0	0	0	0	(32)GUNS ONLY, TOP AND BOTTOM
;  54		8	0	0	0	0	0	(16)GUNS ONLY, LEFT THEN RIGHT SIDE
;  55		3	0	4	4	0	4	(34)JOG RIGHT-LEFT-RIGHT-LEFT
;  92		6	8	1	0	0	0	(22)HARD GUN DIVIDER W/ CATWALK AT TOP
;  93		0	6	1	0	0	0	(08)EASY DIVIDER W/ CATWALK AT TOP
;  94		0	6	1	0	0	0	(08)EASY DIVIDER W/ CATWALK AT BOTTOM
;  95		0	8	0	0	0	0	(08)EASY DIVIDER
;  96		6	8	1	0	0	0	(22)HARD GUN DIVIDER W/CATWALK AT BOTTOM
;  97		8	8	0	0	0	0	(24)HARD GUN DIVIDER
;  98		0	34	0	0	0	0	(34)EASY END PORT
;  99		16	8	0	0	1	0	(46)HARD END PORT
;
	
	.PAGG
	.SBTTLE	VIEW STARBASE--VWBASE,BSGNDT,BSVBOT,BSVSID,BSVSDS,BSVFAR

NWBASE::
				;---
	LDA #0			;SETUP PROTON TORP INFO
	STA PT.LZF		;NO FIRE VIA LAZAR YET
	STA PT.LIV		;PROTON TORP NOT LIVE YET
				;---
	LDX #PANEL
	LDA #0			;CLEAR OUT ALL PANELS
	BEGIN
	STA (X)+
	CMPX #PANELZ
	HSEND
				;---
	LDB BS.WAV		;WHICH TRENCH TO USE
	LSLB
	LDX #TPIE		;START OF TABLE
	ABX
	CMPX #TPIEZ		;TABLE LIMIT
	IFHS			;?PAST END OF TABLE?
	LDU #RPIE		;THEN DO RANDOM PIE
	ELSE			;ELSE USE PRE-DEFINED PIES
	LDU (X)			;START OF PIE
	ENDIF
	STU PI.NRW		;NEAR POINTER STARTS HERE
	STU PI.FRW		;FAR POINTER BEGINS HERE ALSO
	LDU 0(U)		;U-->NOW SETUP WEDGE INFO
	LDD #0
	STA WG.FCU		;START COLOR AT SAME SPOT
	STD WG.NRL		;NEAR LOC STARTS AT ZERO
	STD WG.FRL		;FAR LOC STARTS AT ZERO
	STA BS.EFL		;NO END IN SIGHT YET
	STA BS.PFL		;NO PORT IN SIGHT YET
	STU WG.NRP
	STU WG.FRP		;FAR POINTER STARTS AT BEGINNING
				;---
	JSR IWEDGE		;INIT THE WEDGE HERE
	JSR NWFAR		;GET A NEW FAR(MIN PIE SIZE IS TWO WEDGES)
				;---
	.REPT 8			;START OFF WITH SOME WEDGES DEFINED
	JSR DOFAR		;GEN NEXT FAR IF ROOM
	.ENDR
				;---
	RTS
				;===

GNBASE::			;GEN A NEW BASE PIE
	LDU #RPIE		;NEW RAM PIE
	LDX #PIEXX		;FORMAT CONTROL
	BEGIN			;LOOP INIT FOR DIVIDER PANELS
	LDD 0(X)++
	STD 0(U)++
	CMPU #RPIEZ
	HSEND
				;
	LDU #RPIE+4
	LDX #TWDGXX		;LIST OF WEDGES TO USE
	BEGIN			;FILL 'ER UP
	LDA #TWDGXZ-TWDGXX/2	;# OF ENTRIES
	LDB P.RND1
	MUL
	LSLA			;WORD ENTRIES
	LDD A(X)
	STD 0(U)		;PUT ENTRY AWAY
	LEAU 4(U)		;SKIP PAST DIVIDER PANEL
	CMPU #RPIEZ
	HSEND
				;
	RTS
				;===

DOFAR:				;UPDATE FAR INFO IF ROOM
				;PAINFUL MATH -- 8000 WRAPAROUND HANDLER
	LDA BS.EFL
	IFEQ			;?STILL IN VALID TRENCH?
	LDU WG.FRP
	LEAU WG$IZ(U)		;POINT TO POTENTIAL FUTURE WEDGE
	LDA WG$TYP(U)
	CMPA #TYP$NXT
	IFEQ			;?GOTO NEXT PIE?
	LDU PI.FRW
	LDU PI$WDG+PI$IZ(U)	;NEXT WEDGE POINTER
	ENDIF
	LDB WG$TYP(U)
	CMPB #TYP$SHORT
	IFEQ			;?SHORT WEDGE?
	LDD #800
	ELSE			;ELSE IS LONG WEDGE
	CMPB #TYP$END
	IFEQ			;?END WEDGE?
	LDD #0			;DO HIM IMMEDIATELY
	ELSE			;ALL ELSE NEEDS 1000 SPACE FOR SAFETY
	LDD #1000
	ENDIF
	ENDIF
	ADDD WG.FTL		;LOC + LENGTH GIVES NEW FUTURE POSITION
	SUBD WG.NRL		;MINUS NEAR LOC FOR DISTANCE SPREAD
	SUBD #6000
	IFLS			;?WILL ALL OF NEW WEDGES FIT INTO 8000?
	JSR NWFAR
	ENDIF
	ENDIF
				;---
	RTS
				;===

NWFAR:				;ROOM EXISTS, FIND NEW FAR
	LDU WG.FRP
				;---
	LDB WG$TYP(U)
	CMPB #TYP$SHORT
	IFEQ			;?SHORT WEDGE?
	LDD #800
	ELSE			;ELSE IS LONG WEDGE
	LDD #1000
	ENDIF
	ADDD WG.FRL
	STD WG.FRL		;NEW LOC FOR NEXT FAR WEDGE
				;---
	LEAU WG$IZ(U)
	LDB WG$TYP(U)
	CMPB #TYP$NXT
	IFEQ			;?CONTINUE TO NEXT PIE SECTION?
	LDU PI.FRW
	LEAU PI$IZ(U)
	STU PI.FRW		;GET NEXT PI SECTION
	LDU PI$WDG(U)
	ENDIF
	STU WG.FRP		;NEXT FAR WEDGE
IWEDGE:				;INIT FAR WEDGE INFO
	LDU WG.FRP
				;---
	LDB WG$TYP(U)
	CMPB #TYP$END
	IFEQ			;?END OF TRENCH?
	LDD WG.FRL		;NEW FAR LOCATION
	STD BS.ELC		; SETS END LOCATION
	LDA #0FF
	STA BS.EFL		;SET END FLAG
	RTS
	ENDIF
				;---
	LDB WG$TYP(U)
	CMPB #TYP$PORT
	IFEQ			;?GENUINE THERMAL EXHAUST PORT?
	LDD WG.FRL
	STD BS.PLC		;LOCATION OF THE PORT
	LDA #0FF
	STA BS.PFL		;SET PANEL FLAG
	LDA #0			;SETUP PROTON TORP INFO
	STA PT.LZF		;NO FIRE VIA LAZAR YET
	STA PT.LIV		;PROTON TORP NOT LIVE YET
				;
	LDA Q.FRC
	IFEQ			;?DID THE PLAYER USE THE FORCE IN THE TRENCH?
	INC Q.FRC		;MARK SUCCESS
	JSR SCRFRC		;SCORE ONE FOR ASSERTIVENESS TRAINING(FORCEFUL)
	LDU WG.FRP		;RESTORE MAJOR POINTER
	ENDIF
				;
	ENDIF
				;---
	LDB WG$TYP(U)
	CMPB #TYP$SHORT
	IFEQ			;?SHORT WEDGE?
	LDD #800
	ELSE			;ELSE IS LONG WEDGE
	LDD #1000
	ENDIF
	ADDD WG.FRL		;ADD CURRENT LOC TO CURRENT SIZE
	STD WG.FTL		;CALC FUTURE LOC	
				;---
	LDB WG.FRL		;LOC OF NEW FAR PANEL
	LSRB			;/8 TO HANDLE 800 LENGTHS
	LSRB
	LSRB
	ANDB #0F		;DEPTH ONLY SEES 8000 FORWARD
	LDX #PNLW
	LDA WG$PNL(U)
	STA B(X)		;SAVE NEW PANEL DESCRIPTORS
	LDX #PNRW		;RIGHT WALL
	LDA WG$PNR(U)
	STA B(X)
				;---
	RTS
				;===

DOBASE::			;
	LDA PT.LIV		;?NO PROTON YET?
	IFEQ			;THEN ALLOW SHOTS
	LDB WV.HRD
	CMPB #7.
	IFHI			;?MAX DIFFICULTY?
	LDB #7.
	ENDIF
	LSLB			;2 BYTE ENTRIES
	LDU #TGPROB
	LEAU B(U)		;ACCESS INTO PROBABILITY TABLE
				;---
	LDA FRAME+1
	ANDA 0(U)
	IFEQ			;?APPROPRIATE TIME INTERVAL?
	LDA 1(U)
	STA BS.PRB		;PROB FOR ANY ONE GUN TO FIRE
	JSR BSGUN		;TRY FOR A BASE GUN
	ENDIF
				;---
	ENDIF
	RTS
				;===

TGPROB:				;GUN SHOOTING PROB, TIMER MASK(0F=1 SEC)
				; PROB COMPARE (0C0 = 25%)
	.BYTE 0F,80
	.BYTE 0F,60
	.BYTE 0F,40
	.BYTE 0F,20
	.BYTE 07,60
	.BYTE 07,20
	.BYTE 03,60
	.BYTE 03,20
				;===

BSGUN:
	LDD #0F800
	ANDA M$TX+M.S1		;GET BEGINNING OF CLOSEST PANEL
	ADDA #20+4		;(DONT SHOOT IF TOO CLOSE)+(OFFSET TO CENTER)
	STD M.X0		;USE X0,Y0,Z0 FOR GUN POSITION
	BEGIN			;TEST EACH PANEL IN TURN
	LDA M.X0
	LSRA
	LSRA
	LSRA
	ANDA #0F
	STA BS.DSP
	LDD #-0200
	STD M.Z0		;START AT MID OF BOTTOM PANEL
	LDD #-380
	STD M.Y0		;GUN BARREL ON LEFT WALL
	LDX #PNLW		;PROCESS LEFT WALL PANELS
	LDB BS.DSP
	LDA B(X)
	BEGIN
	STA BS.FLG
	ANDA #0C0
	CMPA #0C0
	IFEQ			;?FOUND A LEFT PANEL BUNKER?	
	LDD M$TZ+M.S1
	SUBD M.Z0
	IFGE			;?PLAYER ABOVE BUNKER?
	SUBD #400
	IFLT			;?AND CLOSE BY?
	LDA P.RND1
	CMPA BS.PRB
	IFHS			;?PROB SAYS TO FIRE THIS ONE?
	JSR FRPLGN		;FIRE LEFT PANEL GUN
	ENDIF
	ELSE			;ELSE PLAYER IS FAR ABOVE, SHOOT LESS OFTEN
	SUBD #400
	IFLT			;?WITHIN ONE LOWER RANGE?
	LDA P.RND1
	LDB P.RND1
	MUL
	CMPA BS.PRB
	IFHS			;?PROB SAYS TO FIRE THIS ONE?
	JSR FRPLGN		;FIRE LEFT PANEL GUN
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	LDD M.Z0
	SUBD #400
	STD M.Z0
	LDA BS.FLG
	LSLA
	LSLA
	EQEND			;LOOP TILL NO MORE PANELS IN THIS SECTION
				;---
	LDD #-0200
	STD M.Z0		;START AT MID OF BOTTOM PANEL
	LDD #380
	STD M.Y0		;GUN BARREL ON RIGHT WALL
	LDX #PNRW		;PROCESS RIGHT WALL PANELS
	LDB BS.DSP
	LDA B(X)
	BEGIN
	STA BS.FLG
	ANDA #0C0
	CMPA #0C0
	IFEQ			;?FOUND A RIGHT PANEL BUNKER?	
	LDD M$TZ+M.S1
	SUBD M.Z0
	IFGE			;?PLAYER ABOVE BUNKER?
	SUBD #400
	IFLT			;?AND CLOSE BY?
	LDA P.RND1
	CMPA BS.PRB
	IFHS			;?PROB SAYS TO FIRE THIS ONE?
	JSR FRPRGN		;FIRE RIGHT PANEL GUN
	ENDIF
	ELSE			;ELSE PLAYER IS FAR ABOVE, SHOOT LESS OFTEN
	SUBD #400
	IFLT			;?WITHIN RANGE OF ONE LOWER?
	LDA P.RND1
	LDB P.RND1
	MUL
	CMPA BS.PRB
	IFHS			;?PROB SAYS TO FIRE THIS ONE?
	JSR FRPRGN		;FIRE RIGHT PANEL GUN
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	LDD M.Z0
	SUBD #400		;GO DOWN ONE PANEL
	STD M.Z0
	LDA BS.FLG
	LSLA
	LSLA
	EQEND			;LOOP TILL NO MORE PANELS IN THIS SECTION
				;---
	LDD M.X0
	ADDD #800		;GET NEXT PANEL
	STD M.X0
	SUBD M$TX+M.S1
	SUBD #6000		;FURTHEST AWAY FIRING BUNKER
	HSEND			;FINISH WITH LAST PANEL
				;---
	RTS
				;===

VWBASE::
				;---
	LDA M$TX+M.U1
	LSRA
	LSRA
	LSRA
	ANDA #0F		;GEN CURRENT DISP INTO PANEL BLOCKS
	CMPA WG.FCD
	IFNE			;?DIFFERENT FROM CURRENT WEDGE DISP?
	LDB WG.FCD		;PROCESS OLD WEDGE
	STA WG.FCD		;SAVE NEW WEDGE DISP
				;---
	LDX #PNLW		;CHECK LEFT WALL FIRST
	LDA B(X)
	BEGIN
	LSLA			;ONE BIT IN CARRY, OTHER IN SIGN
	IFCS			;?2 OR 3?
	IFPL			;?FORCE FIELD (MUST BE A 2)
	INC WG.FCU		;THEN UPDATE FORCE FIELD DISTANCE CUE
	BRA 30$			;J	ONE IS ENUF
	ENDIF
	ENDIF
	LSLA			;MOVE OVER SECOND BIT
	EQEND			;NEXT PANEL
				;---
	LDX #PNRW		;CHECK RIGHT WALL LAST
	LDA B(X)
	BEGIN
	LSLA			;HI BIT IN CARRY, LO BIT IN SIGN
	IFCS			;?A 2 OR 3?
	IFPL			;?FORCE FIELD IN THIS WEDGE (MUST BE A 2)?
	INC WG.FCU		;THEN UPDATE FORCE FIELD DISTANCE CUE
	BRA 30$			;J	ONE FF IS SUFFICIENT
	ENDIF
	ENDIF
	LSLA			;MOVE SECOND OF TWO BIT TYPE OUT OF BYTE
	EQEND			;NEXT PANEL
30$:				;---
	LDA #0			;CLEAR OUT OLD WALL
	LDX #PNLW
	STA B(X)
	LDX #PNRW
	STA B(X)
	ENDIF
				;---
	JSR VWPANEL
	JSR BSVBOT		;VIEW BOTTOM LINES
	JSR BSVSID		;VIEW SIDES
	JSR BSVFAR
				;---
	LDA BS.PFL
	IFNE
	JSR BSVPORT		;VIEW PORTHOLE
	ENDIF
				;---
	LDA BS.EFL
	IFNE
	JSR BSVEND		;VIEW FINAL END OF TRENCH
	ENDIF
				;---
	RTS			;*** NEED NEW STAR VIEW VIA TOP SLOT IN TRENCH
				;===

BSVBOT:				;VIEW BOTTOM OF BASE TRENCH
	LDD #0
	STD M$TX+M.U1		;KEEP VIEWER AT START OF TRENCH
	LDD #VGCGRN*100+VGCOPC-10
	STD (Y)++
	LDU #TBSBL		;BOTTOM LINE TABLE
10$:				;---
	LDA BS.EFL
	IFNE			;?END IN VIEW YET?
	LDD BS.ELC
	SUBD M$TX+M.S1
	CMPD #7000
	BHI 16$			;?LS? LESS THAN 7000 AWAY?
	ELSE			;ELSE NO END IN VIEW
16$:				;---
	LDD #7000
	ENDIF
	STD M.X0
	LDD 0(U)		;Y OFFSET
	STD M.Y0
	LDD 2(U)		;Z OFFSET
	STD M.Z0
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT		;PRESUB 2
	LDD M.XP
	STD M.DVD		;FORCED POSITIVE BY TABLE
	JSR BJCNTR		;START FROM CENTER SCREEN
	LDD #200		;CLOSEST PRESUB2 HANDLES WITH RECIPROCAL VG
	STD M.X0
				;---
	LDD M.Y0		;CLIP CLOSE LINES
	SUBD M$TY+M.S1
	IFMI
	NEGD			;ABSOLUTE VALUE
	ENDIF
	CMPD M.X0
	IFGT			;?NEED TO MATCH Y COORD?
	STD M.X0
	ENDIF
				;---
	LDD M.Z0		;NOW CLIP Z COORD
	SUBD M$TZ+M.S1
	IFMI
	NEGD			;ABSOLUTE VALUE
	ENDIF
	CMPD M.X0
	IFGT			;?NEED TO CLIP TO MATCH Z COORD?
	STD M.X0
	ENDIF
				;---
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT
				;---
	LDD M.XP
	STD M.DVD
	JSR BJLNV		;DRAW VISIBLE LINE
	LDD #VGCNTR		;RECENTER
	STD (Y)++
				;---
	LEAU 4(U)		;NEXT TABLE ENTRY
	CMPU #TBSBLZ
	LBLO 10$		;LOOP
				;---
	LDD M$TX+M.S1		;RESTORE X
	STD M$TX+M.U1
	RTS
				;===
TBSBL:				;BASE BOTTOM LINES
	.WORD -400,0		;TOP LEFT PANEL
	.WORD 400,0		;TOP OF RIGHT PANEL

	.WORD -400,-1000	;FAR LEFT BOTTOM
	.WORD -200,-1000	;LEFT THIRD
	.WORD 200,-1000		;RIGHT THIRD
	.WORD 400,-1000		;FAR RIGHT BOTTOM

TBSBLZ:
				;===

BSVFAR:				;VIEW FAR END OF BASE TRENCH
	LDD #0
	STD M$TX+M.U1		;KEEP VIEWER AT START OF TRENCH
	LDD #VGCGRN*100+VGCOPC-30
	STD (Y)++
	LDU #TBSBF		;FAR END LINE TABLE
10$:				;---
	LDA BS.EFL
	IFNE			;?END IN VIEW YET?
	LDD BS.ELC
	SUBD M$TX+M.S1
	CMPD #7000
	BHI 16$			;?LS? LESS THAN 7000 AWAY?
	ELSE			;ELSE NO END IN VIEW
16$:				;---
	LDD #7000
	ENDIF
	STD M.X0
	LDD 0(U)		;Y OFFSET
	STD M.Y0
	LDD 2(U)		;Z OFFSET
	STD M.Z0
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT		;PRESUB 2
	LDD M.XP
	STD M.DVD		;FORCED POSITIVE BY TABLE
	JSR BJCNTR		;START FROM CENTER SCREEN
	BRA 60$
20$:				;---
	LDD 0(U)
	STD M.Y0
	LDD 2(U)
	STD M.Z0
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT
	LDD M.XP
	STD M.DVD
	JSR BJLNV		;DRAW VISIBLE LINE
60$:				;---
	LEAU 4(U)		;NEXT TABLE ENTRY
	CMPU #TBSBFZ
	BLO 20$			;LOOP
				;---
	LDD #VGCNTR		;RECENTER
	STD (Y)++
	LDD M$TX+M.S1		;RESTORE X
	STD M$TX+M.U1
	RTS
				;===

TBSBF:				;FAR END LINE POINTS
	.WORD -400,0		;TOP LEFT PANEL
	.WORD -400,-1000	;FAR LEFT BOTTOM
	.WORD 400,-1000		;FAR RIGHT BOTTOM
	.WORD 400,0		;TOP OF RIGHT PANEL
TBSBFZ:
				;===

BSVSID:				;VIEW SIDE OF BASE TRENCH
	LDU WG.NRP
	LDB WG$TYP(U)
	CMPB #TYP$END
	IFEQ
	RTS
	ENDIF
				;---
	CMPB #TYP$SHORT
	IFEQ
	LDD #800
	ELSE
	LDD #1000
	ENDIF
	ADDD WG.NRL
	SUBD M$TX+M.U1
	IFMI			;?ARE WE PAST THIS WEDGE? REMEMBER WRAPAROUND
				;---
	LDB WG$TYP(U)		;UPDATE OUR LOCATION
	CMPB #TYP$SHORT
	IFEQ
	LDD #800
	ELSE
	LDD #1000
	ENDIF
	ADDD WG.NRL
	STD WG.NRL
				;---
	LEAU WG$IZ(U)		;ACCESS NEXT WEDGE
	STU WG.NRP
	LDB WG$TYP(U)
	CMPB #TYP$END
	IFEQ
	RTS			;REACHED END OF WEDGES, QUIT
	ENDIF
				;---
	LDB WG$TYP(U)
	CMPB #TYP$NXT		;?GOTO NEXT PIE?
	IFEQ
	LDU PI.NRW
	LEAU PI$IZ(U)
	STU PI.NRW	
	LDU PI$WDG(U)
	ENDIF
	STU WG.NRP
	ENDIF
				;---
	LDD #VGCGRN*100+VGCOPC-20
	STD (Y)++
				;---
	JSR DOFAR		;DO FAR WEDGE IF ROOM
				;---
	LDD PI.NRW
	STD PI.CRW
	LDD WG.NRP
	STD WG.CRP
	LDD WG.NRL
	STD WG.CRL
	STD M.X0
	LDD #-400		;LEFT SIDE
	STD M.Y0
	JSR BSVSDW		;VIEW WHOLE LEFT SIDE
				;---
	LDD PI.NRW
	STD PI.CRW
	LDD WG.NRP
	STD WG.CRP
	LDD WG.NRL
	STD WG.CRL
	STD M.X0
	LDD #400		;RIGHT SIDE
	STD M.Y0
	JSR BSVSDW
				;---
	RTS
				;===

BSVSDW:				;VIEW WHOLE OF ONE SIDE
	LDD WG.CRL
	STD M.X0
	SUBD M$TX+M.U1
	LBMI 80$		;B SKIP FIRST ONE IF PAST IT (BEWARE WRAPAROUND)
	CMPD #800
	BGE 10$			;B PROCESS FIRST ONE NORMALLY IF FAR ENUF AWAY
	LSLD			;*2 FOR GENEROUS DROP
	NEGD			;REVERSE SUBTRACT
	ADDD M$TZ+M.U1		;ALLOW >45 DEGREE DROP
	CMPD #-1000
	IFLT
	LDD #-1000		;LIMIT TO BOTTOM
	ENDIF
	STD M.Z0
	BRA 11$			;J CONTINUE WITH FIRST OBJECT
10$:				;---LOOP PER OBJECT
	LDD WG.CRL
	STD M.X0
	LDD #-1000		;BOTTOM EDGE
	STD M.Z0
11$:				;---
	LDA BS.EFL
	IFNE			;?END IN VIEW?
	LDD M.X0
	SUBD BS.ELC
	LBPL 90$		;B EXIT IF AT END OF TRENCH
	ENDIF
				;---
	LDD M.X0
	SUBD M$TX+M.S1
	SUBD #7000		;CHECK AGAINST NORMAL END TOO
	LBPL 90$		;B EXIT IF BEYOND MAX RANGE
				;---
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT		;PRESUB 2
	LDD M.YP		;CLIP THE LINE OUT
	BPL 34$
	NEGD
34$:				;---
	SUBD M.XP
	BGT 80$			;B NO GOOD IF NOT VISIBLE
				;---
	LDD M.XP
	STD M.DVD		;FORCED POSITIVE BY TABLE
	LDD #0
	STD BJ.CX		;INIT VECTOR POS TO ZERO
	LDD #-VGOFFY
	STD BJ.CY
	JSR BJLNB		;START FROM CENTER SCREEN
	LDD #0
	STD M.Z0		;TOP OF SIDE PANELS
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT
				;---
	LDD M.XP
	STD M.DVD
	JSR BJLNV		;DRAW VISIBLE LINE
	LDD #VGCNTR		;RECENTER
	STD (Y)++
80$:				;---
	LDU WG.CRP
	LDB WG$TYP(U)
	CMPB #TYP$SHORT
	IFEQ
	LDD #800
	ELSE
	LDD #1000
	ENDIF
	ADDD WG.CRL
	STD WG.CRL
	SUBD M$TX+M.U1
	BMI 90$			;B EXIT IF WRAPPED TOO FAR
	LEAU WG$IZ(U)
	LDB WG$TYP(U)
	CMPB #TYP$END
	BEQ 90$			;B EXIT IF END
	CMPB #TYP$NXT
	IFEQ
	LDU PI.CRW
	LEAU PI$IZ(U)
	STU PI.CRW
	LDU PI$WDG(U)
	ENDIF
	STU WG.CRP
	JMP 10$			;J LOOP UNTIL DONE
				;---
90$:
	RTS
				;===

BSVPORT:			;VIEW THE EXHAUST PORT
	LDB #TD$PORT		;GET A WALL PANEL FOR NOW
	STB BJ.ID
	JSR BJGROT		;ROTATE IT IN FRONT OF US
				;---
	LDD #-1000
	STD M.GD+4		;Z HITE ON BOTTOM OF TRENCH
	LDD #0
	STD M.GD+2		;Y WIDTH IN CENTER
	LDD BS.PLC
	STD M.GD+0		;X LOCATION
	LDD #M$GDBC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT
	LDD M.XP
	CMPD #-400/2
	IFLE			;?TOO FAR IN BACK?
	LDA #0
	STA BS.PFL		;TURN OFF THE PORT
	RTS			;J AND EXIT
	ENDIF
	SUBD #7000
	IFLE			;?CLOSE ENUF TO SEE?
				;---
	LDD #VJFLS
	STD M.GDCT		;SET UP BUNKERS COLOR
				;---
	LDD #VGSCAL
	STD M.GDSC		;SET UP BUNKERS SCALE
				;---
	LDD M.XP
	SUBD #1000
	IFLT			;?TOO CLOSE?
	JSR BJBCLP		;THEN PROCESS POINTS WITH CLIPPING
	ELSE
	JSR BJGPNT		;ELSE USE REGULAR
	ENDIF
	JSR BJGDRW		;DRAW THE LINES
				;---
	ENDIF

	RTS
				;===

BSVEND:				;THE VERY END OF THE TRENCH
	LDD #VGCGRN*100+VGCOPC
	STD (Y)++
	LDA BS.EFL
	IFNE			;?END IN VIEW YET?
	LDD BS.ELC
	STD M.X0
	SUBD M$TX+M.S1
	SUBD #7000
	IFPL
	NEGD			;FURTHEST AWAY IS LO, CLOSEST IS AT ZERO
	ELSE
	LDD #0
	ENDIF
	STD M.Z0
	LDD #-400		;LEFT POINT
	STD M.Y0
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT		;PRESUB 2
	LDD M.XP
	STD M.DVD		;FORCED POSITIVE BY TABLE
	JSR BJCNTR		;START FROM CENTER SCREEN
	LDD #400		;RIGHT POINT
	STD M.Y0
	LDD #M$X0BC
	STD M.BIC
	LDA #M$PSB2
	JSR MGOWT
	LDD M.XP
	STD M.DVD
	JSR BJLNV		;DRAW VISIBLE LINE
				;---
	LDD #VGCNTR		;RECENTER
	STD (Y)++
	ENDIF
	RTS
				;===
	
	HLL69F
	.END
                                                                                                                                 