	.TITLE WSGLOB	GLOBAL VARS AND EQUATES AND RAM, ETC
	.INCLUDE WSCOMN
	.ASECT
				;---
	.SBTTL	EQUATES

RAM	==DPRAM			;2K BYTES
RAMZ	==RAM+800


NVRAM	==4500			;POWER FAIL NON-VOLATILE RAM, 256.*4
NVRAMZ	==NVRAM+256.
NVRRCL	==4687			;NOVRAM RECALL LATCH, D7 HI RECALLS DATA, DATA NOT ACCESSABLE WHILE IN RECALL MODE
NSTORE	==46A0			;NOVRAM STORE, WRITE STROBE, TAKES 10 MS FOR COMPLETE STORE CYCLE

STACK	==RAMZ-1		;SYSTEM STACK
				;---
				;VECTOR GENERATOR
VGBASE	==0
VGRAM	==VGBASE			;
VGRAMZ	==VGRAM+2800			;
VGROM	==VGRAMZ
VGROMZ	==VGROM+1800
VGBFSZ	==VGROM-VGRAM/2		;SINGLE BUFFER SIZE
VGHALT	==4320			;D6 ON=> HALTED, ELSE RUNNING (HUNG?)
VGGO	==4600			;ANY WRITE RESTARTS AT VRAM
VGSTOP	==4620			;ANY WRITE SLAPS DOWN VG, UNCONTROLLED HALT
				;
VGEDGT	==600.			;HARD TOP EDGE (NEVER VISIBLE)
VGEDGB	==-612.			;HARD BOTTOM EDGE
VGEDGL	==-510.			;HARD LEFT EDGE
VGEDGR	==510.			;HARD RIGHT EDGE (NEVER VISIBLE)
VGLIMT	==408.			;TOP LIMIT FOR MATH VIEW ALWAYS VISIBLE(DMZ)
VGLIMB	==-552.			;BOTTOM LIMIT
VGLIML	==-480.			;LEFT LIMIT
VGLIMR	==480.			;RIGHT LIMIT
VGOFFY	==-104.			;OFFSET IN Y FOR MATH BOX
VGRW0	==552.			;VERY TOP LINE GUARRENTEED VISIBLE
VGRW1	==528.			;ROW 1 Y PLACEMENT, 24 HI ROWS
VGRW2	==504.
VGRW3	==480.
VGRW4	==456.
VGRW5	==432.
VGRW6	==408.			;BOTTOM OF ROW 6
VGRW7	==384.
VGRW8	==360.
VGRW9	==336.
VGRW10	==312.
VGRW11	==288.
VGRW12	==264.
VG$C	==24.			;CHARACTER SIZE, ROW HITE
VG$CW	==24.			;CHARACTER SIZE, WIDTH
VG$CV	==36.			;VERTICAL STRING, CHARACTER SPACING
				;COLORS
VGCOFF	==0			;BLACK
VGCBLU	==1			;DEEP BLUE
VGCGRN	==2			;GREEN
VGCTRQ	==3			;TURQOISE
VGCRED	==4			;RED
VGCPRP	==5			;PURPLE
VGCYLW	==6			;YELLOW
VGCWHT	==7			;WHITE
VGCOPC	==6080			;STAT COLOR OPCODE, DEFAULT BRITE
VGCOLR	==6080			;	COMPATIBILITY
VGSCAL	==7200			;SCALE OPCODE, DEFAULT SIZE FOR FAST MONITORS
VGCNTR	==8040			;DEFAULT CENTER OPCODE
VGRTSL	==0C000			;OPCODE FOR RETURN FROM VECTOR SUBROUTINE
				;---
				;INTERRUPTS
IRCLR	==4660			;ANY WRITE CLEARS IRQ

WTCHDG	==4640			;RESETS IF NOT HIT OFTEN - EVERY 8*4 IRQS
				;---
				;A TO D POT READER
R.CHN	==4380			;READ A TO D CHANNEL
W.CHN0	==46C0			;CHANNEL 0 START
W.CHN1	==46C1			;CHANNEL 1 START
W.CHN2	==46C2			;CHANNEL 2 START
W.CHN3	==46C3			;CHANNEL 3 START
				;---
R.STAS	==4401			;SND STATUS
				;D7 HI ==>MAIN HAS SENT DATA, NOT YET RECEIVED
				;D6 HI ==>SOUND HAS SENT FRESH DATA
R.RCVS	==4400			;RECEIVE BYTE FROM SOUND BOARD
W.XMTS	==4400			;TRANSMIT BYTE TO SOUND BOARD
W.RSTS	==46E0			;RESET SOUND BOARD
				;---
				;D7 LATCHED
EMCNT0	==4681			;ELECTRO-MECHANICAL COIN COUNTER,#1
EMCNT1	==4680			;DITTO FOR NUMBER 2
				;---
W.LED1	==4686			;D7=0==>ON
W.LED2	==4683			;    "
W.LED3	==4682			;    "
				;---
				;BANK SELECTOR
W.BANK	==4684			;D7=0==>ROOT, D7=1 ==> OVERLAY BANK
				;---
				;INPUTS
R.BYT0	==4300			;
IN0	==R.BYT0		;
				;D7 FIRE/START,LEFT SWITCH
				;D6 FIRE/START,RIGHT SWITCH
				;D5 SPARE 1
				;D4 SELF- TEST
				;D3 SLAM
				;D2 COIN AUX
				;D1 COIN L
				;D0 COIN R
AUXSW	==R.BYT0		;AUX COIN SWITCH
TESTSW	==R.BYT0		;TEST SWITCH DIRECT INPUT
TESTBT	==BT4			; TEST MASK BIT
AUXBIT	==BT2
				;
R.BYT1	==4320			;
IN1	==R.BYT1		;
				;D7 MATH RUN
				;D6 VGHALT
				;D5 LEFT THUMB
				;D4 RIGHT THUMB
				;D3 SPARE 2
				;D2 DIAGN
				;D1 UNUSED
				;D0 UNUSED
				;
DIAGSW	==R.BYT1
DIAGBT	==BT2
				;
R.BYT2	==4340			;OPTION BANK 1
				;
R.BYT3	==4360			;OPTION BANK 2
				;---
PROG	==06000			;PROGRAM ROM
				;---
				;PSUEDO RANDOM BYTE (USED TO BE FROM POKEY)
				;NOW FAST -- 3 MHZ, 4 CPU CYCLES PER BYTE
P.IRND	==4685			;CONTROL GENERATOR, 0 INITS,80 RUNS IT
P.RND	==4703			;RANDOM BYTE GENERATOR (3 MHZ, 24 BIT)
P.RND1	==P.RND			;RANDOM BYTE,1
P.RND2	==P.RND			;RANDOM BYTE,2
	.PAGE
	.SBTTL	MATH PROCESSOR
				;---
				;MATH PROCESSOR
MBRAM	==5000			;BASE ADDRESS
MBRAMZ	==MBRAM+1000		;END OF SHARED RAM (4K BYTES,2K WORDS,512. BLOCKS)
M.BASE	==MBRAM
M.FIN	==MBRAMZ	
				;READS
M.BUSY	==R.BYT1		;D7 SET ==> RUNNING
M.QUO	==4700
M.QUOH	==4700			;HIGH BYTE QUOTIENT
M.QUOL	==4701			;LOW BYTE QUOTIENT
				;WRITE
M.PCGO	==4700			;PROGRAM COUNTER START ADDRESS AND GO
M.BIC	==4701			;BLOCK INDEX COUNTER
M.BICH	==4701			;	HI
M.BICL	==4702			;	LO
M.DVD	==4704
M.DVDH	==4704			;DIVIDE DENOMINATOR, HI BYTE
M.DVDL	==4705			;DIVIDE DENOMINATOR, LO, AND START
M.DVN	==4706
M.DVNH	==4706			;DIVIDE NUMERATOR, HI
M.DVNL	==4707			;DIVIDE NUMERATOR, LO
				;---
				;PC ROUTINES
M$ROLL	==0			;ROLL SHIP #BIC
M$PTCH	==38/4			;PITCH SHIP #BIC
M$YAW	==70/4			;YAW SHIP #BIC
M$DLD1	==1DC/4			;DOWNLOAD S1
M$DLD2	==200/4			;DOWNLOAD S2
M$PERS	==218/4			;PERSPECTIVE MULTIPLY
M$PSUB	==0A8/4			;PRESUB 16 BIT-OVERFLOW PROBLEMS
M$CNCT	==100/4			;CONCATENATE-VIEW SHIP 2 FROM SHIP 1
M$PAD	==140/4			;POST ADD-S1 VIEWS S2'S POINTS
M$S1UN	==180/4			;CONVERT STARS FROM S1 VIEW TO UNIVERSE COORD
M$PSB2	==19C/4			;PRE SUB-CONVERTS CENTERS, 15 BIT OUTPUT
;
M$PRS2	==2B8/4			;SPECIAL PERSPECTIVE MULT FOR GROUND OBJECTS
M$PR2I	==2C0/4			;INIT FOR ABOVE
				;---

	.MACRO M.	A1,A2,A3
	.LIST BYT
	.IRP .1,<A1 A2 A3>
M.'.1'::
M.'.1'H::	.BLKB 1
M.'.1'L::	.BLKB 1
	.ENDR
	.NLIST BYT
	.ENDM

	.=MBRAM
				;---
	M.	XP,YP,ZP	;RESULT OF PRESUB, POSTADD
				;---
	M.	AX,AY,AZ	;CONCAT RESULT
	M.	BX,BY,BZ	;
	M.	CX,CY,CZ	;
				;---
	M.	XT,YT,ZT	;POSTADD INPUT (FROM SHIP Z PRESUB ONTER ROTATE)
				;---
	M.	ZRO		;CONSTANT ZERO
	M.	ONE		;CONSTANT ONE
	M.	SIN		;SIN OF ANGLE INVOLVED - YAW,PITCH,ROLL
	M.	COS		;COSINE OF ANGLE INVOLVED - YAW,PITCH,ROLL
	M.	HLF		;2000-HALF CONSTANT
				;---
M.U1==	.+10			;REMEMBER TO POINT INDEX TO CENTER OF UV
M$U1BC	==-10+M.U1-MBRAM/8
	M.	AX1,AY1,AZ1	;SHIP 1 UNIT VECTOR COEFF
	.=.+2
	M.	BX1,BY1,BZ1	;
	.=.+2
	M.	CX1,CY1,CZ1	;
	.=.+2
	M.	XT1,YT1,ZT1	;SHIP 1 UNIVERSE LOC
	.=.+2
				;---
	M.	AX2,AY2,AZ2	;SHIP 2 UNIT VECTOR COEFF
	.=.+2
	M.	BX2,BY2,BZ2	;
	.=.+2
	M.	CX2,CY2,CZ2	;
	.=.+2
	M.	XT2,YT2,ZT2	;SHIP 2 UNIVERSE LOC
	.=.+2
				;---
	M.	C40		;CONSTANT 0040
	M.	C80		;CONSTANT 0080
	M.	SCL		;SCALE FACTOR : (ZOOM) ALWAYS 4000
;	M.	XCL		;XP * SCALE : ZOOM
		.=.+2
	M.	XPS		;X PRIME SQUARED
	M.	YPS		;Y PRIME SQUARED
	M.	ZPS		;Z PRIME SQUARED
;	M.	XCS		;XP * SCALE, SQUARED : ZOOM
		.=.+2
	M.	X0,Y0,Z0	;BLOCK INPUT TO PRESUB, POSTADD
	.=.+2
M$X0BC	==M.X0-MBRAM/8		;SCRATCH BLOCK

M.	X1
	.=.
				;---
				;WARNING:
M.S1	==10+M.X1		;AIM POINTERS TO MIDDLE OF UNIT VECTORS
M$S1BC	==-10+M.S1-MBRAM/8
M.EYE	==1*20+M.S1
M$EYEBC	==-10+M.EYE-MBRAM/8
M.MUN	==1*20+M.EYE
M$MUNBC	==-10+M.MUN-MBRAM/8
M.AL	==1*20+M.MUN
M$ALBC	==-10+M.AL-MBRAM/8
M.ALZ	==4*20+M.AL
				;---END OF UNIT VECTORS
M.GN	==-10+M.ALZ
M.GNZ	==6*8+M.GN
M$GNBC	==M.GN-MBRAM/8
				;---
				;OBJECTS SPLIT BANKS, BUT ARE ON PAIR BOUNDARIES
M.OBJ	==300+MBRAM+15.&0FFF0	;OBJECT POINTS, ON PAIR BOUNDARIES
M$BJBC	==M.OBJ-MBRAM/8
				;---
				;DEFINE TOP OF MATH BOX
M.GDZ	==MBRAMZ			;MUST BE D-PAGEABLE
M.GD	==M.GDZ-200		;GROUND POINTS, 16. BYTES PER POINT, 32.POINTS
M$GDBC	==M.GD-MBRAM/8
M$GDNM	==M.GDZ-M.GD/8
M.GDFE	==M.GD-10		;FRONT END FOR FAST GROUND TRANSFORM, USES 2 BLOCKS
M.GDCT	==0+M.GD		;COLOR FOR TOP OF TOWER
M.GDCB	==2+M.GD		;COLOR FOR BASE OF TOWER
M.GDSC	==4+M.GD		;SCALE TO DRAW WITH
M.GDXS	==0C+M.GD		;FIRST SCREEN X RESULT (MUST AGREE WITH M$GDXS)

M$GDXR	==6			;ROTATED POINTS,X (+M.GDFE)
M$GDYR	==18			;ROTATED POINTS,Y (+M.GDFE)
M$GDZR	==1A			;ROTATED POINTS,Z (+M.GDFE)
M$GDXS	==1C			;FINAL SCREEN X,Y (+M.GDFE)

	.IIF NE,M.GDXS-<M$GDXS+M.GDFE>,.ERROR M.GDXS ;NOT AGREE WITH M$GDXS
				;---
				;STARS IN UPPER BANK ONLY
M$STNM	==50.			;STARS - MAX # ALLOWED
M.STAZ	==M.GDFE		;ENDS AT FRONT END OF GROUND TRANSFORMS
M.STAD	==M.STAZ-<8*M$STNM>	;STARS - ADAPTS TO SPACE LEFT, AVOID BIC=1FF
M$STBC	==M.STAD-MBRAM/8
M$STBZ	==M.STAZ-MBRAM/8	;END OF BIC
				;---
M$AX	==-10+0
M$AY	==-10+0+2
M$AZ	==-10+0+0+4

M$BX	==-10+0+8
M$BY	==-10+0+8+2
M$BZ	==-10+0+8+4

M$CX	==-10+0+10
M$CY	==-10+0+10+2
M$CZ	==-10+0+10+4

M$TX	==-10+18+0
M$TY	==-10+18+2
M$TZ	==-10+18+4

M$VX	==-10+6
M$VY	==-10+6+8
M$VZ	==-10+6+10

	.PAGE
	.SBTTL	DPAGE
	.INCLUDE DPCOIN	;SPECIAL HASSLES WITH DPAGE AND COIN ROUTINE<<<<<<<<

$LMBIT	==08			;SLAM BIT MASK
$LAM	==R.BYT0
$COINA	==R.BYT0		;PLAIN AND SIMPLE STRAIGHT SWITCH INPUTS
;;;	EMCNT0			;ELECTROMECHANICAL COIN COUNTERS
;;;	EMCNT1			;ELECTROMECHANICAL COIN COUNTERS
BADCRD	==36.			;TOO MUCH OF A GOOD THING
MAXCRD	==18.			;NORMAL LIMIT OF GENEROUS PLAYERS
				;---
GTIME::	.BLKB 3			;CURRENT GAME'S TIME
				;TOP TWO HAVE 4 SEC COUNTER, LO BYTE=4 SEC TIMER
				;TOP TWO ARE IN DECIMAL,9999 MAX SECONDS(11 HOURS)
				;WRAP-PROTECTED, STICKS AT 9999
				;---
				;INPUT
				;NEW, OLD, DEBOUNCED SWITCH
	.IRP K,<0 1 2 3>
IN.NW'K'::	.BLKB 1
IN.OL'K'::	.BLKB 1
IN.SW'K'::	.BLKB 1
	.ENDR
R.CTRL	==IN.SW0
R.FIRE	==IN.SW0
R.THMB	==IN.SW1
FIRESW	==IN.SW0		;FIRE SWITCH
STRTSW	==IN.SW0		;START SWITCH
RTHMBT	==BT4			;RIGHT THUMB BIT
LTHMBT	==BT5			;LEFT THUMB BIT
THMBT	==LTHMBT!RTHMBT		;LEFT THUMB AND RIGHT THUMB
STRTBT	==BT7!BT6!THMBT		; APPROPRIATE BITS
FIREBT	==BT7!BT6		;GUN FIRE BITS (TC)
LFIRBT	==BT7			; LEFT FIRE BIT(TC)
RFIRBT	==BT6			; RIGHT FIRE BIT(TC)
R.OPT1	==IN.SW3		;B5: 1=ON,0=OFF
R.OPT2	==IN.SW2		;D5: 1=ON,0=OFF
				;ON DRAWS POWER
				;---
				;DOPOTS--IRQ
PT.DLY::	.BLKB 1		;INITIALIZATION DELAY TIME FOR POT FILTER
PT$IZ	==2
PT.VL::
PT.VL1::.BLKB PT$IZ		;VALUE POT 0
PT.VL2::.BLKB PT$IZ		;VALUE POT 1
PT.VLZ::			;---
				;IRQ, VG CURSOR HANDLING
VG.CX::	.BLKB 2			;CURRENT VG SITE X POSITION, 10 BIT
VG.CY::	.BLKB 2			;Y POSITION
VG.LON::.BLKB 1			;FLAG FOR LAZARS ON
VG.LSE::.BLKB 1			;EDGE DETECTED FOR LAZAR SWITCH(1==>EDGE ON)
VG.LSN::.BLKB 1			;NEW LAZAR SWITCH VALUES
VG.LSO::.BLKB 1			;OLD PREVIOUS LAZAR SWITCH VALUES
				;---
				;IRQ, VG RAM DYNAMIC PICTURES
VG.FLS::.BLKB 1			;FLASH COLOR
VF.GNB::.BLKB 1			;FRAME TIMER FOR ALIEN GUN SHOT, SPARKLE BASE
VG.GNB::.BLKB 1			;ALIEN GUN SHOT, SPARKLE BASE
VF.GNT::.BLKB 1			;FRAME TIMER FOR ALIEN GUN SHOT, FUSEE TIPS
VG.GNT::.BLKB 1			;ALIEN GUN SHOT, FUSEE TIPS
VG.LZF::.BLKB 1			;LAZAR FIRE
VG.LZS::.BLKB 1			;LAZAR SPLASH
VG.MFL::.BLKB 1			;MEDIUM FLASH FOR MESSAGES, TIMER
				;---
GMSYNC::.BLKB 1			;GAME PLAY SYNC
GMTIMR::.BLKB 1
VGSYNC::.BLKB 1
VGTIMR::.BLKB 1
PHASE::	.BLKB 1
FRAME::	.BLKB 2
FRAMEH	==FRAME
FRAMEL	==FRAME+1
				;---
				;PROTON TORPEDO INFO(OOPS, SAME AS PT FOR POTS)
PT.LZF::.BLKB 1			;0==>LAZAR CAN FIRE PT,1==>REQUEST,0FF==>OFF AND AWAY
PT.LIV::.BLKB 1			;0==>PT DEAD,1==>PT ALIVE
PT.X::	.BLKB 2			;X COORD
PT.Y::	.BLKB 2			;Y COORD
PT.Z::	.BLKB 2			;Z COORD
				;---
				;CPU-COMPUTER USER
CP.AC::	.BLKB 1			;ACCERLERATE
CP.PT::	.BLKB 1			;PITCH
CP.RL::	.BLKB 1			;ROLL
CP.YW::	.BLKB 1			;YAW
CP.SHF::.BLKB 1			;SHIFT TEMP
				;---
				;CHOREOGRAPHY
				;---
				;RHEOSTAT
RH.DIR::.BLKB 1			;DIRECTION OF TURN
RH.SPD::.BLKB 1			;SPEED OF SLEWING
				;---
				;RANDOM NUMBER
RND.S1::	.BLKB 1
RND.S2::	.BLKB 1
RND.S3::	.BLKB 1
				;---
				;DETH STAR
DT.SCL::.BLKB 2			;SCALING FOR VIEW
DT.STP::.BLKB 2			;STEP SIZE FOR SCALING DETH STAR
				;---
				;SHIP 1
S1.PRM::.BLKB 2
S.SC87::.BLKB 1			;SCORE,VERY HI DIGITS
S.SC65::.BLKB 1			;SCORE, HI DIGITS
S.SC43::.BLKB 1			;SCORE, MID DIGITS
S.SC21::.BLKB 1			;SCORE, LO DIGITS
S.GAS::	.BLKB 1			;GAS LEFT
S.CAN::	.BLKB 1			;GAS CAN--NEW FUEL
S.GLW::	.BLKB 1			;GLOWING FROM HIT
S.ROL::	.BLKB 1			;ROLLING FROM HIT
				;---
				;SHIP 2
S2.PRM::	.BLKB 2
				;---
				;RHEOSTAT
				;*** IRQ/MAINLINE INTERACTIONS !!!!
RH$LO	==0			;LO VALUE-MINIMUM
RH$LT	==1			;LO VALUE ON TRIAL
RH$SP	==2			;SPREAD MULTIPLIER
RH$ST	==3			;SPREAD CHANGE TIMER

RH$NML	==4			;NORMALZIED POT VALUE
RH$POS	==5			;SITE POSITION
RH$RAT	==7			;RATE OF TURN
RH$RSD	==8			;MAGIC  TIC RESIDUE
RH$IZ	==9			;SIZE OF BLOCK

RHEO::
RHEOP::	.BLKB RH$IZ		;PITCH BLOCK
RHEOY::	.BLKB RH$IZ		;YAW BLOCK
				;
				;****SPECIAL
RHEOR	==.-RH$RSD		;ROLL BLOCK(GROUND FLYING, RH$RSD ONLY USED)
	.BLKB 1
				;---
				;***SPECIAL
VG.RSX	==RHEOY+RH$POS		;VG 16BIT SITE POSITION
VG.RSY	==RHEOP+RH$POS		;VGY UP/DOWN FROM PITCH RHEOSTAT
				;---
				;SITE
SI.CX::	.BLKB 2			;CURRENT VIDEO X LOC
SI.CY::	.BLKB 2			;CURRENT VIDEO Y LOC
SI.RSX::.BLKB 2			;SITE, REAL SCREEN X POSITION
SI.RSY::.BLKB 2			;SITE, REAL SCREEN Y UP/DOWN POSITION
				;---
				;STARS
ST.CNT::.BLKB 1
ST.BIC::.BLKB 1			;CURRENT BIC VALUE,HI BANK
ST.BRT::.BLKB 1			;BRITENESS TO USE
ST.RAM::.BLKB 2			;CURRENT MATH RAM POINTER
ST.GNR::.BLKB 2			;GENERATE STAR AT THIS MATH RAM
ST.GNB::.BLKB 1			;GEN'D STAR HAS THIS BIC,HI BANK
ST.UX::	.BLKB 2			;VIEWER X POSITION
				;---
				;GAS
GS.GLW::.BLKB 1			;GLOWING ONCE MORE, LOSE SOME GAS
GS.HIT::.BLKB 1			;GAS BEING LOST, ANIMATE NEW GAUGE
GS.LEN::.BLKB 1			;LENGTH OF NEW GAUGE TO VIEW
GS.OLD::.BLKB 1			;OLD VALUE OF GAS TO FLICKER
GS.VBS::.BLKB 1			;VIEW BASELINE OF GAUGE
GS.VUP::.BLKB 1			;VIEW UPSTROKE OF GAUGE
GS.VTP::.BLKB 1			;VIEW TOPSTROKE OF GAUGE
				;---
				;BASE STATION
BS.EFL::.BLKB 1			;FLAG FOR END IN SIGHT
BS.ELC::.BLKB 2			;LOCATION OF END
BS.PFL::.BLKB 1			;FLAG FOR PORT IN SIGHT
BS.PLC::.BLKB 2			;LOCATION OF PORT
BS.RPT::.BLKB 1			;0 ==> FIRST TIME PER WAVE,ELSE REPEATING 
				;SSP AND SPD SET BUT NOT USED
BS.DSP::.BLKB 1			;DISPLACEMENT TO BASE WEDGE
BS.FLG::.BLKB 1			;FLAG FOR WHICH PANEL TO USE
BS.PRB::.BLKB 1			;PROBABILITY FOR TURRET SHOTS
				;---
				;PANELS IN BASE STATION
PN.DES::.BLKB 1			;DESIRED PANEL TYPE
PN.ID::	.BLKB 1			;IDENT OF PANEL OBJECT
PN.FLG::.BLKB 1			;HOLDS CURRENT PANEL FLAGS
				;---
				;EXPLOSION
XP.CNT::.BLKB 2			;TIMER FOR DETH EXPLOSION PHASES
XP.PHS::.BLKB 1			;CURRENT PHASE IN DETH EXPLOSION
XP.HDQ::.BLKB 1			;INDEX TO HEAD OF EXPLOSION QUEUE
				;---
				;GRND, GD PHASE
GD.ACT::.BLKB 2			;ACTUAL ROLLED AMOUNT
GD.ROL::.BLKB 2			;ROLL AMOUNT AFTER HIT
GD.SEQ::.BLKB 1			;SEQUENCING WHICH TOWERS
				;---
				;GUNS
GN.PTR::.BLKB 2			;PACKET POINTER
GN.SWO::.BLKB 1
GN.SWN::.BLKB 1
GN.SWE::.BLKB 1
				;===
				;SPECIAL MULTI-MAPPED FOR TEST ROUTINE
				;MUST BE HI, BUT ALSO UNDER 0C0 OFFSET
				;
				;VWBYTE
BT.SUP::.BLKB 1			;HOW MANY HI DIGITS TO ZERO SUPPRESS
				;---
MESNUM::.BLKB 1			;MESSAGE NUMBER
MSYOFF::.BLKB 2			;Y OFFSET FOR MESSAGES--TO FACILITATE SCROLL
MESPNT::.BLKB 2			;POINTER TO STRING
				;
	.IIF GE,.-DPRAM-0C0,.ERROR . ;SPECIAL TEST VALS MUST ALL BE UNDER 0C0
				;
				;===
				;LAZARS
LZ.CX::	.BLKB 2			;VIDSCREEN CURRENT LEFT/RIGHT, 10BIT
LZ.CY::	.BLKB 2			;UP/DOWN 10BIT
LZ.EDG::.BLKB 1			;START UP ON EDGES
LZ.RSX::.BLKB 2			;16BIT LEFT/RIGHT LAZAR POSITION
LZ.RSY::.BLKB 2			;UP/DOWN POSITION
LZ.ON::	.BLKB 1			;LAZAR IS ON
LZ.HIT::.BLKB 1			;LAZAR HAS HIT SOMETHING
LZ.PNW::.BLKB 2			;PANEL WIDTH, BASE AT ZERO
LZ.PNX::.BLKB 2			;PANEL DEPTH(X),BASE AT ZERO
				;---
				;COLLISION WITH PLAYERS LAZARS
CL.AP::	.BLKB 2			;ALIEN POINTER
CL.ADS::.BLKB 2			;DISTANCE TO ALIEN
CL.BP::	.BLKB 2			;BUNKER POINTER
CL.BDS::.BLKB 2			;DISTANCE TO BUNKER
CL.GP::	.BLKB 2			;GUNS POINTER
CL.GDS::.BLKB 2			;DISTANCE TO GUNS
CL.TP::	.BLKB 2			;TOWER POINTER
CL.TDS::.BLKB 2			;DISTANCE TO TOWER
				;---
				;OBJ ROUTINES
BJ.BIC::.BLKB 2			;INIT: CURRENT BIC VALUE
BJ.RAM::.BLKB 2			;INIT: CURRENT RAM USAGE
BJ.CX::	.BLKB 2			;CURRENT VIDEO X
BJ.CY::	.BLKB 2			;CURRENT VIDEO Y
BJ.BRT::.BLKB 1			;BRITNESS
BJ.DMC::.BLKB 1			;DAMAGE COUNT
BJ.ID::	.BLKB 1			;ID FOR OBJECT, OFFSET INTO POINTER TABLES
				;---
				;WAVES
WV.LVL::.BLKB 1
WV.CHP::.BLKB 2			;CHOREOGRAPHY POINTER
WV.SHP::.BLKB 2			;SHAPE AND PARMS POINTER
WV.BGP::.BLKB 2			;BEGIN LOCATION POINTER
WV.LP::	.BLKB 2			;LOOP TABLE POINTER
WV.LIV::.BLKB 1			;# OF ALIEN LIVES LEFT TO CURRENT WAVE
				;===

.100	==.-DPRAM		;DO NOT CROSS 100 BOUNDARY
.IIF GT,.100-100,.ERROR D-PAGE OVERFLOW
				;---
	.PAGE
	.SBTTL	NON-DPAGE LOCATIONS
	.=100+RAM
				;---
ALIEN::				;ALIEN PARAMETERS
A$UVP	==0			;UNIT VECTOR POINTER
A$BIC	==2			;BLOCK INDEX COUNTER, LO BANK
A$TYP	==3			;TYPE (O.DEAD; 3.EXPLODING
A$PIC	==4			;PICTURE #
A$DIE	==5			;PROCESS OF DIEING
A$GLW	==6			;PROCESS OF GLOWING
A$HTA	==7			;HITS AVAILABLE BEFORE DIEING
A$DMC	==8			;CUNENT DAMAGE COUNT
A$ROL	==9			;FORCE ROLL OF SHIP
A$AIM	==10.			;AIMED AT PLAYER
A$TRGT	==11.			;=O.GO FOR HOME BASE; =-1.PLAYER
;A$SPD	==12.			;UPDATE RATE IN DEEP SPACE
A$CHPC	==13.			;PC FOR CURRENT CHOREOG
A$CHOP	==15.			;OP CODE
A$CHTM	==16.			;TIMER
A$CHTW	==17.			;TWIRL FLAGS
A$CHMV	==18.			;TW+1, MOVE FLAGS
A$CHCN	==19.			;CONTROL MASK, UNTIL STRUCTURE
A$CHST	==21.			;STATUS TESTED BY CONTROL
A$CHRT	==23.			;RETURN PC, SUBROUTINE
A$IZE	==25.			;# OF BYTES PER RECORD
A$EQ	==3			;# OF ALIEN RECORDS IN SEQUENCE
	.BLKB A$EQ*A$IZE
ALIENZ::
				;---
GUN::				;GUN SHOTS RECORDS
G$UVP	==0			;MATH BOX POINTER
G$BIC	==2			;MATH BOX BIC, LO BANK
G$TYP	==3			;DESCRIPTOR OF GUN TYPE
G$MOV	==4			;MOVE ROUTINE
G$TMR	==5			;TIMER
G$IZE	==6
G$EQ	==6
GUNS::
GUNA::
	.BLKB G$IZE*G$EQ
GUNSZ::
GUNAZ::
GUNZ::
				;---
				;
				;ONE BIC SLOT PER OBJECT, EVEN 2-BLOCK BOUNDARY
BJ$EQ	==26.
BJBIC::	.BLKB BJ$EQ
BJBICZ::
				;---
				;PANELS
PANEL::
PNLW::				;LEFT WALL
	.BLKB 16.
PNLWZ::
PNLW$IZ	==PNLWZ-PNLW

PNRW::				;RIGHT WALL
	.BLKB 16.
PNRWZ::
PNRW$IZ	==PNRWZ-PNRW

PANELZ::
				;===
				;BASE/PANEL PIE/WEDGE VARS
PI.NRW::.BLKB 2			;PIE POINTER TO NEAR WEDGE
PI.FRW::.BLKB 2			;PIE POINTER TO FAR WEDGE
PI.CRW::.BLKB 2			;TEMP CURRENT WEDGE

WG.NRP::.BLKB 2			;WEDGE, NEAR POINTER
WG.NRL::.BLKB 2			;WEDGE, NEAR LOCATION
WG.FRP::.BLKB 2			;FAR POINTER
WG.FRL::.BLKB 2			;FAR LOCATION
WG.FTL::.BLKB 2			;FUTURE LOCATION
WG.CRP::.BLKB 2			;TEMP CURRENT POINTER
WG.CRL::.BLKB 2			;TEMP CURRENT LOCATION
WG.FCB::.BLKB 1			;BUMP FORCE FIELD DEPTH CUE
WG.FCC::.BLKB 1			;CURRENT FORCE FIELD DEPTH CUE
WG.FCD::.BLKB 1			;DISP INTO PANEL BLOCKS
WG.FCU::.BLKB 1			;ACTUAL STARTING FORCE FIELD DEPTH CUE
WG.FCZ::.BLKB 1			;Z-BRITE VAL
				;===

GDRAM::				;GROUND RAM VALS
GD$TYP	==0
GD$IZ	==1
GD$EQ	==32.
	.BLKB GD$IZ*GD$EQ
GDRAMZ::
				;===
				;EXPLOSION
XPQUE::				;QUEUE FOR EXPLOSION PICTURES
XP$CX	==0			;EXPLOSION CENTER, X LOC
XP$CY	==2			;EXPLOSION CENTER, Y LOC
XP$CZ	==4			;EXPLOSION CENTER, Z LOC
XP$MX	==6			;MUNGE FOR CENTER,X
XP$MY	==8			;MUNGE FOR CENTER, Y
XP$MZ	==10.			;MUNGE FOR CENTER, Z
XP$TYP	==12.			;ANIMATION TYPE
XP$TMR	==13.			;ANIMATION TIMER
XP$IZE	==14.
XP$EQ	==8.			;MAX NUMBER OF EXPLOSION PIECES
	.BLKB XP$IZE*XP$EQ
XPQUEZ::
;
;MESSAGE BLOCKS
;		NORMAL MESSAGES
MES$EQ	==20.
MESBLK::
	.BLKB MES$EQ		;ALLOWS MAXIMUM OF 20 MESSAGES AT ONCE
;		SPECIAL MESSAGES
SPM$EQ	==8
SPM$IZ	==5
SPMBLK::
	.BLKB SPM$IZ*SPM$EQ
SPMBLZ::
				;---
				;HI SCORE TABLE
NHSCRS	==10.
NINTLS	==3
NDIGTS	==4
HSCORS::
	.BLKB NHSCRS*NDIGTS
HSCORZ::

INITLS::
	.BLKB NHSCRS*NINTLS
INITLZ::
				;---
				;BCD TO BIN CONVERT
BCD::	.BLKB 3			;BCD HOLDER
BIN::	.BLKB 2			;BINARY HOLDER
				;---
				;MESSAGES
MESLST::.BLKB 2			;POINTER INTO MESSAGE LIST
NXTMES::.BLKB 1
LSTMES::.BLKB 1
SPMLST::.BLKB 2			;POINTER INTO SPECIAL MESSAGE LIST
SPMNXT::.BLKB 1			;SP MESS NUMBER
SPMTIM::.BLKB 2			;SP MESS TIMER
SPMALM::.BLKB 2			;SP MESS ALARM
BN.CNT::.BLKB 2
BN.COL::.BLKB 2
BN.SCL::.BLKB 2
				;---
				;HIGH SCORE HANDLER
HSCNT::	.BLKB 2			;COUNTER FOR HIGH SCORE DISPLAY
UPDFLG::.BLKB 2			;INDEX INTO HIGH SCORE TABLE ( INITIALS )
UPDINT::.BLKB 1			;CURRENT INITIAL 0-2
INITL::	.BLKB 2			;VALUE OF CURRENT INITIAL
HSYPOS::.BLKB 2			;POINTER TO TABLE OF HISCORE Y POSITIONS
HS.DIR::.BLKB 1			;DIRECTION FOR CURSOR TRAVEL
				;---
				;EAROM
EECOIN::.BLKB 1			;COIN STATUS USED FOR ACCOUNTING IN NOVRAM
EEVAL::	.BLKB 1			;VALUE OF OPTIONS IN NOVRAM
EEINDX::.BLKB 1			;INDEX FOR OPTION SWITCHES IN NOVRAM
NVTSTR::.BLKB 1			;NVRAM TEST RESULTS
NVADDR::.BLKB 2			;NVRAM ERROR ADDRESS
TEMP::	.BLKB 4
TEMP2::	.BLKB 4
TMPCNT::.BLKB 2
TIMER::	.BLKB 8			;RAM BASED TIME, GET TRANSFERED TO NOVRAM OCCAISIONALLY
				;---
				;MISC FROM MAINLINE
PH.YOF::.BLKB 2
PH.TIM::.BLKB 2
PH.COL::.BLKB 2
				;---
				;LATE ADDITIONS
BS.WAV::.BLKB 1			;BASE WAVE #
GD.WAV::.BLKB 1			;GROUND WAVE #
SP.WAV::.BLKB 1			;SPACE WAVE #
GM.WAV::.BLKB 1			;OVERALL GAME WAVE #
GM.DWAV::.BLKB 1		;	GM.WAV IN BCD FOR VIEWING
GM.BMP:: .BLKB 1		;AMOUNT TO BUMP WAVE # BY
GM.DIF:: .BLKB 1		;OPTION SWITCH DIFFICULTY ADDER
WV.HRD:: .BLKB 1		;HARDNESS FOR CURRENT WAVE PHASE
				;
GD.TWL::.BLKB 1			;GROUND, TOWERS LEFT TO SHOOT AT, BCD
LZ.ALT::.BLKB 1			;ALTERNATE LAZARS
LZ.GX::	.BLKB 2			;GUN SHIFT IN X
LZ.GY::	.BLKB 2			;GUN SHIFT IN Y
				;
SP.COL::.BLKB 2			;SPLASH COLOR
SP.LOC::.BLKB 1			;HI BYTE OF X DISTANCE AWAY
SP.TYP::.BLKB 1			;TYPE OF SPLASH, QUADS
				;
ST.UY::	.BLKB 2			;PLAYERS UNIVERSE Y FOR STARS
ST.UZ:: .BLKB 2			;PLAYERS UNIVERSE Z FOR STARS
				;
ENDFLG:: .BLKB 1		;ACCOUNTING FLAG -- KILLED DEATH STAR
				;
				;SCORING
SC.ADD:: .BLKB 3		;AMOUNT BEING ADDED TO SCORE, BCD
SC.ADT:: .BLKB 1		;TIMER FOR DISPLAYING ADDED AMOUNT
SC.FWV:: .BLKB 1		;0==>STILL ON FIRST WAVE,<>0==>PASSED FIRST WAVE
TWRMUL:: .BLKB 3		;MULTIPLIER AMOUNT FOR EACH TOWER,BCD
				;---
COINSP:: .BLKB 1		;I'VE GOT A QUARTER THAT SAYS . . .
				;---
AM.PTR:: .BLKB 2		;AIM POINTER TO ALIEN BEING CHASED
				;---
MUSTIM:: .BLKB 1		;FLAG FOR HEARING MUSIC DURING ATTRACT
				;---
				;QUESTION FLAGS FOR SPECIAL STATES
Q.ATP::	.BLKB 1			;ALL TOWER TOPS HIT (0==>NO, <>0==>YES), MSG
Q.FRC::	.BLKB 1			;TRENCH - USE THE FORCE (0 TRYIT,<0 FAIL,>0 OK)
				;			MSG, SCORE
Q.GHIT::.BLKB 1			;FIRST GUN HIT PLAYER, TALKEE
Q.PBB::	.BLKB 1			;BIC OF CURRENT PASSBY ALIEN, AUDIO
Q.PBD::	.BLKB 2			;DISTANCE/FLAG OF PASSBY ALIEN, AUDIO
Q.RTHV::.BLKB 1			;FIRST DARTH IN VIEW, TALKEE
Q.SHK::	.BLKB 1			;FIRST CANT SHAKE ALIEN SHOTS, TALKEE
Q.KTW::	.BLKB 1			;KILL OF TOWERS, PREPARE FOR TRANSITION
Q.BSH:: .BLKB 1			;BASHED OUR NOSES, MSG
				;---
RPIE::				;RANDOM PIES USED BY BASE TRENCH GENERATOR
RPIE$Q	==16.			;MUST MATCH PIE SKELETON IN WSBASE
	.BLKB 2*RPIE$Q
RPIEZ::
				;---
ITEMP::	.BLKB 4			;TEMP FOR USE BY INTERRUPT ROUTINES
				;===

	.PAGE
	.SBTTL 	LARGE TEMP ARRAYS
		;---
		;LARGE SHORT-TERM ARRAYS
		;*THEY MUST NOT INTERFERE WITH EACH OTHER!
.780==400+RAM	;CORRECT FOR OFFSET LATER
		;---
.400	==.-RAM	;DO NOT CROSS 400 BOUNDARY
.IIF GT,.400-400,.ERROR RAM ALLOCATION OVERFLOW

				;===
				;#1: OBJPNT,OBJDRW
	.=400+RAM		;ARRAYS
BJ.PNT::.BLKB 64.*2*2		;PERSPECTED POINTS

.IIF GT,.-.780,.780=.		;DO NOT CROSS 780 BOUNDARY
				;===
				;#2: STARVW
	.=400+RAM

ST$QTL	==0			;POINTS TO TAIL
ST$QHD	==2			;POINTS TO HEAD OF QU (FIFO)
ST$QCX	==4			;CURRENT X VG POSITION
ST$QCY	==6			;CURRENT Y FOR RELATIVE VG CALCS
ST$IZQ	==8
ST$EQQ	==16.			;DIVVY SCREEN INTO 4 BY 4 (16. SECTORS)
				;
				;VECTORIZED STAR POINTS
ST$PP	==0			;FORWARD POINTER *MUST BE ZERO OFFSET (@)*
ST$PX	==2			;VECTOR X COMPONENT
ST$PY	==4			;VECTOR Y COMPONENT
ST$IZP	==6
ST$EQP	==M$STNM		;NUMBER OF POTENIAL STARS
				;
ST.QU::	.BLKB ST$IZQ*ST$EQQ
ST.QUZ::
				;
				;VECTORIZED STAR POINTS
ST.PNT::.BLKB ST$IZP*ST$EQP
ST.PNZ::

.IIF GT,.-.780,.780=.		;DO NOT CROSS 780 BOUNDARY
				;===
				;#3: LAZARS
	.=400+RAM

LZPNT::				;FURTHER POINTS OF LAZAR
	.BLKB 6*14.		;16 SECTIONS, XYZ
LZPNTZ::

.IIF GT,.-.780,.780=.		;DO NOT CROSS 780 BOUNDARY
				;===
				;#4: EAROM SWAPPING TEST BUFFER
	.=400+RAM
EEBUF::
	.BLKB 256.

.IIF GT,.-.780,.780=.		;DO NOT CROSS 780 BOUNDARY
				;===

	.PAGE

.780==.780-RAM
.IIF GT,.780-780,.ERROR .780 ;RAM ALLOCATION OVERFLOW
		;---
	.=780+RAM

	;STACK FOLLOWS UP TO 7FF
	.PAGE
				;
C$AH	==1			;NEARBY ALIEN HAS BEEN HIT
C$AD	==2			;NEARBY ALIEN HAS DIED
C$AS	==4			;ALIEN HAS PLAYER IN SITES
C$AV	==8			;ALIEN HAS PLAYER IN FRONT VIEW
C$AG	==40			;ALIEN HAS FIRED A GUN
				;
C$PN	==400			;PLAYER IS NEAR THE ALIEN
C$PS	==800			;PLAYER HAS ALIEN IN SITES
C$PV	==1000			;PLAYER HAS ALIEN IN VIEW
C$PM	==2000			;PLAYER IS MIDDLIN NEAR TO ALIEN
				;===
	.PAGE
	.SBTTL	EEROM DEFINITIONS

EEROM	==NVRAM
EEROMZ	==NVRAMZ

	.=EEROM
				;AREA 0
DUPOPT::.BLKB 6			;BACKUP (DUPLICATE) OPTION SWITCH INFO
EECK0::	.BLKB 2			;CHECKSUM FOR AREA 0
				;---
				;AREA 1
SAVSCR::.BLKB 8*3		;SAVED HIGH SCORES
SAVINT::.BLKB 6*3		;SAVED HIGH SCORE INITIALS
EECK1::	.BLKB 2			;CHECKSUM FOR AREA 1
				;---
				;AREA 2
POTSAV::.BLKB 8			;POT VALUES
AMECH::.BLKB 6			;AUX COIN COUNT
LMECH::.BLKB 6			;LEFT COIN COUNT
RMECH::	.BLKB 6			;RIGHT COIN COUNT
GAMES::	.BLKB 6			;NUMBER OF GAMES PLAYED
TTIME::	.BLKB 8			;TOTAL GAME TIMER
TIMEON::.BLKB 8			;TOTAL TIME GAME ON
HISTOG::.BLKB 36.		;GAME TIME HISTOGRAM
ZHISTOG::			;END OF HISTOGRAM TABLE
ENDGAM::.BLKB 6			;MAXIMUM WAVE LEVEL ACHIEVED
EECK2::.BLKB 2			;CHECKSUM FOR AREA 2
				;---
				;AREA 3
OPTS0::	.BLKB 2			;COIN MODE OPTIONS SWITCHES
OPTS1::	.BLKB 2			;GAME MODE OPTIONS
OPTS2::	.BLKB 2			;MISC. OPTIONS
EECK3::	.BLKB 2			;CHECKSUM FOR AREA 3

RESETS::.BLKB 2			;FLAGS FOR CLEARING AREAS

NAREA	==3			;# OF LAST AREA ( INDEX FOR OPTION AREA )
				;===
	.PAGE
	.=PROG
				;===
	.END

                                                                                                                                                                             